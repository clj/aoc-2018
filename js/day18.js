/* Generated by the Nim Compiler v0.19.9 */
/*   (c) 2018 Andreas Rumpf */

var framePtr = null;
var excHandler = 0;
var lastJSError = null;
if (typeof Int8Array === 'undefined') Int8Array = Array;
if (typeof Int16Array === 'undefined') Int16Array = Array;
if (typeof Int32Array === 'undefined') Int32Array = Array;
if (typeof Uint8Array === 'undefined') Uint8Array = Array;
if (typeof Uint16Array === 'undefined') Uint16Array = Array;
if (typeof Uint32Array === 'undefined') Uint32Array = Array;
if (typeof Float32Array === 'undefined') Float32Array = Array;
if (typeof Float64Array === 'undefined') Float64Array = Array;
var NTI207035 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI205073 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI40314 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI36016 = {size: 0,kind: 40,base: null,node: null,finalizer: null};
var NTI40308 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI40226 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI40230 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI40252 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI205076 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI205071 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI206879 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI36038 = {size: 0,kind: 2,base: null,node: null,finalizer: null};
var NTI206834 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI188754 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI71448 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI71444 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI71440 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI71436 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI71432 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI71428 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI71424 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI71420 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI71416 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI71412 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI71408 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI71404 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI71400 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI71396 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI71392 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI71388 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI71384 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI71380 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI71376 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI71372 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI71205 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI71283 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI71281 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI71227 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI71565 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI71563 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI71229 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI71561 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI71231 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI71614 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI71271 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI71269 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI71612 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI36006 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI71700 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI71275 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI71273 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI36042 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI36032 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI40208 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI71225 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI71223 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI71239 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI71237 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI251028 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI173873 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI36040 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
NTI173873.base = NTI36040;
var NNI71225 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI71225.node = NNI71225;
var NNI40208 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI40208.node = NNI40208;
NTI71225.base = NTI40208;
NTI71223.base = NTI71225;
NTI71700.base = NTI71237;
var NNI71275 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "acceptCharset", len: 0, typ: NTI36042, name: "acceptCharset", sons: null}, 
{kind: 1, offset: "action", len: 0, typ: NTI36042, name: "action", sons: null}, 
{kind: 1, offset: "autocomplete", len: 0, typ: NTI36042, name: "autocomplete", sons: null}, 
{kind: 1, offset: "elements", len: 0, typ: NTI71700, name: "elements", sons: null}, 
{kind: 1, offset: "encoding", len: 0, typ: NTI36042, name: "encoding", sons: null}, 
{kind: 1, offset: "enctype", len: 0, typ: NTI36042, name: "enctype", sons: null}, 
{kind: 1, offset: "length", len: 0, typ: NTI36006, name: "length", sons: null}, 
{kind: 1, offset: "method", len: 0, typ: NTI36042, name: "method", sons: null}, 
{kind: 1, offset: "noValidate", len: 0, typ: NTI36032, name: "noValidate", sons: null}, 
{kind: 1, offset: "target", len: 0, typ: NTI36042, name: "target", sons: null}]};
NTI71275.node = NNI71275;
NTI71275.base = NTI71239;
NTI71273.base = NTI71275;
var NNI71271 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "defaultSelected", len: 0, typ: NTI36032, name: "defaultSelected", sons: null}, 
{kind: 1, offset: "selected", len: 0, typ: NTI36032, name: "selected", sons: null}, 
{kind: 1, offset: "selectedIndex", len: 0, typ: NTI36006, name: "selectedIndex", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI36042, name: "text", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI36042, name: "value", sons: null}]};
NTI71271.node = NNI71271;
NTI71271.base = NTI71239;
NTI71269.base = NTI71271;
NTI71612.base = NTI71269;
NTI71614.base = NTI71269;
var NNI71239 = {kind: 2, len: 19, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "classList", len: 0, typ: NTI71223, name: "classList", sons: null}, 
{kind: 1, offset: "checked", len: 0, typ: NTI36032, name: "checked", sons: null}, 
{kind: 1, offset: "defaultChecked", len: 0, typ: NTI36032, name: "defaultChecked", sons: null}, 
{kind: 1, offset: "defaultValue", len: 0, typ: NTI36042, name: "defaultValue", sons: null}, 
{kind: 1, offset: "disabled", len: 0, typ: NTI36032, name: "disabled", sons: null}, 
{kind: 1, offset: "form", len: 0, typ: NTI71273, name: "form", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI36042, name: "name", sons: null}, 
{kind: 1, offset: "readOnly", len: 0, typ: NTI36032, name: "readOnly", sons: null}, 
{kind: 1, offset: "options", len: 0, typ: NTI71612, name: "options", sons: null}, 
{kind: 1, offset: "selectedOptions", len: 0, typ: NTI71614, name: "selectedOptions", sons: null}, 
{kind: 1, offset: "clientWidth", len: 0, typ: NTI36006, name: "clientWidth", sons: null}, 
{kind: 1, offset: "clientHeight", len: 0, typ: NTI36006, name: "clientHeight", sons: null}, 
{kind: 1, offset: "contentEditable", len: 0, typ: NTI36042, name: "contentEditable", sons: null}, 
{kind: 1, offset: "isContentEditable", len: 0, typ: NTI36032, name: "isContentEditable", sons: null}, 
{kind: 1, offset: "dir", len: 0, typ: NTI36042, name: "dir", sons: null}, 
{kind: 1, offset: "offsetHeight", len: 0, typ: NTI36006, name: "offsetHeight", sons: null}, 
{kind: 1, offset: "offsetWidth", len: 0, typ: NTI36006, name: "offsetWidth", sons: null}, 
{kind: 1, offset: "offsetLeft", len: 0, typ: NTI36006, name: "offsetLeft", sons: null}, 
{kind: 1, offset: "offsetTop", len: 0, typ: NTI36006, name: "offsetTop", sons: null}]};
NTI71239.node = NNI71239;
NTI71229.base = NTI71231;
NTI71561.base = NTI71229;
NTI71563.base = NTI71229;
NTI71565.base = NTI71229;
var NNI71227 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"1": {kind: 1, offset: 1, typ: NTI71227, name: "ElementNode", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI71227, name: "AttributeNode", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI71227, name: "TextNode", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI71227, name: "CDATANode", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI71227, name: "EntityRefNode", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI71227, name: "EntityNode", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI71227, name: "ProcessingInstructionNode", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI71227, name: "CommentNode", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI71227, name: "DocumentNode", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI71227, name: "DocumentTypeNode", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI71227, name: "DocumentFragmentNode", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI71227, name: "NotationNode", len: 0, sons: null}}};
NTI71227.node = NNI71227;
var NNI71283 = {kind: 2, len: 91, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "background", len: 0, typ: NTI36042, name: "background", sons: null}, 
{kind: 1, offset: "backgroundAttachment", len: 0, typ: NTI36042, name: "backgroundAttachment", sons: null}, 
{kind: 1, offset: "backgroundColor", len: 0, typ: NTI36042, name: "backgroundColor", sons: null}, 
{kind: 1, offset: "backgroundImage", len: 0, typ: NTI36042, name: "backgroundImage", sons: null}, 
{kind: 1, offset: "backgroundPosition", len: 0, typ: NTI36042, name: "backgroundPosition", sons: null}, 
{kind: 1, offset: "backgroundRepeat", len: 0, typ: NTI36042, name: "backgroundRepeat", sons: null}, 
{kind: 1, offset: "border", len: 0, typ: NTI36042, name: "border", sons: null}, 
{kind: 1, offset: "borderBottom", len: 0, typ: NTI36042, name: "borderBottom", sons: null}, 
{kind: 1, offset: "borderBottomColor", len: 0, typ: NTI36042, name: "borderBottomColor", sons: null}, 
{kind: 1, offset: "borderBottomStyle", len: 0, typ: NTI36042, name: "borderBottomStyle", sons: null}, 
{kind: 1, offset: "borderBottomWidth", len: 0, typ: NTI36042, name: "borderBottomWidth", sons: null}, 
{kind: 1, offset: "borderColor", len: 0, typ: NTI36042, name: "borderColor", sons: null}, 
{kind: 1, offset: "borderLeft", len: 0, typ: NTI36042, name: "borderLeft", sons: null}, 
{kind: 1, offset: "borderLeftColor", len: 0, typ: NTI36042, name: "borderLeftColor", sons: null}, 
{kind: 1, offset: "borderLeftStyle", len: 0, typ: NTI36042, name: "borderLeftStyle", sons: null}, 
{kind: 1, offset: "borderLeftWidth", len: 0, typ: NTI36042, name: "borderLeftWidth", sons: null}, 
{kind: 1, offset: "borderRight", len: 0, typ: NTI36042, name: "borderRight", sons: null}, 
{kind: 1, offset: "borderRightColor", len: 0, typ: NTI36042, name: "borderRightColor", sons: null}, 
{kind: 1, offset: "borderRightStyle", len: 0, typ: NTI36042, name: "borderRightStyle", sons: null}, 
{kind: 1, offset: "borderRightWidth", len: 0, typ: NTI36042, name: "borderRightWidth", sons: null}, 
{kind: 1, offset: "borderStyle", len: 0, typ: NTI36042, name: "borderStyle", sons: null}, 
{kind: 1, offset: "borderTop", len: 0, typ: NTI36042, name: "borderTop", sons: null}, 
{kind: 1, offset: "borderTopColor", len: 0, typ: NTI36042, name: "borderTopColor", sons: null}, 
{kind: 1, offset: "borderTopStyle", len: 0, typ: NTI36042, name: "borderTopStyle", sons: null}, 
{kind: 1, offset: "borderTopWidth", len: 0, typ: NTI36042, name: "borderTopWidth", sons: null}, 
{kind: 1, offset: "borderWidth", len: 0, typ: NTI36042, name: "borderWidth", sons: null}, 
{kind: 1, offset: "bottom", len: 0, typ: NTI36042, name: "bottom", sons: null}, 
{kind: 1, offset: "captionSide", len: 0, typ: NTI36042, name: "captionSide", sons: null}, 
{kind: 1, offset: "clear", len: 0, typ: NTI36042, name: "clear", sons: null}, 
{kind: 1, offset: "clip", len: 0, typ: NTI36042, name: "clip", sons: null}, 
{kind: 1, offset: "color", len: 0, typ: NTI36042, name: "color", sons: null}, 
{kind: 1, offset: "cursor", len: 0, typ: NTI36042, name: "cursor", sons: null}, 
{kind: 1, offset: "direction", len: 0, typ: NTI36042, name: "direction", sons: null}, 
{kind: 1, offset: "display", len: 0, typ: NTI36042, name: "display", sons: null}, 
{kind: 1, offset: "emptyCells", len: 0, typ: NTI36042, name: "emptyCells", sons: null}, 
{kind: 1, offset: "cssFloat", len: 0, typ: NTI36042, name: "cssFloat", sons: null}, 
{kind: 1, offset: "font", len: 0, typ: NTI36042, name: "font", sons: null}, 
{kind: 1, offset: "fontFamily", len: 0, typ: NTI36042, name: "fontFamily", sons: null}, 
{kind: 1, offset: "fontSize", len: 0, typ: NTI36042, name: "fontSize", sons: null}, 
{kind: 1, offset: "fontStretch", len: 0, typ: NTI36042, name: "fontStretch", sons: null}, 
{kind: 1, offset: "fontStyle", len: 0, typ: NTI36042, name: "fontStyle", sons: null}, 
{kind: 1, offset: "fontVariant", len: 0, typ: NTI36042, name: "fontVariant", sons: null}, 
{kind: 1, offset: "fontWeight", len: 0, typ: NTI36042, name: "fontWeight", sons: null}, 
{kind: 1, offset: "height", len: 0, typ: NTI36042, name: "height", sons: null}, 
{kind: 1, offset: "left", len: 0, typ: NTI36042, name: "left", sons: null}, 
{kind: 1, offset: "letterSpacing", len: 0, typ: NTI36042, name: "letterSpacing", sons: null}, 
{kind: 1, offset: "lineHeight", len: 0, typ: NTI36042, name: "lineHeight", sons: null}, 
{kind: 1, offset: "listStyle", len: 0, typ: NTI36042, name: "listStyle", sons: null}, 
{kind: 1, offset: "listStyleImage", len: 0, typ: NTI36042, name: "listStyleImage", sons: null}, 
{kind: 1, offset: "listStylePosition", len: 0, typ: NTI36042, name: "listStylePosition", sons: null}, 
{kind: 1, offset: "listStyleType", len: 0, typ: NTI36042, name: "listStyleType", sons: null}, 
{kind: 1, offset: "margin", len: 0, typ: NTI36042, name: "margin", sons: null}, 
{kind: 1, offset: "marginBottom", len: 0, typ: NTI36042, name: "marginBottom", sons: null}, 
{kind: 1, offset: "marginLeft", len: 0, typ: NTI36042, name: "marginLeft", sons: null}, 
{kind: 1, offset: "marginRight", len: 0, typ: NTI36042, name: "marginRight", sons: null}, 
{kind: 1, offset: "marginTop", len: 0, typ: NTI36042, name: "marginTop", sons: null}, 
{kind: 1, offset: "maxHeight", len: 0, typ: NTI36042, name: "maxHeight", sons: null}, 
{kind: 1, offset: "maxWidth", len: 0, typ: NTI36042, name: "maxWidth", sons: null}, 
{kind: 1, offset: "minHeight", len: 0, typ: NTI36042, name: "minHeight", sons: null}, 
{kind: 1, offset: "minWidth", len: 0, typ: NTI36042, name: "minWidth", sons: null}, 
{kind: 1, offset: "overflow", len: 0, typ: NTI36042, name: "overflow", sons: null}, 
{kind: 1, offset: "padding", len: 0, typ: NTI36042, name: "padding", sons: null}, 
{kind: 1, offset: "paddingBottom", len: 0, typ: NTI36042, name: "paddingBottom", sons: null}, 
{kind: 1, offset: "paddingLeft", len: 0, typ: NTI36042, name: "paddingLeft", sons: null}, 
{kind: 1, offset: "paddingRight", len: 0, typ: NTI36042, name: "paddingRight", sons: null}, 
{kind: 1, offset: "paddingTop", len: 0, typ: NTI36042, name: "paddingTop", sons: null}, 
{kind: 1, offset: "pageBreakAfter", len: 0, typ: NTI36042, name: "pageBreakAfter", sons: null}, 
{kind: 1, offset: "pageBreakBefore", len: 0, typ: NTI36042, name: "pageBreakBefore", sons: null}, 
{kind: 1, offset: "pointerEvents", len: 0, typ: NTI36042, name: "pointerEvents", sons: null}, 
{kind: 1, offset: "position", len: 0, typ: NTI36042, name: "position", sons: null}, 
{kind: 1, offset: "right", len: 0, typ: NTI36042, name: "right", sons: null}, 
{kind: 1, offset: "scrollbar3dLightColor", len: 0, typ: NTI36042, name: "scrollbar3dLightColor", sons: null}, 
{kind: 1, offset: "scrollbarArrowColor", len: 0, typ: NTI36042, name: "scrollbarArrowColor", sons: null}, 
{kind: 1, offset: "scrollbarBaseColor", len: 0, typ: NTI36042, name: "scrollbarBaseColor", sons: null}, 
{kind: 1, offset: "scrollbarDarkshadowColor", len: 0, typ: NTI36042, name: "scrollbarDarkshadowColor", sons: null}, 
{kind: 1, offset: "scrollbarFaceColor", len: 0, typ: NTI36042, name: "scrollbarFaceColor", sons: null}, 
{kind: 1, offset: "scrollbarHighlightColor", len: 0, typ: NTI36042, name: "scrollbarHighlightColor", sons: null}, 
{kind: 1, offset: "scrollbarShadowColor", len: 0, typ: NTI36042, name: "scrollbarShadowColor", sons: null}, 
{kind: 1, offset: "scrollbarTrackColor", len: 0, typ: NTI36042, name: "scrollbarTrackColor", sons: null}, 
{kind: 1, offset: "tableLayout", len: 0, typ: NTI36042, name: "tableLayout", sons: null}, 
{kind: 1, offset: "textAlign", len: 0, typ: NTI36042, name: "textAlign", sons: null}, 
{kind: 1, offset: "textDecoration", len: 0, typ: NTI36042, name: "textDecoration", sons: null}, 
{kind: 1, offset: "textIndent", len: 0, typ: NTI36042, name: "textIndent", sons: null}, 
{kind: 1, offset: "textTransform", len: 0, typ: NTI36042, name: "textTransform", sons: null}, 
{kind: 1, offset: "transform", len: 0, typ: NTI36042, name: "transform", sons: null}, 
{kind: 1, offset: "top", len: 0, typ: NTI36042, name: "top", sons: null}, 
{kind: 1, offset: "verticalAlign", len: 0, typ: NTI36042, name: "verticalAlign", sons: null}, 
{kind: 1, offset: "visibility", len: 0, typ: NTI36042, name: "visibility", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI36042, name: "width", sons: null}, 
{kind: 1, offset: "wordSpacing", len: 0, typ: NTI36042, name: "wordSpacing", sons: null}, 
{kind: 1, offset: "zIndex", len: 0, typ: NTI36006, name: "zIndex", sons: null}]};
NTI71283.node = NNI71283;
NTI71283.base = NTI40208;
NTI71281.base = NTI71283;
var NNI71231 = {kind: 2, len: 14, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "attributes", len: 0, typ: NTI71561, name: "attributes", sons: null}, 
{kind: 1, offset: "childNodes", len: 0, typ: NTI71563, name: "childNodes", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI71565, name: "children", sons: null}, 
{kind: 1, offset: "data", len: 0, typ: NTI36042, name: "data", sons: null}, 
{kind: 1, offset: "firstChild", len: 0, typ: NTI71229, name: "firstChild", sons: null}, 
{kind: 1, offset: "lastChild", len: 0, typ: NTI71229, name: "lastChild", sons: null}, 
{kind: 1, offset: "nextSibling", len: 0, typ: NTI71229, name: "nextSibling", sons: null}, 
{kind: 1, offset: "nodeName", len: 0, typ: NTI36042, name: "nodeName", sons: null}, 
{kind: 1, offset: "nodeType", len: 0, typ: NTI71227, name: "nodeType", sons: null}, 
{kind: 1, offset: "nodeValue", len: 0, typ: NTI36042, name: "nodeValue", sons: null}, 
{kind: 1, offset: "parentNode", len: 0, typ: NTI71229, name: "parentNode", sons: null}, 
{kind: 1, offset: "previousSibling", len: 0, typ: NTI71229, name: "previousSibling", sons: null}, 
{kind: 1, offset: "innerHTML", len: 0, typ: NTI36042, name: "innerHTML", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI71281, name: "style", sons: null}]};
NTI71231.node = NNI71231;
var NNI71205 = {kind: 2, len: 20, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "onabort", len: 0, typ: NTI71372, name: "onabort", sons: null}, 
{kind: 1, offset: "onblur", len: 0, typ: NTI71376, name: "onblur", sons: null}, 
{kind: 1, offset: "onchange", len: 0, typ: NTI71380, name: "onchange", sons: null}, 
{kind: 1, offset: "onclick", len: 0, typ: NTI71384, name: "onclick", sons: null}, 
{kind: 1, offset: "ondblclick", len: 0, typ: NTI71388, name: "ondblclick", sons: null}, 
{kind: 1, offset: "onerror", len: 0, typ: NTI71392, name: "onerror", sons: null}, 
{kind: 1, offset: "onfocus", len: 0, typ: NTI71396, name: "onfocus", sons: null}, 
{kind: 1, offset: "onkeydown", len: 0, typ: NTI71400, name: "onkeydown", sons: null}, 
{kind: 1, offset: "onkeypress", len: 0, typ: NTI71404, name: "onkeypress", sons: null}, 
{kind: 1, offset: "onkeyup", len: 0, typ: NTI71408, name: "onkeyup", sons: null}, 
{kind: 1, offset: "onload", len: 0, typ: NTI71412, name: "onload", sons: null}, 
{kind: 1, offset: "onmousedown", len: 0, typ: NTI71416, name: "onmousedown", sons: null}, 
{kind: 1, offset: "onmousemove", len: 0, typ: NTI71420, name: "onmousemove", sons: null}, 
{kind: 1, offset: "onmouseout", len: 0, typ: NTI71424, name: "onmouseout", sons: null}, 
{kind: 1, offset: "onmouseover", len: 0, typ: NTI71428, name: "onmouseover", sons: null}, 
{kind: 1, offset: "onmouseup", len: 0, typ: NTI71432, name: "onmouseup", sons: null}, 
{kind: 1, offset: "onreset", len: 0, typ: NTI71436, name: "onreset", sons: null}, 
{kind: 1, offset: "onselect", len: 0, typ: NTI71440, name: "onselect", sons: null}, 
{kind: 1, offset: "onsubmit", len: 0, typ: NTI71444, name: "onsubmit", sons: null}, 
{kind: 1, offset: "onunload", len: 0, typ: NTI71448, name: "onunload", sons: null}]};
NTI71205.node = NNI71205;
NTI71205.base = NTI40208;
NTI71231.base = NTI71205;
NTI71239.base = NTI71231;
NTI71237.base = NTI71239;
NTI251028.base = NTI71237;
NTI188754.base = NTI36040;
NTI206834.base = NTI36038;
NTI206879.base = NTI206834;
NTI205076.base = NTI36038;
NTI205071.base = NTI205076;
var NNI40252 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI40252.node = NNI40252;
var NNI40230 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI40230.node = NNI40230;
NTI40308.base = NTI40226;
NTI40314.base = NTI40226;
var NNI40226 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI40308, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI36042, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI36040, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI36040, name: "trace", sons: null}, 
{kind: 1, offset: "raiseId", len: 0, typ: NTI36016, name: "raiseId", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI40314, name: "up", sons: null}]};
NTI40226.node = NNI40226;
NTI40226.base = NTI40208;
NTI40230.base = NTI40226;
NTI40252.base = NTI40230;
var NNI205073 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI36006, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI36006, name: "Field1", sons: null}]};
NTI205073.node = NNI205073;
NTI207035.base = NTI205073;

function makeNimstrLit(c_53995) {
		  var ln = c_53995.length;
  var result = new Array(ln);
  for (var i = 0; i < ln; ++i) {
    result[i] = c_53995.charCodeAt(i);
  }
  return result;
  

	
}

function setConstr() {
		    var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

	
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_55027, src_55028, ti_55029) {
	var result_55219 = null;

		switch (ti_55029.kind) {
		case 21:
		case 22:
		case 23:
		case 5:
			if (!(is_fat_pointer_55001(ti_55029))) {
			result_55219 = src_55028;
			}
			else {
				result_55219 = [src_55028[0], src_55028[1]];
			}
			
			break;
		case 19:
			      if (dest_55027 === null || dest_55027 === undefined) {
        dest_55027 = {};
      }
      else {
        for (var key in dest_55027) { delete dest_55027[key]; }
      }
      for (var key in src_55028) { dest_55027[key] = src_55028[key]; }
      result_55219 = dest_55027;
    
			break;
		case 18:
		case 17:
			if (!((ti_55029.base == null))) {
			result_55219 = nimCopy(dest_55027, src_55028, ti_55029.base);
			}
			else {
			if ((ti_55029.kind == 17)) {
			result_55219 = (dest_55027 === null || dest_55027 === undefined) ? {m_type: ti_55029} : dest_55027;
			}
			else {
				result_55219 = (dest_55027 === null || dest_55027 === undefined) ? {} : dest_55027;
			}
			}
			nimCopyAux(result_55219, src_55028, ti_55029.node);
			break;
		case 24:
		case 4:
		case 27:
		case 16:
			      if (src_55028 === null) {
        result_55219 = null;
      }
      else {
        if (dest_55027 === null || dest_55027 === undefined) {
          dest_55027 = new Array(src_55028.length);
        }
        else {
          dest_55027.length = src_55028.length;
        }
        result_55219 = dest_55027;
        for (var i = 0; i < src_55028.length; ++i) {
          result_55219[i] = nimCopy(result_55219[i], src_55028[i], ti_55029.base);
        }
      }
    
			break;
		case 28:
			      if (src_55028 !== null) {
        result_55219 = src_55028.slice(0);
      }
    
			break;
		default: 
			result_55219 = src_55028;
			break;
		}

	return result_55219;

}

function cstrToNimstr(c_54012) {
		  var ln = c_54012.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_54012.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_54012.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

	
}

function eqStrings(a_54224, b_54225) {
		    if (a_54224 == b_54225) return true;
    if (a_54224 === null && b_54225.length == 0) return true;
    if (b_54225 === null && a_54224.length == 0) return true;
    if ((!a_54224) || (!b_54225)) return false;
    var alen = a_54224.length;
    if (alen != b_54225.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_54224[i] != b_54225[i]) return false;
    return true;
  

	
}

function nimMax(a_54758, b_54759) {
		var Tmp1;

	var result_54760 = 0;

	BeforeRet: do {
		if ((b_54759 <= a_54758)) {
		Tmp1 = a_54758;
		}
		else {
		Tmp1 = b_54759;
		}
		
		result_54760 = Tmp1;
		break BeforeRet;
	} while (false);

	return result_54760;

}

function nimMin(a_54740, b_54741) {
		var Tmp1;

	var result_54742 = 0;

	BeforeRet: do {
		if ((a_54740 <= b_54741)) {
		Tmp1 = a_54740;
		}
		else {
		Tmp1 = b_54741;
		}
		
		result_54742 = Tmp1;
		break BeforeRet;
	} while (false);

	return result_54742;

}

function mnewString(len_54046) {
		    return new Array(len_54046);
  

	
}

function toJSStr(s_54029) {
		  if (s_54029 === null) return "";
  var len = s_54029.length;
  var asciiPart = new Array(len);
  var fcc = String.fromCharCode;
  var nonAsciiPart = null;
  var nonAsciiOffset = 0;
  for (var i = 0; i < len; ++i) {
    if (nonAsciiPart !== null) {
      var offset = (i - nonAsciiOffset) * 2;
      var code = s_54029[i].toString(16);
      if (code.length == 1) {
        code = "0"+code;
      }
      nonAsciiPart[offset] = "%";
      nonAsciiPart[offset + 1] = code;
    }
    else if (s_54029[i] < 128)
      asciiPart[i] = fcc(s_54029[i]);
    else {
      asciiPart.length = i;
      nonAsciiOffset = i;
      nonAsciiPart = new Array((len - i) * 2);
      --i;
    }
  }
  asciiPart = asciiPart.join("");
  return (nonAsciiPart === null) ?
      asciiPart : asciiPart + decodeURIComponent(nonAsciiPart.join(""));
  

	
}
var ConstSet2 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet3 = setConstr(32, 9, 11, 13, 10, 12);

function addChar(x_55419, c_55420) {
		x_55419.push(c_55420);

	
}

function rawEcho() {
		      var buf = "";
      for (var i = 0; i < arguments.length; ++i) {
        buf += toJSStr(arguments[i]);
      }
      console.log(buf);
    

	
}

function nimCharToStr(x_53062) {
	var result_53063 = null;

		result_53063 = nimCopy(null, mnewString(1), NTI36040);
		result_53063[0] = x_53062;

	return result_53063;

}
var ConstSet4 = setConstr([48, 57]);
var ConstSet5 = setConstr([48, 57]);

function raiseException(e_53618, ename_53619) {
		e_53618.name = ename_53619;
		if ((excHandler == 0)) {
		unhandledException(e_53618);
		}
		
		throw e_53618;

	
}
				var colours_247156 = [makeNimstrLit("0,0,0"), makeNimstrLit("205,0,0"), makeNimstrLit("0,205,0"), makeNimstrLit("205,205,0"), makeNimstrLit("0,0,238"), makeNimstrLit("205,0,205"), makeNimstrLit("0,205,205"), makeNimstrLit("229,229,229")];
var ConstSet6 = setConstr(60, 62, 94);
var ConstSet7 = setConstr(60, 62, 94);
var ConstSet8 = setConstr(45, 43, 32);
var ConstSet9 = setConstr([48, 57]);
var ConstSet10 = setConstr([48, 57]);
var ConstSet11 = setConstr([48, 57]);
var ConstSet12 = setConstr([65, 90], [97, 122]);
var nim_program_result = 0;
var global_raise_hook_50418 = [null];
var local_raise_hook_50423 = [null];
var out_of_mem_hook_50426 = [null];
  if (!Math.trunc) {
    Math.trunc = function(v) {
      v = +v;
      if (!isFinite(v)) return v;

      return (v - v % 1)   ||   (v < 0 ? -0 : v === 0 ? v : 0);
    };
  }
var state_77605 = [{a0: 1773455756, a1: 4275166512}];
var utc_instance_189831 = [null];
var local_instance_189832 = [null];
var object_id_209237 = [0];

function new_249885() {
	var result_249889 = null;

	BeforeRet: do {
		var r_250001 = null;
		r_250001 = {columns: 0, rows: 0, x: 0, y: 0, cell_width: 0, cell_height: 0, fg_colour: null, bg_colour: null, font: null, canvas: null, ctx: null};
		result_249889 = r_250001;
		break BeforeRet;
	} while (false);

	return result_249889;

}

function get_context2d_204728(c_204730) {
	var result_204731 = null;

		result_204731=c_204730.getContext('2d');

	return result_204731;

}

function is_fat_pointer_55001(ti_55003) {
	var result_55004 = false;

	BeforeRet: do {
		result_55004 = !((ConstSet1[ti_55003.base.kind] != undefined));
		break BeforeRet;
	} while (false);

	return result_55004;

}

function nimCopyAux(dest_55032, src_55033, n_55035) {
		switch (n_55035.kind) {
		case 0:
			break;
		case 1:
			      dest_55032[n_55035.offset] = nimCopy(dest_55032[n_55035.offset], src_55033[n_55035.offset], n_55035.typ);
    
			break;
		case 2:
			    for (var i = 0; i < n_55035.sons.length; i++) {
      nimCopyAux(dest_55032, src_55033, n_55035.sons[i]);
    }
    
			break;
		case 3:
			      dest_55032[n_55035.offset] = nimCopy(dest_55032[n_55035.offset], src_55033[n_55035.offset], n_55035.typ);
      for (var i = 0; i < n_55035.sons.length; ++i) {
        nimCopyAux(dest_55032, src_55033, n_55035.sons[i][1]);
      }
    
			break;
		}

	
}

function new_terminal_249878(canvas_249880, columns_249881, rows_249882) {
	var result_249883 = null;

		result_249883 = new_249885();
		result_249883.canvas = canvas_249880;
		result_249883.ctx = get_context2d_204728(canvas_249880);
		result_249883.columns = columns_249881;
		result_249883.rows = rows_249882;
		result_249883.x = 1;
		result_249883.y = 1;
		result_249883.cell_width = 10;
		result_249883.cell_height = 14;
		result_249883.bg_colour = nimCopy(null, makeNimstrLit("black"), NTI36040);
		result_249883.fg_colour = nimCopy(null, makeNimstrLit("white"), NTI36040);
		result_249883.font = nimCopy(null, makeNimstrLit("14px Monospace"), NTI36040);

	return result_249883;

}

function new_seq_251362(len_251365) {
	var result_251367 = null;

		result_251367 = new Array(len_251365); for (var i=0;i<len_251365;++i) {result_251367[i]=null;}
	return result_251367;

}

function new_seq_251024(len_251027) {
	var result_251029 = null;

		result_251029 = new Array(len_251027); for (var i=0;i<len_251027;++i) {result_251029[i]=null;}
	return result_251029;

}

function substr_60622(s_60624, first_60625, last_60626) {
	var result_60627 = null;

		var first_60628 = nimMax(first_60625, 0);
		var l_60630 = nimMax(((nimMin(last_60626, (s_60624 != null ? (s_60624.length-1) : -1)) - first_60628) + 1), 0);
		result_60627 = nimCopy(null, mnewString(l_60630), NTI36040);
		L1: do {
			var i_60639 = 0;
			var colontmp__252067 = 0;
			colontmp__252067 = (l_60630 - 1);
			var res_252068 = 0;
			L2: do {
					L3: while (true) {
					if (!(res_252068 <= colontmp__252067)) break L3;
						i_60639 = res_252068;
						result_60627[i_60639] = s_60624[(i_60639 + first_60628)];
						res_252068 += 1;
					}
			} while(false);
		} while(false);

	return result_60627;

}

function nsuSplitChar(s_173854, sep_173855, maxsplit_173857) {
	var result_173859 = null;

		result_173859 = nimCopy(null, [], NTI173873);
		L1: do {
			var x_173860 = null;
			var last_252061 = 0;
			var splits_252062 = maxsplit_173857;
			L2: do {
					L3: while (true) {
					if (!(last_252061 <= (s_173854 != null ? s_173854.length : 0))) break L3;
						var first_252064 = last_252061;
						L4: do {
								L5: while (true) {
								if (!((last_252061 < (s_173854 != null ? s_173854.length : 0)) && !((s_173854[last_252061] == sep_173855)))) break L5;
									last_252061 += 1;
								}
						} while(false);
						if ((splits_252062 == 0)) {
						last_252061 = (s_173854 != null ? s_173854.length : 0);
						}
						
						x_173860 = substr_60622(s_173854, first_252064, (last_252061 - 1));
						var Tmp6 = nimCopy(null, x_173860, NTI36040);
						if (result_173859 != null) { result_173859.push(Tmp6); } else { result_173859 = [Tmp6]; };
						if ((splits_252062 == 0)) {
						break L2;
						}
						
						splits_252062 -= 1;
						last_252061 += 1;
					}
			} while(false);
		} while(false);

	return result_173859;

}

function nsuStrip(s_179365, leading_179366, trailing_179367, chars_179369) {
					var Tmp5;

	var result_179370 = null;

		var first_179372 = 0;
		var last_179373 = ((s_179365 != null ? s_179365.length : 0) - 1);
		if (leading_179366) {
		L1: do {
				L2: while (true) {
				if (!((first_179372 <= last_179373) && (chars_179369[s_179365[first_179372]] != undefined))) break L2;
					first_179372 += 1;
				}
		} while(false);
		}
		
		if (trailing_179367) {
		L3: do {
				L4: while (true) {
					if (!(0 <= last_179373)) Tmp5 = false; else {						Tmp5 = (chars_179369[s_179365[last_179373]] != undefined);					}				if (!Tmp5) break L4;
					last_179373 -= 1;
				}
		} while(false);
		}
		
		result_179370 = nimCopy(null, substr_60622(s_179365, first_179372, last_179373), NTI36040);

	return result_179370;

}

function get_map_251014(name_251016) {
							var Tmp4;

	var result_251017 = null;

	BeforeRet: do {
		var result_251018 = new_seq_251024(0);
		L1: do {
			var it_251214 = null;
			var colontmp__252076 = null;
			colontmp__252076 = document.getElementsByTagName("script");
			var i_252077 = 0;
			var l_252078 = (colontmp__252076 != null ? colontmp__252076.length : 0);
			L2: do {
					L3: while (true) {
					if (!(i_252077 < l_252078)) break L3;
						it_251214 = colontmp__252076[i_252077];
							if (!(it_251214.getAttribute("type") == "text/x-game-map")) Tmp4 = false; else {								Tmp4 = (it_251214.getAttribute("id") == toJSStr(name_251016));							}						if (Tmp4) {
						if (result_251018 != null) { result_251018.push(it_251214); } else { result_251018 = [it_251214]; };
						}
						
						i_252077 += 1;
					}
			} while(false);
		} while(false);
		var maps_251222 = nimCopy(null, result_251018, NTI251028);
		result_251017 = nimCopy(null, cstrToNimstr(maps_251222[0].innerHTML), NTI36040);
		break BeforeRet;
	} while (false);

	return result_251017;

}

function new_seq_188750(len_188753) {
	var result_188755 = null;

		result_188755 = new Array(len_188753); for (var i=0;i<len_188753;++i) {result_188755[i]=null;}
	return result_188755;

}

function new_seq_206875(len_206878) {
	var result_206880 = null;

		result_206880 = new Array(len_206878); for (var i=0;i<len_206878;++i) {result_206880[i]=null;}
	return result_206880;

}

function new_seq_206830(len_206833) {
	var result_206835 = null;

		result_206835 = new Array(len_206833); for (var i=0;i<len_206833;++i) {result_206835[i]=0;}
	return result_206835;

}

function input_to_map_206814(input_206817) {
	var result_206818 = null;

		var width_206823 = (input_206817 != null ? input_206817.length : 0);
		var height_206824 = (input_206817[0] != null ? input_206817[0].length : 0);
		var result_206825 = new_seq_206875(height_206824);
		L1: do {
			var i_206826 = 0;
			var i_252081 = 0;
			L2: do {
					L3: while (true) {
					if (!(i_252081 < height_206824)) break L3;
						i_206826 = i_252081;
						result_206825[i_206826] = nimCopy(null, new_seq_206830(width_206823), NTI206834);
						i_252081 += 1;
					}
			} while(false);
		} while(false);
		result_206818 = nimCopy(null, result_206825, NTI206879);
		L4: do {
			var y_206944 = 0;
			var colontmp__252092 = 0;
			colontmp__252092 = (result_206818 != null ? (result_206818.length-1) : -1);
			var res_252093 = 0;
			L5: do {
					L6: while (true) {
					if (!(res_252093 <= colontmp__252092)) break L6;
						y_206944 = res_252093;
						L7: do {
							var x_206959 = 0;
							var colontmp__252086 = 0;
							colontmp__252086 = (result_206818[0] != null ? (result_206818[0].length-1) : -1);
							var res_252087 = 0;
							L8: do {
									L9: while (true) {
									if (!(res_252087 <= colontmp__252086)) break L9;
										x_206959 = res_252087;
										result_206818[y_206944][x_206959] = input_206817[y_206944][x_206959];
										res_252087 += 1;
									}
							} while(false);
						} while(false);
						res_252093 += 1;
					}
			} while(false);
		} while(false);

	return result_206818;

}

function rotl_77815(x_77817, k_77818) {
	var result_77819 = 0;

		result_77819 = ((x_77817 << k_77818) | ((x_77817 >>> 0) >>> ((64 - k_77818) >>> 0)));

	return result_77819;

}

function next_77855(r_77858) {
	var result_77859 = 0;

		var s0_77860 = r_77858.a0;
		var s1_77861 = r_77858.a1;
		result_77859 = ((s0_77860 + s1_77861) >>> 0);
		s1_77861 = (s1_77861 ^ s0_77860);
		r_77858.a0 = ((rotl_77815(s0_77860, 55) ^ s1_77861) ^ (s1_77861 << 14));
		r_77858.a1 = rotl_77815(s1_77861, 36);

	return result_77859;

}

function rand_78243(r_78246, max_78247) {
	var result_78248 = 0;

	BeforeRet: do {
		if ((max_78247 == 0)) {
		break BeforeRet;
		}
		
		L1: do {
				L2: while (true) {
				if (!true) break L2;
					var x_78249 = next_77855(r_78246);
					if ((x_78249 <= ((4294967295 - (4294967295 % max_78247)) >>> 0))) {
					result_78248 = (((x_78249 % ((max_78247 + 1) )))|0);
					break BeforeRet;
					}
					
				}
		} while(false);
	} while (false);

	return result_78248;

}

function rand_78288(max_78290) {
	var result_78291 = 0;

		result_78291 = rand_78243(state_77605[0], max_78290);

	return result_78291;

}

function random_map_251236(width_251238, height_251239) {
										var Tmp10;

	var result_251240 = null;

		var result_251241 = new_seq_206875(height_251239);
		L1: do {
			var i_251242 = 0;
			var i_252099 = 0;
			L2: do {
					L3: while (true) {
					if (!(i_252099 < height_251239)) break L3;
						i_251242 = i_252099;
						result_251241[i_251242] = nimCopy(null, new_seq_206830(width_251238), NTI206834);
						i_252099 += 1;
					}
			} while(false);
		} while(false);
		result_251240 = nimCopy(null, result_251241, NTI206879);
		L4: do {
			var y_251318 = 0;
			var colontmp__252110 = 0;
			colontmp__252110 = (result_251240 != null ? (result_251240.length-1) : -1);
			var res_252111 = 0;
			L5: do {
					L6: while (true) {
					if (!(res_252111 <= colontmp__252110)) break L6;
						y_251318 = res_252111;
						L7: do {
							var x_251333 = 0;
							var colontmp__252104 = 0;
							colontmp__252104 = (result_251240[0] != null ? (result_251240[0].length-1) : -1);
							var res_252105 = 0;
							L8: do {
									L9: while (true) {
									if (!(res_252105 <= colontmp__252104)) break L9;
										x_251333 = res_252105;
										switch (rand_78288(3)) {
										case 0:
											Tmp10 = 46;
											break;
										case 1:
											Tmp10 = 124;
											break;
										default: 
											Tmp10 = 35;
											break;
										}
										result_251240[y_251318][x_251333] = Tmp10;
										res_252105 += 1;
									}
							} while(false);
						} while(false);
						res_252111 += 1;
					}
			} while(false);
		} while(false);

	return result_251240;

}

function contains_247451(s_247457, value_247458) {
	var result_247459 = false;

		result_247459 = ((s_247457.a <= value_247458) && (value_247458 <= s_247457.b));

	return result_247459;

}

function HEX2EHEX2E_247419(a_247423, b_247424) {
	var result_247430 = {a: 0, b: 0};

		result_247430.a = a_247423;
		result_247430.b = b_247424;

	return result_247430;

}

function fill_styleHEX3D_204128(ctx_204130, color_204131) {
		ctx_204130.fillStyle=color_204131;

	
}

function canvas_204745(ctx_204747) {
	var result_204748 = null;

		result_204748=ctx_204747.canvas;

	return result_204748;

}

function clear_247107(term_247109) {
		term_247109.ctx.save();
		fill_styleHEX3D_204128(term_247109.ctx, toJSStr(term_247109.bg_colour));
		term_247109.ctx.fillRect(0.0, 0.0, canvas_204745(term_247109.ctx).width, canvas_204745(term_247109.ctx).height);
		term_247109.ctx.restore();

	
}

function add_escaped_char_59214(s_59217, s_59217_Idx, c_59218) {
		switch (c_59218) {
		case 7:
			if (s_59217[s_59217_Idx] != null) { s_59217[s_59217_Idx] = (s_59217[s_59217_Idx]).concat(makeNimstrLit("\\a")); } else { s_59217[s_59217_Idx] = makeNimstrLit("\\a"); };
			break;
		case 8:
			if (s_59217[s_59217_Idx] != null) { s_59217[s_59217_Idx] = (s_59217[s_59217_Idx]).concat(makeNimstrLit("\\b")); } else { s_59217[s_59217_Idx] = makeNimstrLit("\\b"); };
			break;
		case 9:
			if (s_59217[s_59217_Idx] != null) { s_59217[s_59217_Idx] = (s_59217[s_59217_Idx]).concat(makeNimstrLit("\\t")); } else { s_59217[s_59217_Idx] = makeNimstrLit("\\t"); };
			break;
		case 10:
			if (s_59217[s_59217_Idx] != null) { s_59217[s_59217_Idx] = (s_59217[s_59217_Idx]).concat(makeNimstrLit("\\n")); } else { s_59217[s_59217_Idx] = makeNimstrLit("\\n"); };
			break;
		case 11:
			if (s_59217[s_59217_Idx] != null) { s_59217[s_59217_Idx] = (s_59217[s_59217_Idx]).concat(makeNimstrLit("\\v")); } else { s_59217[s_59217_Idx] = makeNimstrLit("\\v"); };
			break;
		case 12:
			if (s_59217[s_59217_Idx] != null) { s_59217[s_59217_Idx] = (s_59217[s_59217_Idx]).concat(makeNimstrLit("\\f")); } else { s_59217[s_59217_Idx] = makeNimstrLit("\\f"); };
			break;
		case 13:
			if (s_59217[s_59217_Idx] != null) { s_59217[s_59217_Idx] = (s_59217[s_59217_Idx]).concat(makeNimstrLit("\\c")); } else { s_59217[s_59217_Idx] = makeNimstrLit("\\c"); };
			break;
		case 27:
			if (s_59217[s_59217_Idx] != null) { s_59217[s_59217_Idx] = (s_59217[s_59217_Idx]).concat(makeNimstrLit("\\e")); } else { s_59217[s_59217_Idx] = makeNimstrLit("\\e"); };
			break;
		case 92:
			if (s_59217[s_59217_Idx] != null) { s_59217[s_59217_Idx] = (s_59217[s_59217_Idx]).concat(makeNimstrLit("\\\\")); } else { s_59217[s_59217_Idx] = makeNimstrLit("\\\\"); };
			break;
		case 39:
			if (s_59217[s_59217_Idx] != null) { s_59217[s_59217_Idx] = (s_59217[s_59217_Idx]).concat(makeNimstrLit("\\\'")); } else { s_59217[s_59217_Idx] = makeNimstrLit("\\\'"); };
			break;
		case 34:
			if (s_59217[s_59217_Idx] != null) { s_59217[s_59217_Idx] = (s_59217[s_59217_Idx]).concat(makeNimstrLit("\\\"")); } else { s_59217[s_59217_Idx] = makeNimstrLit("\\\""); };
			break;
		case 32:
		case 33:
		case 35:
		case 36:
		case 37:
		case 38:
		case 40:
		case 41:
		case 42:
		case 43:
		case 44:
		case 45:
		case 46:
		case 47:
		case 48:
		case 49:
		case 50:
		case 51:
		case 52:
		case 53:
		case 54:
		case 55:
		case 56:
		case 57:
		case 58:
		case 59:
		case 60:
		case 61:
		case 62:
		case 63:
		case 64:
		case 65:
		case 66:
		case 67:
		case 68:
		case 69:
		case 70:
		case 71:
		case 72:
		case 73:
		case 74:
		case 75:
		case 76:
		case 77:
		case 78:
		case 79:
		case 80:
		case 81:
		case 82:
		case 83:
		case 84:
		case 85:
		case 86:
		case 87:
		case 88:
		case 89:
		case 90:
		case 91:
		case 93:
		case 94:
		case 95:
		case 96:
		case 97:
		case 98:
		case 99:
		case 100:
		case 101:
		case 102:
		case 103:
		case 104:
		case 105:
		case 106:
		case 107:
		case 108:
		case 109:
		case 110:
		case 111:
		case 112:
		case 113:
		case 114:
		case 115:
		case 116:
		case 117:
		case 118:
		case 119:
		case 120:
		case 121:
		case 122:
		case 123:
		case 124:
		case 125:
		case 126:
			if (s_59217[s_59217_Idx] != null) { addChar(s_59217[s_59217_Idx], c_59218); } else { s_59217[s_59217_Idx] = [c_59218]; };
			break;
		default: 
			if (s_59217[s_59217_Idx] != null) { s_59217[s_59217_Idx] = (s_59217[s_59217_Idx]).concat(makeNimstrLit("\\x")); } else { s_59217[s_59217_Idx] = makeNimstrLit("\\x"); };
			var n_59234 = c_59218;
			if (s_59217[s_59217_Idx] != null) { addChar(s_59217[s_59217_Idx], makeNimstrLit("0123456789ABCDEF")[(((n_59234 & 240) >>> 0) >>> 4)]); } else { s_59217[s_59217_Idx] = [makeNimstrLit("0123456789ABCDEF")[(((n_59234 & 240) >>> 0) >>> 4)]]; };
			if (s_59217[s_59217_Idx] != null) { addChar(s_59217[s_59217_Idx], makeNimstrLit("0123456789ABCDEF")[(n_59234 & 15)]); } else { s_59217[s_59217_Idx] = [makeNimstrLit("0123456789ABCDEF")[(n_59234 & 15)]]; };
			break;
		}

	
}

function add_quoted_248001(s_248004, s_248004_Idx, x_248005) {
		if (s_248004[s_248004_Idx] != null) { s_248004[s_248004_Idx] = (s_248004[s_248004_Idx]).concat(makeNimstrLit("\"")); } else { s_248004[s_248004_Idx] = makeNimstrLit("\""); };
		L1: do {
			var c_248202 = 0;
			var i_252130 = 0;
			var l_252131 = (x_248005 != null ? x_248005.length : 0);
			L2: do {
					L3: while (true) {
					if (!(i_252130 < l_252131)) break L3;
						c_248202 = x_248005[i_252130];
						if ((c_248202 <= 127)) {
						add_escaped_char_59214(s_248004, s_248004_Idx, c_248202);
						}
						else {
						if (s_248004[s_248004_Idx] != null) { addChar(s_248004[s_248004_Idx], c_248202); } else { s_248004[s_248004_Idx] = [c_248202]; };
						}
						
						i_252130 += 1;
					}
			} while(false);
		} while(false);
		if (s_248004[s_248004_Idx] != null) { s_248004[s_248004_Idx] = (s_248004[s_248004_Idx]).concat(makeNimstrLit("\"")); } else { s_248004[s_248004_Idx] = makeNimstrLit("\""); };

	
}

function collection_to_string_247624(x_247627, prefix_247628, separator_247629, suffix_247630) {
	var result_247631 = [null];

		result_247631[0] = nimCopy(null, prefix_247628, NTI36040);
		var first_element_247632 = true;
		L1: do {
			var value_247814 = null;
			var i_252126 = 0;
			var l_252127 = (x_247627 != null ? x_247627.length : 0);
			L2: do {
					L3: while (true) {
					if (!(i_252126 < l_252127)) break L3;
						value_247814 = x_247627[i_252126];
						if (first_element_247632) {
						first_element_247632 = false;
						}
						else {
						if (result_247631[0] != null) { result_247631[0] = (result_247631[0]).concat(separator_247629); } else { result_247631[0] = separator_247629.slice(); };
						}
						
						add_quoted_248001(result_247631, 0, value_247814);
						i_252126 += 1;
					}
			} while(false);
		} while(false);
		if (result_247631[0] != null) { result_247631[0] = (result_247631[0]).concat(suffix_247630); } else { result_247631[0] = suffix_247630.slice(); };

	return result_247631[0];

}

function HEX24_247618(x_247622) {
	var result_247623 = null;

		result_247623 = nimCopy(null, collection_to_string_247624(x_247622, makeNimstrLit("@["), makeNimstrLit(", "), makeNimstrLit("]")), NTI36040);

	return result_247623;

}

function add_50438(x_50441, x_50441_Idx, y_50442) {
		      if (x_50441[x_50441_Idx] === null) { x_50441[x_50441_Idx] = []; }
      var off = x_50441[x_50441_Idx].length;
      x_50441[x_50441_Idx].length += y_50442.length;
      for (var i = 0; i < y_50442.length; ++i) {
        x_50441[x_50441_Idx][off+i] = y_50442.charCodeAt(i);
      }
    

	
}

function unhandledException(e_53499) {
		var buf_53500 = [[]];
		if (!(((e_53499.message != null ? e_53499.message.length : 0) == 0))) {
		if (buf_53500[0] != null) { buf_53500[0] = (buf_53500[0]).concat(makeNimstrLit("Error: unhandled exception: ")); } else { buf_53500[0] = makeNimstrLit("Error: unhandled exception: "); };
		if (buf_53500[0] != null) { buf_53500[0] = (buf_53500[0]).concat(e_53499.message); } else { buf_53500[0] = e_53499.message.slice(); };
		}
		else {
		if (buf_53500[0] != null) { buf_53500[0] = (buf_53500[0]).concat(makeNimstrLit("Error: unhandled exception")); } else { buf_53500[0] = makeNimstrLit("Error: unhandled exception"); };
		}
		
		if (buf_53500[0] != null) { buf_53500[0] = (buf_53500[0]).concat(makeNimstrLit(" [")); } else { buf_53500[0] = makeNimstrLit(" ["); };
		add_50438(buf_53500, 0, e_53499.name);
		if (buf_53500[0] != null) { buf_53500[0] = (buf_53500[0]).concat(makeNimstrLit("]\x0A")); } else { buf_53500[0] = makeNimstrLit("]\x0A"); };
		var cbuf_53601 = toJSStr(buf_53500[0]);
		framePtr = null;
		  if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_53601);
  }
  else {
    throw cbuf_53601;
  }
  

	
}

function integer_out_of_range_error_80702() {
		var e_80706 = null;
		e_80706 = {m_type: NTI40252, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_80706.message = nimCopy(null, makeNimstrLit("Parsed integer outside of valid range"), NTI36040);
		e_80706.parent = null;
		raiseException(e_80706, "ValueError");

	
}

function raw_parse_int_80801(s_80803, b_80805, b_80805_Idx, start_80806) {
			var Tmp1;
					var Tmp4;
			var Tmp7;

	var result_80808 = 0;

		var sign_80810 = -1;
		var i_80811 = start_80806;
		if ((i_80811 < (s_80803 != null ? s_80803.length : 0))) {
		if ((s_80803[i_80811] == 43)) {
		i_80811 += 1;
		}
		else {
		if ((s_80803[i_80811] == 45)) {
		i_80811 += 1;
		sign_80810 = 1;
		}
		}
		}
		
			if (!(i_80811 < (s_80803 != null ? s_80803.length : 0))) Tmp1 = false; else {				Tmp1 = (ConstSet4[s_80803[i_80811]] != undefined);			}		if (Tmp1) {
		b_80805[b_80805_Idx] = 0;
		L2: do {
				L3: while (true) {
					if (!(i_80811 < (s_80803 != null ? s_80803.length : 0))) Tmp4 = false; else {						Tmp4 = (ConstSet5[s_80803[i_80811]] != undefined);					}				if (!Tmp4) break L3;
					var c_80846 = (s_80803[i_80811] - 48);
					if ((Math.trunc((-9223372036854775808 + c_80846) / 10) <= b_80805[b_80805_Idx])) {
					b_80805[b_80805_Idx] = ((b_80805[b_80805_Idx] * 10) - c_80846);
					}
					else {
					integer_out_of_range_error_80702();
					}
					
					i_80811 += 1;
					L5: do {
							L6: while (true) {
							if (!((i_80811 < (s_80803 != null ? s_80803.length : 0)) && (s_80803[i_80811] == 95))) break L6;
								i_80811 += 1;
							}
					} while(false);
				}
		} while(false);
			if (!(sign_80810 == -1)) Tmp7 = false; else {				Tmp7 = (b_80805[b_80805_Idx] == -9223372036854775808);			}		if (Tmp7) {
		integer_out_of_range_error_80702();
		}
		else {
			b_80805[b_80805_Idx] = (b_80805[b_80805_Idx] * sign_80810);
			result_80808 = (i_80811 - start_80806);
		}
		
		}
		

	return result_80808;

}

function npuParseBiggestInt(s_81003, number_81005, number_81005_Idx, start_81006) {
	var result_81008 = 0;

		var res_81009 = [0];
		result_81008 = raw_parse_int_80801(s_81003, res_81009, 0, start_81006);
		if (!((result_81008 == 0))) {
		number_81005[number_81005_Idx] = res_81009[0];
		}
		

	return result_81008;

}

function npuParseInt(s_81026, number_81028, number_81028_Idx, start_81029) {
			var Tmp1;

	var result_81031 = 0;

		var res_81032 = [0];
		result_81031 = npuParseBiggestInt(s_81026, res_81032, 0, start_81029);
			if ((res_81032[0] < -2147483648)) Tmp1 = true; else {				Tmp1 = (2147483647 < res_81032[0]);			}		if (Tmp1) {
		integer_out_of_range_error_80702();
		}
		
		if (!((result_81031 == 0))) {
		number_81028[number_81028_Idx] = res_81032[0];
		}
		

	return result_81031;

}

function nsuParseInt(s_174776) {
			var Tmp1;

	var result_174777 = [0];

		var l_174779 = npuParseInt(s_174776, result_174777, 0, 0);
			if (!((l_174779 == (s_174776 != null ? s_174776.length : 0)))) Tmp1 = true; else {				Tmp1 = (l_174779 == 0);			}		if (Tmp1) {
		var e_174782 = null;
		e_174782 = {m_type: NTI40252, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_174782.message = nimCopy(null, (makeNimstrLit("invalid integer: ") || []).concat(s_174776 || []), NTI36040);
		e_174782.parent = null;
		raiseException(e_174782, "ValueError");
		}
		

	return result_174777[0];

}

function ansi_escape_247170(term_247172, str_247173, offset_247175, offset_247175_Idx) {
					var Tmp3;
			var Tmp4;

		var parameters_247411 = [[]];
		offset_247175[offset_247175_Idx] += 2;
		L1: do {
				L2: while (true) {
				if (!true) break L2;
					var ch_247418 = str_247173[offset_247175[offset_247175_Idx]];
					if (contains_247451(HEX2EHEX2E_247419(48, 57), ch_247418)) {
					if ((Tmp3 = parameters_247411[(parameters_247411 != null ? (parameters_247411.length-1) : -1)], Tmp3) != null) { addChar(Tmp3, ch_247418); } else { Tmp3 = [ch_247418]; };
					}
					else {
					if ((ch_247418 == 59)) {
					if (parameters_247411 != null) { parameters_247411.push([]); } else { parameters_247411 = [[]]; };
					}
					else {
					if (contains_247451(HEX2EHEX2E_247419(65, 126), ch_247418)) {
					break L1;
					}
					else {
					}
					}}
					offset_247175[offset_247175_Idx] += 1;
				}
		} while(false);
		var op_247607 = str_247173[offset_247175[offset_247175_Idx]];
		offset_247175[offset_247175_Idx] += 1;
		switch (op_247607) {
		case 74:
			switch (toJSStr(parameters_247411[0])) {
			case "2":
				clear_247107(term_247172);
				break;
			default: 
				rawEcho(makeNimstrLit("Unimplemented: "), nimCharToStr(op_247607), makeNimstrLit(" "), HEX24_247618(parameters_247411));
				break;
			}
			break;
		case 72:
			term_247172.x = 1;
			term_247172.y = 1;
			break;
		case 109:
			if (eqStrings(parameters_247411[0], [])) {
			Tmp4 = 0;
			}
			else {
			Tmp4 = nsuParseInt(parameters_247411[0]);
			}
			
			var attr_248247 = Tmp4;
			switch (attr_248247) {
			case 30:
			case 31:
			case 32:
			case 33:
			case 34:
			case 35:
			case 36:
			case 37:
				var fmt_res_248248 = mnewString(0);
				if (fmt_res_248248 != null) { fmt_res_248248 = (fmt_res_248248).concat(makeNimstrLit("rgb(")); } else { fmt_res_248248 = makeNimstrLit("rgb("); };
				if (fmt_res_248248 != null) { fmt_res_248248 = (fmt_res_248248).concat(colours_247156[(attr_248247 - 30)]); } else { fmt_res_248248 = colours_247156[(attr_248247 - 30)].slice(); };
				if (fmt_res_248248 != null) { fmt_res_248248 = (fmt_res_248248).concat(makeNimstrLit(")")); } else { fmt_res_248248 = makeNimstrLit(")"); };
				term_247172.fg_colour = nimCopy(null, fmt_res_248248, NTI36040);
				break;
			case 38:
				if ((((parameters_247411 != null ? parameters_247411.length : 0) == 5) && eqStrings(parameters_247411[1], makeNimstrLit("2")))) {
				var fmt_res_248408 = mnewString(0);
				if (fmt_res_248408 != null) { fmt_res_248408 = (fmt_res_248408).concat(makeNimstrLit("rgb(")); } else { fmt_res_248408 = makeNimstrLit("rgb("); };
				if (fmt_res_248408 != null) { fmt_res_248408 = (fmt_res_248408).concat(parameters_247411[2]); } else { fmt_res_248408 = parameters_247411[2].slice(); };
				if (fmt_res_248408 != null) { fmt_res_248408 = (fmt_res_248408).concat(makeNimstrLit(",")); } else { fmt_res_248408 = makeNimstrLit(","); };
				if (fmt_res_248408 != null) { fmt_res_248408 = (fmt_res_248408).concat(parameters_247411[3]); } else { fmt_res_248408 = parameters_247411[3].slice(); };
				if (fmt_res_248408 != null) { fmt_res_248408 = (fmt_res_248408).concat(makeNimstrLit(",")); } else { fmt_res_248408 = makeNimstrLit(","); };
				if (fmt_res_248408 != null) { fmt_res_248408 = (fmt_res_248408).concat(parameters_247411[4]); } else { fmt_res_248408 = parameters_247411[4].slice(); };
				if (fmt_res_248408 != null) { fmt_res_248408 = (fmt_res_248408).concat(makeNimstrLit(")")); } else { fmt_res_248408 = makeNimstrLit(")"); };
				term_247172.fg_colour = nimCopy(null, fmt_res_248408, NTI36040);
				}
				
				break;
			case 40:
			case 41:
			case 42:
			case 43:
			case 44:
			case 45:
			case 46:
			case 47:
				var fmt_res_249001 = mnewString(0);
				if (fmt_res_249001 != null) { fmt_res_249001 = (fmt_res_249001).concat(makeNimstrLit("rgb(")); } else { fmt_res_249001 = makeNimstrLit("rgb("); };
				if (fmt_res_249001 != null) { fmt_res_249001 = (fmt_res_249001).concat(colours_247156[(attr_248247 - 40)]); } else { fmt_res_249001 = colours_247156[(attr_248247 - 40)].slice(); };
				if (fmt_res_249001 != null) { fmt_res_249001 = (fmt_res_249001).concat(makeNimstrLit(")")); } else { fmt_res_249001 = makeNimstrLit(")"); };
				term_247172.bg_colour = nimCopy(null, fmt_res_249001, NTI36040);
				break;
			case 48:
				if ((((parameters_247411 != null ? parameters_247411.length : 0) == 5) && eqStrings(parameters_247411[1], makeNimstrLit("2")))) {
				var fmt_res_249208 = mnewString(0);
				if (fmt_res_249208 != null) { fmt_res_249208 = (fmt_res_249208).concat(makeNimstrLit("rgb(")); } else { fmt_res_249208 = makeNimstrLit("rgb("); };
				if (fmt_res_249208 != null) { fmt_res_249208 = (fmt_res_249208).concat(parameters_247411[2]); } else { fmt_res_249208 = parameters_247411[2].slice(); };
				if (fmt_res_249208 != null) { fmt_res_249208 = (fmt_res_249208).concat(makeNimstrLit(",")); } else { fmt_res_249208 = makeNimstrLit(","); };
				if (fmt_res_249208 != null) { fmt_res_249208 = (fmt_res_249208).concat(parameters_247411[3]); } else { fmt_res_249208 = parameters_247411[3].slice(); };
				if (fmt_res_249208 != null) { fmt_res_249208 = (fmt_res_249208).concat(makeNimstrLit(",")); } else { fmt_res_249208 = makeNimstrLit(","); };
				if (fmt_res_249208 != null) { fmt_res_249208 = (fmt_res_249208).concat(parameters_247411[4]); } else { fmt_res_249208 = parameters_247411[4].slice(); };
				if (fmt_res_249208 != null) { fmt_res_249208 = (fmt_res_249208).concat(makeNimstrLit(")")); } else { fmt_res_249208 = makeNimstrLit(")"); };
				term_247172.bg_colour = nimCopy(null, fmt_res_249208, NTI36040);
				}
				
				break;
			default: 
				rawEcho(makeNimstrLit("Unimplemented: "), nimCharToStr(op_247607), makeNimstrLit(" "), HEX24_247618(parameters_247411));
				break;
			}
			break;
		default: 
			rawEcho(makeNimstrLit("Unimplemented: "), nimCharToStr(op_247607), makeNimstrLit(" "), HEX24_247618(parameters_247411));
			break;
		}

	
}

function put_ch_247123(term_247125, ch_247126, setup_247127) {
		if (setup_247127) {
		term_247125.ctx.save();
		term_247125.ctx.textAlign = "left";
		term_247125.ctx.textBaseline = "top";
		term_247125.ctx.font = toJSStr(term_247125.font);
		}
		
		fill_styleHEX3D_204128(term_247125.ctx, toJSStr(term_247125.bg_colour));
		term_247125.ctx.fillRect((term_247125.cell_width * (term_247125.x - 1)), (term_247125.cell_height * (term_247125.y - 1)), term_247125.cell_width, term_247125.cell_height);
		fill_styleHEX3D_204128(term_247125.ctx, toJSStr(term_247125.fg_colour));
		term_247125.ctx.fillText(toJSStr(nimCharToStr(ch_247126)), (term_247125.cell_width * (term_247125.x - 1)), (term_247125.cell_height * (term_247125.y - 1)));
		if (setup_247127) {
		term_247125.ctx.restore();
		}
		
		term_247125.x += 1;
		if ((term_247125.columns < term_247125.x)) {
		term_247125.x = 1;
		term_247125.y += 1;
		}
		

	
}

function write_249832(term_249834, str_249835) {
		var i_249837 = [0];
		L1: do {
				L2: while (true) {
				if (!(i_249837[0] <= (str_249835 != null ? (str_249835.length-1) : -1))) break L2;
					L3: do {
						var ch_249839 = str_249835[i_249837[0]];
						if ((ch_249839 == 13)) {
						term_249834.x = 1;
						i_249837[0] += 1;
						break L3;
						}
						else {
						if ((ch_249839 == 10)) {
						term_249834.y += 1;
						i_249837[0] += 1;
						break L3;
						}
						else {
						if ((ch_249839 == 27)) {
						ansi_escape_247170(term_249834, str_249835, i_249837, 0);
						break L3;
						}
						}}
						term_249834.ctx.save();
						fill_styleHEX3D_204128(term_249834.ctx, toJSStr(term_249834.bg_colour));
						term_249834.ctx.textAlign = "left";
						term_249834.ctx.textBaseline = "top";
						fill_styleHEX3D_204128(term_249834.ctx, toJSStr(term_249834.fg_colour));
						term_249834.ctx.font = toJSStr(term_249834.font);
						put_ch_247123(term_249834, str_249835[i_249837[0]], false);
						term_249834.ctx.restore();
						i_249837[0] += 1;
					} while(false);
				}
		} while(false);

	
}

function erase_screen_251918(f_251921) {
		write_249832(f_251921, makeNimstrLit("\x1B[H\x1B[2J"));

	
}

function HEX2F_57017(x_57019, y_57020) {
	var result_57021 = 0.0;

		result_57021 = (x_57019 / y_57020);

	return result_57021;

}

function parse_saturated_natural_81231(s_81233, b_81235, b_81235_Idx, start_81236) {
			var Tmp1;
					var Tmp4;

	var result_81238 = 0;

		var i_81239 = start_81236;
		if (((i_81239 < (s_81233 != null ? s_81233.length : 0)) && (s_81233[i_81239] == 43))) {
		i_81239 += 1;
		}
		
			if (!(i_81239 < (s_81233 != null ? s_81233.length : 0))) Tmp1 = false; else {				Tmp1 = (ConstSet10[s_81233[i_81239]] != undefined);			}		if (Tmp1) {
		b_81235[b_81235_Idx] = 0;
		L2: do {
				L3: while (true) {
					if (!(i_81239 < (s_81233 != null ? s_81233.length : 0))) Tmp4 = false; else {						Tmp4 = (ConstSet11[s_81233[i_81239]] != undefined);					}				if (!Tmp4) break L3;
					var c_81268 = (s_81233[i_81239] - 48);
					if ((b_81235[b_81235_Idx] <= Math.trunc((2147483647 - c_81268) / 10))) {
					b_81235[b_81235_Idx] = ((b_81235[b_81235_Idx] * 10) + c_81268);
					}
					else {
						b_81235[b_81235_Idx] = 2147483647;
					}
					
					i_81239 += 1;
					L5: do {
							L6: while (true) {
							if (!((i_81239 < (s_81233 != null ? s_81233.length : 0)) && (s_81233[i_81239] == 95))) break L6;
								i_81239 += 1;
							}
					} while(false);
				}
		} while(false);
		result_81238 = (i_81239 - start_81236);
		}
		

	return result_81238;

}

function HEX5BHEX5D_133882(s_133886, x_133888) {
	var result_133889 = null;

		var a_134001 = x_133888.a;
		var l_134201 = ((((s_133886 != null ? s_133886.length : 0) - x_133888.b) - a_134001) + 1);
		result_133889 = nimCopy(null, mnewString(l_134201), NTI36040);
		L1: do {
			var i_134209 = 0;
			var i_252181 = 0;
			L2: do {
					L3: while (true) {
					if (!(i_252181 < l_134201)) break L3;
						i_134209 = i_252181;
						result_133889[i_134209] = s_133886[(i_134209 + a_134001)];
						i_252181 += 1;
					}
			} while(false);
		} while(false);

	return result_133889;

}

function HEX2EHEX2E_133839(a_133843, b_133844) {
	var result_133850 = {a: 0, b: 0};

		result_133850.a = a_133843;
		result_133850.b = b_133844;

	return result_133850;

}

function parse_standard_format_specifier_183924(s_183926, start_183927, ignore_unknown_suffix_183929) {
			var Tmp1;
			var Tmp2;
			var Tmp3;

	var result_183930 = {fill: 0, align: 0, sign: 0, alternateForm: false, padWithZero: false, minimumWidth: 0, precision: 0, typ: 0, endPosition: 0};

		result_183930.fill = 32;
		result_183930.align = 0;
		result_183930.sign = 45;
		var i_183933 = start_183927;
		if ((((i_183933 + 1) < (s_183926 != null ? s_183926.length : 0)) && (ConstSet6[s_183926[(i_183933 + 1)]] != undefined))) {
		result_183930.fill = s_183926[i_183933];
		result_183930.align = s_183926[(i_183933 + 1)];
		i_183933 += 2;
		}
		else {
		if (((i_183933 < (s_183926 != null ? s_183926.length : 0)) && (ConstSet7[s_183926[i_183933]] != undefined))) {
		result_183930.align = s_183926[i_183933];
		i_183933 += 1;
		}
		}
		if (((i_183933 < (s_183926 != null ? s_183926.length : 0)) && (ConstSet8[s_183926[i_183933]] != undefined))) {
		result_183930.sign = s_183926[i_183933];
		i_183933 += 1;
		}
		
		if (((i_183933 < (s_183926 != null ? s_183926.length : 0)) && (s_183926[i_183933] == 35))) {
		result_183930.alternateForm = true;
		i_183933 += 1;
		}
		
			if (!(((i_183933 + 1) < (s_183926 != null ? s_183926.length : 0)) && (s_183926[i_183933] == 48))) Tmp1 = false; else {				Tmp1 = (ConstSet9[s_183926[(i_183933 + 1)]] != undefined);			}		if (Tmp1) {
		result_183930.padWithZero = true;
		i_183933 += 1;
		}
		
		var parsed_length_183991 = parse_saturated_natural_81231(s_183926, result_183930, "minimumWidth", i_183933);
		i_183933 += parsed_length_183991;
		if (((i_183933 < (s_183926 != null ? s_183926.length : 0)) && (s_183926[i_183933] == 46))) {
		i_183933 += 1;
		var parsed_length_b_184005 = parse_saturated_natural_81231(s_183926, result_183930, "precision", i_183933);
		i_183933 += parsed_length_b_184005;
		}
		else {
			result_183930.precision = -1;
		}
		
			if (!(i_183933 < (s_183926 != null ? s_183926.length : 0))) Tmp2 = false; else {				Tmp2 = (ConstSet12[s_183926[i_183933]] != undefined);			}		if (Tmp2) {
		result_183930.typ = s_183926[i_183933];
		i_183933 += 1;
		}
		
		result_183930.endPosition = i_183933;
			if (!!((i_183933 == (s_183926 != null ? s_183926.length : 0)))) Tmp3 = false; else {				Tmp3 = !(ignore_unknown_suffix_183929);			}		if (Tmp3) {
		var e_184060 = null;
		e_184060 = {m_type: NTI40252, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_184060.message = nimCopy(null, (makeNimstrLit("invalid format string, cannot parse: ") || []).concat(HEX5BHEX5D_133882(s_183926, HEX2EHEX2E_133839(i_183933, 1)) || []), NTI36040);
		e_184060.parent = null;
		raiseException(e_184060, "ValueError");
		}
		

	return result_183930;

}

function mk_digit_183618(v_183620, typ_183621) {
			var Tmp1;

	var result_183622 = null;

		if ((v_183620 < 10)) {
		result_183622 = nimCopy(null, nimCharToStr((48 + v_183620)), NTI36040);
		}
		else {
			if ((typ_183621 == 120)) {
			Tmp1 = 97;
			}
			else {
			Tmp1 = 65;
			}
			
			result_183622 = nimCopy(null, nimCharToStr(((Tmp1 + v_183620) - 10)), NTI36040);
		}
		

	return result_183622;

}

function nsuRepeatChar(c_175196, count_175197) {
	var result_175198 = null;

		result_175198 = nimCopy(null, mnewString(count_175197), NTI36040);
		L1: do {
			var i_175207 = 0;
			var colontmp__252199 = 0;
			colontmp__252199 = (count_175197 - 1);
			var res_252200 = 0;
			L2: do {
					L3: while (true) {
					if (!(res_252200 <= colontmp__252199)) break L3;
						i_175207 = res_252200;
						result_175198[i_175207] = c_175196;
						res_252200 += 1;
					}
			} while(false);
		} while(false);

	return result_175198;

}

function format_int_205819(n_205822, radix_205823, spec_205824) {
		var Tmp7;

	var result_205825 = null;

		var v_206001 = n_205822;
		var negative_206002 = (v_206001 < 0);
		if (negative_206002) {
		v_206001 = (v_206001 * -1);
		}
		
		var xx_206004 = [];
		if (spec_205824.alternateForm) {
		switch (spec_205824.typ) {
		case 88:
			xx_206004 = nimCopy(null, makeNimstrLit("0x"), NTI36040);
			break;
		case 120:
			xx_206004 = nimCopy(null, makeNimstrLit("0x"), NTI36040);
			break;
		case 98:
			xx_206004 = nimCopy(null, makeNimstrLit("0b"), NTI36040);
			break;
		case 111:
			xx_206004 = nimCopy(null, makeNimstrLit("0o"), NTI36040);
			break;
		default: 
			break;
		}
		}
		
		if ((v_206001 == 0)) {
		result_205825 = nimCopy(null, makeNimstrLit("0"), NTI36040);
		}
		else {
			result_205825 = nimCopy(null, [], NTI36040);
			L1: do {
					L2: while (true) {
					if (!(0 < v_206001)) break L2;
						var d_206007 = Math.trunc(v_206001 % radix_205823);
						v_206001 = Math.trunc(v_206001 / radix_205823);
						if (result_205825 != null) { result_205825 = (result_205825).concat(mk_digit_183618(d_206007, spec_205824.typ)); } else { result_205825 = mk_digit_183618(d_206007, spec_205824.typ).slice(); };
					}
			} while(false);
			L3: do {
				var idx_206015 = 0;
				var colontmp__252188 = 0;
				colontmp__252188 = Math.trunc((result_205825 != null ? result_205825.length : 0) / 2);
				var i_252189 = 0;
				L4: do {
						L5: while (true) {
						if (!(i_252189 < colontmp__252188)) break L5;
							idx_206015 = i_252189;
							var Tmp6 = result_205825[idx_206015]; result_205825[idx_206015] = result_205825[(((result_205825 != null ? result_205825.length : 0) - idx_206015) - 1)]; result_205825[(((result_205825 != null ? result_205825.length : 0) - idx_206015) - 1)] = Tmp6;							i_252189 += 1;
						}
				} while(false);
			} while(false);
		}
		
		if (spec_205824.padWithZero) {
		if (negative_206002) Tmp7 = true; else {			Tmp7 = !((spec_205824.sign == 45));		}		var sign_206031 = Tmp7;
		var to_fill_206036 = (((spec_205824.minimumWidth - (result_205825 != null ? result_205825.length : 0)) - (xx_206004 != null ? xx_206004.length : 0)) - (sign_206031 ? 1:0));
		if ((0 < to_fill_206036)) {
		result_205825 = nimCopy(null, (nsuRepeatChar(48, to_fill_206036) || []).concat(result_205825 || []), NTI36040);
		}
		
		}
		
		if (negative_206002) {
		result_205825 = nimCopy(null, (makeNimstrLit("-") || []).concat(xx_206004 || [],result_205825 || []), NTI36040);
		}
		else {
		if (!((spec_205824.sign == 45))) {
		result_205825 = nimCopy(null, [spec_205824.sign].concat(xx_206004 || [],result_205825 || []), NTI36040);
		}
		else {
			result_205825 = nimCopy(null, (xx_206004 || []).concat(result_205825 || []), NTI36040);
		}
		}
		if ((spec_205824.align == 60)) {
		L8: do {
			var i_206044 = 0;
			var colontmp__252193 = 0;
			var colontmp__252194 = 0;
			colontmp__252193 = (result_205825 != null ? result_205825.length : 0);
			colontmp__252194 = spec_205824.minimumWidth;
			var i_252195 = colontmp__252193;
			L9: do {
					L10: while (true) {
					if (!(i_252195 < colontmp__252194)) break L10;
						i_206044 = i_252195;
						if (result_205825 != null) { addChar(result_205825, spec_205824.fill); } else { result_205825 = [spec_205824.fill]; };
						i_252195 += 1;
					}
			} while(false);
		} while(false);
		}
		else {
			var to_fill_206045 = (spec_205824.minimumWidth - (result_205825 != null ? result_205825.length : 0));
			if ((spec_205824.align == 94)) {
			var half_206046 = Math.trunc(to_fill_206045 / 2);
			result_205825 = nimCopy(null, (nsuRepeatChar(spec_205824.fill, half_206046) || []).concat(result_205825 || [],nsuRepeatChar(spec_205824.fill, (to_fill_206045 - half_206046)) || []), NTI36040);
			}
			else {
				if ((0 < to_fill_206045)) {
				result_205825 = nimCopy(null, (nsuRepeatChar(spec_205824.fill, to_fill_206045) || []).concat(result_205825 || []), NTI36040);
				}
				
			}
			
		}
		

	return result_205825;

}

function format_205801(value_205804, specifier_205805, res_205806, res_205806_Idx) {
		var spec_205807 = parse_standard_format_specifier_183924(specifier_205805, 0, false);
		var radix_205809 = 10;
		switch (spec_205807.typ) {
		case 120:
		case 88:
			radix_205809 = 16;
			break;
		case 100:
		case 0:
			break;
		case 98:
			radix_205809 = 2;
			break;
		case 111:
			radix_205809 = 8;
			break;
		default: 
			var e_205811 = null;
			e_205811 = {m_type: NTI40252, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
			e_205811.message = nimCopy(null, (makeNimstrLit("invalid type in format string for number, expected one  of \'x\', \'X\', \'b\', \'d\', \'o\' but got: ") || []).concat([spec_205807.typ]), NTI36040);
			e_205811.parent = null;
			raiseException(e_205811, "ValueError");
			break;
		}
		if (res_205806[res_205806_Idx] != null) { res_205806[res_205806_Idx] = (res_205806[res_205806_Idx]).concat(format_int_205819(value_205804, radix_205809, spec_205807)); } else { res_205806[res_205806_Idx] = format_int_205819(value_205804, radix_205809, spec_205807).slice(); };

	
}

function HEX24_205098(map_205100) {

		function change_colour_205103(new_colour_205105) {
			var result_205106 = null;

				if (!(eqStrings(colour_205102, new_colour_205105))) {
				result_205106 = nimCopy(null, (makeNimstrLit("\x1B[") || []).concat(new_colour_205105 || [],makeNimstrLit("m") || []), NTI36040);
				colour_205102 = nimCopy(null, new_colour_205105, NTI36040);
				}
				else {
					result_205106 = nimCopy(null, [], NTI36040);
				}
				

			return result_205106;

		}
							var Tmp4;
							var Tmp11;

	var result_205101 = null;

		var colour_205102 = null;
		if (result_205101 != null) { result_205101 = (result_205101).concat(change_colour_205103(makeNimstrLit("37"))); } else { result_205101 = change_colour_205103(makeNimstrLit("37")).slice(); };
		if ((10 <= (map_205100 != null ? map_205100.length : 0))) {
		if (result_205101 != null) { result_205101 = (result_205101).concat(makeNimstrLit("    ")); } else { result_205101 = makeNimstrLit("    "); };
		L1: do {
			var i_205142 = 0;
			var colontmp__252148 = 0;
			colontmp__252148 = (map_205100 != null ? (map_205100.length-1) : -1);
			var res_252149 = 0;
			L2: do {
					L3: while (true) {
					if (!(res_252149 <= colontmp__252148)) break L3;
						i_205142 = res_252149;
							if (!!((i_205142 == 0))) Tmp4 = false; else {								Tmp4 = ((i_205142 % 10) == 0);							}						if (Tmp4) {
						var fmt_res_205148 = mnewString(0);
						if (fmt_res_205148 != null) { fmt_res_205148 = (fmt_res_205148).concat(cstrToNimstr((HEX2F_57017(i_205142, 10))+"")); } else { fmt_res_205148 = cstrToNimstr((HEX2F_57017(i_205142, 10))+"").slice(); };
						if (result_205101 != null) { result_205101 = (result_205101).concat(fmt_res_205148); } else { result_205101 = fmt_res_205148.slice(); };
						}
						else {
						if (result_205101 != null) { result_205101 = (result_205101).concat(makeNimstrLit(" ")); } else { result_205101 = makeNimstrLit(" "); };
						}
						
						res_252149 += 1;
					}
			} while(false);
		} while(false);
		if (result_205101 != null) { result_205101 = (result_205101).concat(makeNimstrLit("\x0D\x0A")); } else { result_205101 = makeNimstrLit("\x0D\x0A"); };
		}
		
		if (result_205101 != null) { result_205101 = (result_205101).concat(makeNimstrLit("    ")); } else { result_205101 = makeNimstrLit("    "); };
		L5: do {
			var i_205215 = 0;
			var colontmp__252155 = 0;
			colontmp__252155 = (map_205100 != null ? (map_205100.length-1) : -1);
			var res_252156 = 0;
			L6: do {
					L7: while (true) {
					if (!(res_252156 <= colontmp__252155)) break L7;
						i_205215 = res_252156;
						var fmt_res_205216 = mnewString(0);
						if (fmt_res_205216 != null) { fmt_res_205216 = (fmt_res_205216).concat(cstrToNimstr(((i_205215 % 10))+"")); } else { fmt_res_205216 = cstrToNimstr(((i_205215 % 10))+"").slice(); };
						if (result_205101 != null) { result_205101 = (result_205101).concat(fmt_res_205216); } else { result_205101 = fmt_res_205216.slice(); };
						res_252156 += 1;
					}
			} while(false);
		} while(false);
		if (result_205101 != null) { result_205101 = (result_205101).concat(makeNimstrLit("\x0D\x0A")); } else { result_205101 = makeNimstrLit("\x0D\x0A"); };
		L8: do {
			var i_205442 = 0;
			var line_205443 = null;
			var i_252168 = 0;
			L9: do {
					L10: while (true) {
					if (!(i_252168 < (map_205100 != null ? map_205100.length : 0))) break L10;
						i_205442 = i_252168;
						line_205443 = map_205100[i_252168];
						if (result_205101 != null) { result_205101 = (result_205101).concat(change_colour_205103(makeNimstrLit("37"))); } else { result_205101 = change_colour_205103(makeNimstrLit("37")).slice(); };
							if (!!((i_205442 == 0))) Tmp11 = false; else {								Tmp11 = ((i_205442 % 10) == 0);							}						if (Tmp11) {
						var fmt_res_205449 = [mnewString(0)];
						format_205801(i_205442, makeNimstrLit("3"), fmt_res_205449, 0);
						if (fmt_res_205449[0] != null) { fmt_res_205449[0] = (fmt_res_205449[0]).concat(makeNimstrLit(" ")); } else { fmt_res_205449[0] = makeNimstrLit(" "); };
						if (result_205101 != null) { result_205101 = (result_205101).concat(fmt_res_205449[0]); } else { result_205101 = fmt_res_205449[0].slice(); };
						}
						else {
							var fmt_res_206076 = [mnewString(0)];
							format_205801((i_205442 % 10), makeNimstrLit("3"), fmt_res_206076, 0);
							if (fmt_res_206076[0] != null) { fmt_res_206076[0] = (fmt_res_206076[0]).concat(makeNimstrLit(" ")); } else { fmt_res_206076[0] = makeNimstrLit(" "); };
						if (result_205101 != null) { result_205101 = (result_205101).concat(fmt_res_206076[0]); } else { result_205101 = fmt_res_206076[0].slice(); };
						}
						
						L12: do {
							var square_206614 = 0;
							var i_252164 = 0;
							var l_252165 = (line_205443 != null ? line_205443.length : 0);
							L13: do {
									L14: while (true) {
									if (!(i_252164 < l_252165)) break L14;
										square_206614 = line_205443[i_252164];
										switch (square_206614) {
										case 46:
											if (result_205101 != null) { result_205101 = (result_205101).concat(change_colour_205103(makeNimstrLit("38;2;0;80;0"))); } else { result_205101 = change_colour_205103(makeNimstrLit("38;2;0;80;0")).slice(); };
											break;
										case 124:
											if (result_205101 != null) { result_205101 = (result_205101).concat(change_colour_205103(makeNimstrLit("38;2;124;252;0"))); } else { result_205101 = change_colour_205103(makeNimstrLit("38;2;124;252;0")).slice(); };
											break;
										case 35:
											if (result_205101 != null) { result_205101 = (result_205101).concat(change_colour_205103(makeNimstrLit("38;2;139;69;19"))); } else { result_205101 = change_colour_205103(makeNimstrLit("38;2;139;69;19")).slice(); };
											break;
										default: 
											break;
										}
										if (result_205101 != null) { addChar(result_205101, square_206614); } else { result_205101 = [square_206614]; };
										i_252164 += 1;
									}
							} while(false);
						} while(false);
						if (result_205101 != null) { result_205101 = (result_205101).concat(makeNimstrLit("\x0D\x0A")); } else { result_205101 = makeNimstrLit("\x0D\x0A"); };
						i_252168 += 1;
					}
			} while(false);
		} while(false);

	return result_205101;

}

function new_seq_207031(len_207034) {
	var result_207036 = null;

		result_207036 = new Array(len_207034); for (var i=0;i<len_207034;++i) {result_207036[i]={Field0: 0, Field1: 0};}
	return result_207036;

}

function adjecent_points_206973(p_206975) {
	var result_206976 = null;

		L1: do {
			var i_206987 = 0;
			var res_252239 = -1;
			L2: do {
					L3: while (true) {
					if (!(res_252239 <= 1)) break L3;
						i_206987 = res_252239;
						L4: do {
							var j_206998 = 0;
							var res_252234 = -1;
							L5: do {
									L6: while (true) {
									if (!(res_252234 <= 1)) break L6;
										j_206998 = res_252234;
										L7: do {
											if (((i_206987 == 0) && (j_206998 == 0))) {
											break L7;
											}
											
											if (result_206976 != null) { result_206976.push({Field0: (p_206975.Field0 + i_206987), Field1: (p_206975.Field1 + j_206998)}); } else { result_206976 = [{Field0: (p_206975.Field0 + i_206987), Field1: (p_206975.Field1 + j_206998)}]; };
										} while(false);
										res_252234 += 1;
									}
							} while(false);
						} while(false);
						res_252239 += 1;
					}
			} while(false);
		} while(false);

	return result_206976;

}

function bounded_adjacent_points_207020(map_207022, p_207023) {
							var Tmp4;
							var Tmp5;
							var Tmp6;

	var result_207024 = null;

	BeforeRet: do {
		var result_207025 = new_seq_207031(0);
		L1: do {
			var it_207214 = {Field0: 0, Field1: 0};
			var colontmp__252227 = null;
			colontmp__252227 = adjecent_points_206973(p_207023);
			var i_252228 = 0;
			var l_252229 = (colontmp__252227 != null ? colontmp__252227.length : 0);
			L2: do {
					L3: while (true) {
					if (!(i_252228 < l_252229)) break L3;
						nimCopy(it_207214, colontmp__252227[i_252228], NTI205073);
							if (!(0 <= it_207214.Field0)) Tmp6 = false; else {								Tmp6 = (0 <= it_207214.Field1);							}							if (!Tmp6) Tmp5 = false; else {								Tmp5 = (it_207214.Field0 < (map_207022 != null ? map_207022.length : 0));							}							if (!Tmp5) Tmp4 = false; else {								Tmp4 = (it_207214.Field1 < (map_207022[0] != null ? map_207022[0].length : 0));							}						if (Tmp4) {
						var Tmp7 = nimCopy(null, it_207214, NTI205073);
						if (result_207025 != null) { result_207025.push(Tmp7); } else { result_207025 = [Tmp7]; };
						}
						
						i_252228 += 1;
					}
			} while(false);
		} while(false);
		result_207024 = nimCopy(null, result_207025, NTI207035);
		break BeforeRet;
	} while (false);

	return result_207024;

}

function count_adjecent_207247(m_207249, p_207250, typ_207251) {
	var result_207252 = 0;

		L1: do {
			var p_207259 = {Field0: 0, Field1: 0};
			var colontmp__252221 = null;
			colontmp__252221 = bounded_adjacent_points_207020(m_207249, p_207250);
			var i_252223 = 0;
			var l_252224 = (colontmp__252221 != null ? colontmp__252221.length : 0);
			L2: do {
					L3: while (true) {
					if (!(i_252223 < l_252224)) break L3;
						nimCopy(p_207259, colontmp__252221[i_252223], NTI205073);
						if ((m_207249[p_207259.Field1][p_207259.Field0] == typ_207251)) {
						result_207252 += 1;
						}
						
						i_252223 += 1;
					}
			} while(false);
		} while(false);

	return result_207252;

}

function iterate_207279(src_map_207281, dst_map_207283, dst_map_207283_Idx) {
												var Tmp8;
												var Tmp9;
												var Tmp10;

	var result_207284 = false;

		L1: do {
			var y_207299 = 0;
			var colontmp__252214 = 0;
			colontmp__252214 = (src_map_207281 != null ? (src_map_207281.length-1) : -1);
			var res_252215 = 0;
			L2: do {
					L3: while (true) {
					if (!(res_252215 <= colontmp__252214)) break L3;
						y_207299 = res_252215;
						L4: do {
							var x_207314 = 0;
							var colontmp__252208 = 0;
							colontmp__252208 = (src_map_207281[0] != null ? (src_map_207281[0].length-1) : -1);
							var res_252209 = 0;
							L5: do {
									L6: while (true) {
									if (!(res_252209 <= colontmp__252208)) break L6;
										x_207314 = res_252209;
										L7: do {
											var current_acre_207315 = src_map_207281[y_207299][x_207314];
											dst_map_207283[dst_map_207283_Idx][y_207299][x_207314] = src_map_207281[y_207299][x_207314];
												if (!(current_acre_207315 == 46)) Tmp8 = false; else {													Tmp8 = (3 <= count_adjecent_207247(src_map_207281, {Field0: x_207314, Field1: y_207299}, 124));												}											if (Tmp8) {
											dst_map_207283[dst_map_207283_Idx][y_207299][x_207314] = 124;
											result_207284 = (result_207284 || true);
											}
											else {
												if (!(current_acre_207315 == 124)) Tmp9 = false; else {													Tmp9 = (3 <= count_adjecent_207247(src_map_207281, {Field0: x_207314, Field1: y_207299}, 35));												}											if (Tmp9) {
											dst_map_207283[dst_map_207283_Idx][y_207299][x_207314] = 35;
											result_207284 = (result_207284 || true);
											}
											else {
											if ((current_acre_207315 == 35)) {
												if (!(1 <= count_adjecent_207247(src_map_207281, {Field0: x_207314, Field1: y_207299}, 35))) Tmp10 = false; else {													Tmp10 = (1 <= count_adjecent_207247(src_map_207281, {Field0: x_207314, Field1: y_207299}, 124));												}											if (Tmp10) {
											break L7;
											}
											
											dst_map_207283[dst_map_207283_Idx][y_207299][x_207314] = 46;
											result_207284 = (result_207284 || true);
											}
											}}
										} while(false);
										res_252209 += 1;
									}
							} while(false);
						} while(false);
						res_252215 += 1;
					}
			} while(false);
		} while(false);

	return result_207284;

}

function HEX3Aanonymous_251347(e_251350) {

function reset_251438() {
		var map_name_251440 = cstrToNimstr(input_select_251353.options[input_select_251353.selectedIndex].value);
		if (!(eqStrings(map_name_251440, makeNimstrLit("random")))) {
		L1: do {
			var HEX3Atmp_251808 = nsuSplitChar(nsuStrip(get_map_251014(map_name_251440), true, true, ConstSet2), 10, -1);
			var i_251445 = 0;
			var result_251446 = new_seq_188750((HEX3Atmp_251808 != null ? HEX3Atmp_251808.length : 0));
			L2: do {
				var it_251830 = null;
				var i_252049 = 0;
				var l_252050 = (HEX3Atmp_251808 != null ? HEX3Atmp_251808.length : 0);
				L3: do {
						L4: while (true) {
						if (!(i_252049 < l_252050)) break L4;
							it_251830 = HEX3Atmp_251808[i_252049];
							result_251446[i_251445] = nimCopy(null, nsuStrip(it_251830, true, true, ConstSet3), NTI36040);
							i_251445 += 1;
							i_252049 += 1;
						}
				} while(false);
			} while(false);
		} while(false);
		var input_251839 = nimCopy(null, result_251446, NTI188754);
		maps_251401[0][0] = nimCopy(null, input_to_map_206814(input_251839), NTI205071);
		}
		else {
			maps_251401[0][0] = nimCopy(null, random_map_251236(50, 50), NTI205071);
		}
		
		var result_251845 = new_seq_206875((maps_251401[0][0][0] != null ? maps_251401[0][0][0].length : 0));
		L5: do {
			var i_251846 = 0;
			var colontmp__252053 = 0;
			colontmp__252053 = (maps_251401[0][0][0] != null ? maps_251401[0][0][0].length : 0);
			var i_252054 = 0;
			L6: do {
					L7: while (true) {
					if (!(i_252054 < colontmp__252053)) break L7;
						i_251846 = i_252054;
						result_251845[i_251846] = nimCopy(null, new_seq_206830((maps_251401[0][0] != null ? maps_251401[0][0].length : 0)), NTI206834);
						i_252054 += 1;
					}
			} while(false);
		} while(false);
		maps_251401[0][1] = nimCopy(null, result_251845, NTI206879);
		erase_screen_251918(terminal_251356);
		write_249832(terminal_251356, HEX24_205098(maps_251401[0][0]));
		i_251403 = 0;
		generation_counter_251352.innerHTML = "0";

	
}

function frame_251949() {
	BeforeRet: do {
		var done_251962 = !(iterate_207279(maps_251401[0][(i_251403 % 2)], maps_251401[0], ((i_251403 + 1) % 2)));
		erase_screen_251918(terminal_251356);
		write_249832(terminal_251356, HEX24_205098(maps_251401[0][(i_251403 % 2)]));
		i_251403 += 1;
		generation_counter_251352.innerHTML = toJSStr(cstrToNimstr((i_251403)+""));
		if (done_251962) {
		break BeforeRet;
		}
		
		timeout_251358 = window.setTimeout(frame_251949, 250);
	} while (false);

	
}

		function do_reset_251993(e_251995) {
				window.clearInterval(timeout_251358);
				reset_251438();
				timeout_251358 = window.setTimeout(frame_251949, 0);

			
		}

		var terminal_element_251351 = document.getElementById("terminal");
		var generation_counter_251352 = document.getElementById("generation");
		var input_select_251353 = document.getElementById("input-select");
		var reset_button_251354 = document.getElementById("reset-button");
		var terminal_251356 = new_terminal_249878(terminal_element_251351, 80, 25);
		var timeout_251358 = null;
		var maps_251401 = [new_seq_251362(2)];
		var i_251403 = 0;
		L1: do {
			var map_251435 = null;
			var colontmp__252042 = null;
			var result_251404 = new_seq_251024(0);
			L2: do {
				var it_251421 = null;
				var colontmp__252037 = null;
				colontmp__252037 = document.getElementsByTagName("script");
				var i_252039 = 0;
				var l_252040 = (colontmp__252037 != null ? colontmp__252037.length : 0);
				L3: do {
						L4: while (true) {
						if (!(i_252039 < l_252040)) break L4;
							it_251421 = colontmp__252037[i_252039];
							if ((it_251421.getAttribute("type") == "text/x-game-map")) {
							if (result_251404 != null) { result_251404.push(it_251421); } else { result_251404 = [it_251421]; };
							}
							
							i_252039 += 1;
						}
				} while(false);
			} while(false);
			colontmp__252042 = result_251404;
			var i_252043 = 0;
			var l_252044 = (colontmp__252042 != null ? colontmp__252042.length : 0);
			L5: do {
					L6: while (true) {
					if (!(i_252043 < l_252044)) break L6;
						map_251435 = colontmp__252042[i_252043];
						var option_251436 = document.createElement("option");
						option_251436.text = map_251435.getAttribute("id");
						option_251436.value = map_251435.getAttribute("id");
						input_select_251353.appendChild(option_251436);
						i_252043 += 1;
					}
			} while(false);
		} while(false);
		var option_251437 = document.createElement("option");
		option_251437.text = "random";
		option_251437.value = "random";
		input_select_251353.appendChild(option_251437);
		input_select_251353.addEventListener("change", do_reset_251993, false);
		reset_button_251354.addEventListener("click", do_reset_251993, false);
		reset_251438();
		timeout_251358 = window.setTimeout(frame_251949, 0);

	
}
window.onload = HEX3Aanonymous_251347;
