/* Generated by the Nim Compiler v0.19.9 */
/*   (c) 2018 Andreas Rumpf */

var framePtr = null;
var excHandler = 0;
var lastJSError = null;
if (typeof Int8Array === 'undefined') Int8Array = Array;
if (typeof Int16Array === 'undefined') Int16Array = Array;
if (typeof Int32Array === 'undefined') Int32Array = Array;
if (typeof Uint8Array === 'undefined') Uint8Array = Array;
if (typeof Uint16Array === 'undefined') Uint16Array = Array;
if (typeof Uint32Array === 'undefined') Uint32Array = Array;
if (typeof Float32Array === 'undefined') Float32Array = Array;
if (typeof Float64Array === 'undefined') Float64Array = Array;
var NTI190680 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI190617 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI189015 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI189019 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI189017 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI189021 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI189025 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI189023 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI190572 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI240623 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI174873 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI40230 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI40252 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI192751 = {size: 0,kind: 16,base: null,node: null,finalizer: null};
var NTI192752 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI192656 = {size: 0,kind: 16,base: null,node: null,finalizer: null};
var NTI192657 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI190827 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI191030 = {size: 0,kind: 16,base: null,node: null,finalizer: null};
var NTI191031 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI190430 = {size: 0,kind: 16,base: null,node: null,finalizer: null};
var NTI190431 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI190316 = {size: 0,kind: 16,base: null,node: null,finalizer: null};
var NTI190157 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI190107 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI190777 = {size: 0,kind: 16,base: null,node: null,finalizer: null};
var NTI190778 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI190317 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI195049 = {size: 0,kind: 16,base: null,node: null,finalizer: null};
var NTI195050 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI40314 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI36016 = {size: 0,kind: 40,base: null,node: null,finalizer: null};
var NTI40308 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI40226 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI40228 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI40260 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI189031 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI71448 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI71444 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI71440 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI71436 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI71432 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI71428 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI71424 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI71420 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI71416 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI71412 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI71408 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI71404 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI71400 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI71396 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI71392 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI71388 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI71384 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI71380 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI71376 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI71372 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI71205 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI71283 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI71281 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI71227 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI71565 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI71563 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI71229 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI71561 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI71231 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI71614 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI71271 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI71269 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI71612 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI36006 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI71700 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI71275 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI71273 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI36042 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI36032 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI40208 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI71225 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI71223 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI71239 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI71237 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI240028 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI36040 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NNI71225 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI71225.node = NNI71225;
var NNI40208 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI40208.node = NNI40208;
NTI71225.base = NTI40208;
NTI71223.base = NTI71225;
NTI71700.base = NTI71237;
var NNI71275 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "acceptCharset", len: 0, typ: NTI36042, name: "acceptCharset", sons: null}, 
{kind: 1, offset: "action", len: 0, typ: NTI36042, name: "action", sons: null}, 
{kind: 1, offset: "autocomplete", len: 0, typ: NTI36042, name: "autocomplete", sons: null}, 
{kind: 1, offset: "elements", len: 0, typ: NTI71700, name: "elements", sons: null}, 
{kind: 1, offset: "encoding", len: 0, typ: NTI36042, name: "encoding", sons: null}, 
{kind: 1, offset: "enctype", len: 0, typ: NTI36042, name: "enctype", sons: null}, 
{kind: 1, offset: "length", len: 0, typ: NTI36006, name: "length", sons: null}, 
{kind: 1, offset: "method", len: 0, typ: NTI36042, name: "method", sons: null}, 
{kind: 1, offset: "noValidate", len: 0, typ: NTI36032, name: "noValidate", sons: null}, 
{kind: 1, offset: "target", len: 0, typ: NTI36042, name: "target", sons: null}]};
NTI71275.node = NNI71275;
NTI71275.base = NTI71239;
NTI71273.base = NTI71275;
var NNI71271 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "defaultSelected", len: 0, typ: NTI36032, name: "defaultSelected", sons: null}, 
{kind: 1, offset: "selected", len: 0, typ: NTI36032, name: "selected", sons: null}, 
{kind: 1, offset: "selectedIndex", len: 0, typ: NTI36006, name: "selectedIndex", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI36042, name: "text", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI36042, name: "value", sons: null}]};
NTI71271.node = NNI71271;
NTI71271.base = NTI71239;
NTI71269.base = NTI71271;
NTI71612.base = NTI71269;
NTI71614.base = NTI71269;
var NNI71239 = {kind: 2, len: 19, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "classList", len: 0, typ: NTI71223, name: "classList", sons: null}, 
{kind: 1, offset: "checked", len: 0, typ: NTI36032, name: "checked", sons: null}, 
{kind: 1, offset: "defaultChecked", len: 0, typ: NTI36032, name: "defaultChecked", sons: null}, 
{kind: 1, offset: "defaultValue", len: 0, typ: NTI36042, name: "defaultValue", sons: null}, 
{kind: 1, offset: "disabled", len: 0, typ: NTI36032, name: "disabled", sons: null}, 
{kind: 1, offset: "form", len: 0, typ: NTI71273, name: "form", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI36042, name: "name", sons: null}, 
{kind: 1, offset: "readOnly", len: 0, typ: NTI36032, name: "readOnly", sons: null}, 
{kind: 1, offset: "options", len: 0, typ: NTI71612, name: "options", sons: null}, 
{kind: 1, offset: "selectedOptions", len: 0, typ: NTI71614, name: "selectedOptions", sons: null}, 
{kind: 1, offset: "clientWidth", len: 0, typ: NTI36006, name: "clientWidth", sons: null}, 
{kind: 1, offset: "clientHeight", len: 0, typ: NTI36006, name: "clientHeight", sons: null}, 
{kind: 1, offset: "contentEditable", len: 0, typ: NTI36042, name: "contentEditable", sons: null}, 
{kind: 1, offset: "isContentEditable", len: 0, typ: NTI36032, name: "isContentEditable", sons: null}, 
{kind: 1, offset: "dir", len: 0, typ: NTI36042, name: "dir", sons: null}, 
{kind: 1, offset: "offsetHeight", len: 0, typ: NTI36006, name: "offsetHeight", sons: null}, 
{kind: 1, offset: "offsetWidth", len: 0, typ: NTI36006, name: "offsetWidth", sons: null}, 
{kind: 1, offset: "offsetLeft", len: 0, typ: NTI36006, name: "offsetLeft", sons: null}, 
{kind: 1, offset: "offsetTop", len: 0, typ: NTI36006, name: "offsetTop", sons: null}]};
NTI71239.node = NNI71239;
NTI71229.base = NTI71231;
NTI71561.base = NTI71229;
NTI71563.base = NTI71229;
NTI71565.base = NTI71229;
var NNI71227 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"1": {kind: 1, offset: 1, typ: NTI71227, name: "ElementNode", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI71227, name: "AttributeNode", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI71227, name: "TextNode", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI71227, name: "CDATANode", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI71227, name: "EntityRefNode", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI71227, name: "EntityNode", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI71227, name: "ProcessingInstructionNode", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI71227, name: "CommentNode", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI71227, name: "DocumentNode", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI71227, name: "DocumentTypeNode", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI71227, name: "DocumentFragmentNode", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI71227, name: "NotationNode", len: 0, sons: null}}};
NTI71227.node = NNI71227;
var NNI71283 = {kind: 2, len: 91, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "background", len: 0, typ: NTI36042, name: "background", sons: null}, 
{kind: 1, offset: "backgroundAttachment", len: 0, typ: NTI36042, name: "backgroundAttachment", sons: null}, 
{kind: 1, offset: "backgroundColor", len: 0, typ: NTI36042, name: "backgroundColor", sons: null}, 
{kind: 1, offset: "backgroundImage", len: 0, typ: NTI36042, name: "backgroundImage", sons: null}, 
{kind: 1, offset: "backgroundPosition", len: 0, typ: NTI36042, name: "backgroundPosition", sons: null}, 
{kind: 1, offset: "backgroundRepeat", len: 0, typ: NTI36042, name: "backgroundRepeat", sons: null}, 
{kind: 1, offset: "border", len: 0, typ: NTI36042, name: "border", sons: null}, 
{kind: 1, offset: "borderBottom", len: 0, typ: NTI36042, name: "borderBottom", sons: null}, 
{kind: 1, offset: "borderBottomColor", len: 0, typ: NTI36042, name: "borderBottomColor", sons: null}, 
{kind: 1, offset: "borderBottomStyle", len: 0, typ: NTI36042, name: "borderBottomStyle", sons: null}, 
{kind: 1, offset: "borderBottomWidth", len: 0, typ: NTI36042, name: "borderBottomWidth", sons: null}, 
{kind: 1, offset: "borderColor", len: 0, typ: NTI36042, name: "borderColor", sons: null}, 
{kind: 1, offset: "borderLeft", len: 0, typ: NTI36042, name: "borderLeft", sons: null}, 
{kind: 1, offset: "borderLeftColor", len: 0, typ: NTI36042, name: "borderLeftColor", sons: null}, 
{kind: 1, offset: "borderLeftStyle", len: 0, typ: NTI36042, name: "borderLeftStyle", sons: null}, 
{kind: 1, offset: "borderLeftWidth", len: 0, typ: NTI36042, name: "borderLeftWidth", sons: null}, 
{kind: 1, offset: "borderRight", len: 0, typ: NTI36042, name: "borderRight", sons: null}, 
{kind: 1, offset: "borderRightColor", len: 0, typ: NTI36042, name: "borderRightColor", sons: null}, 
{kind: 1, offset: "borderRightStyle", len: 0, typ: NTI36042, name: "borderRightStyle", sons: null}, 
{kind: 1, offset: "borderRightWidth", len: 0, typ: NTI36042, name: "borderRightWidth", sons: null}, 
{kind: 1, offset: "borderStyle", len: 0, typ: NTI36042, name: "borderStyle", sons: null}, 
{kind: 1, offset: "borderTop", len: 0, typ: NTI36042, name: "borderTop", sons: null}, 
{kind: 1, offset: "borderTopColor", len: 0, typ: NTI36042, name: "borderTopColor", sons: null}, 
{kind: 1, offset: "borderTopStyle", len: 0, typ: NTI36042, name: "borderTopStyle", sons: null}, 
{kind: 1, offset: "borderTopWidth", len: 0, typ: NTI36042, name: "borderTopWidth", sons: null}, 
{kind: 1, offset: "borderWidth", len: 0, typ: NTI36042, name: "borderWidth", sons: null}, 
{kind: 1, offset: "bottom", len: 0, typ: NTI36042, name: "bottom", sons: null}, 
{kind: 1, offset: "captionSide", len: 0, typ: NTI36042, name: "captionSide", sons: null}, 
{kind: 1, offset: "clear", len: 0, typ: NTI36042, name: "clear", sons: null}, 
{kind: 1, offset: "clip", len: 0, typ: NTI36042, name: "clip", sons: null}, 
{kind: 1, offset: "color", len: 0, typ: NTI36042, name: "color", sons: null}, 
{kind: 1, offset: "cursor", len: 0, typ: NTI36042, name: "cursor", sons: null}, 
{kind: 1, offset: "direction", len: 0, typ: NTI36042, name: "direction", sons: null}, 
{kind: 1, offset: "display", len: 0, typ: NTI36042, name: "display", sons: null}, 
{kind: 1, offset: "emptyCells", len: 0, typ: NTI36042, name: "emptyCells", sons: null}, 
{kind: 1, offset: "cssFloat", len: 0, typ: NTI36042, name: "cssFloat", sons: null}, 
{kind: 1, offset: "font", len: 0, typ: NTI36042, name: "font", sons: null}, 
{kind: 1, offset: "fontFamily", len: 0, typ: NTI36042, name: "fontFamily", sons: null}, 
{kind: 1, offset: "fontSize", len: 0, typ: NTI36042, name: "fontSize", sons: null}, 
{kind: 1, offset: "fontStretch", len: 0, typ: NTI36042, name: "fontStretch", sons: null}, 
{kind: 1, offset: "fontStyle", len: 0, typ: NTI36042, name: "fontStyle", sons: null}, 
{kind: 1, offset: "fontVariant", len: 0, typ: NTI36042, name: "fontVariant", sons: null}, 
{kind: 1, offset: "fontWeight", len: 0, typ: NTI36042, name: "fontWeight", sons: null}, 
{kind: 1, offset: "height", len: 0, typ: NTI36042, name: "height", sons: null}, 
{kind: 1, offset: "left", len: 0, typ: NTI36042, name: "left", sons: null}, 
{kind: 1, offset: "letterSpacing", len: 0, typ: NTI36042, name: "letterSpacing", sons: null}, 
{kind: 1, offset: "lineHeight", len: 0, typ: NTI36042, name: "lineHeight", sons: null}, 
{kind: 1, offset: "listStyle", len: 0, typ: NTI36042, name: "listStyle", sons: null}, 
{kind: 1, offset: "listStyleImage", len: 0, typ: NTI36042, name: "listStyleImage", sons: null}, 
{kind: 1, offset: "listStylePosition", len: 0, typ: NTI36042, name: "listStylePosition", sons: null}, 
{kind: 1, offset: "listStyleType", len: 0, typ: NTI36042, name: "listStyleType", sons: null}, 
{kind: 1, offset: "margin", len: 0, typ: NTI36042, name: "margin", sons: null}, 
{kind: 1, offset: "marginBottom", len: 0, typ: NTI36042, name: "marginBottom", sons: null}, 
{kind: 1, offset: "marginLeft", len: 0, typ: NTI36042, name: "marginLeft", sons: null}, 
{kind: 1, offset: "marginRight", len: 0, typ: NTI36042, name: "marginRight", sons: null}, 
{kind: 1, offset: "marginTop", len: 0, typ: NTI36042, name: "marginTop", sons: null}, 
{kind: 1, offset: "maxHeight", len: 0, typ: NTI36042, name: "maxHeight", sons: null}, 
{kind: 1, offset: "maxWidth", len: 0, typ: NTI36042, name: "maxWidth", sons: null}, 
{kind: 1, offset: "minHeight", len: 0, typ: NTI36042, name: "minHeight", sons: null}, 
{kind: 1, offset: "minWidth", len: 0, typ: NTI36042, name: "minWidth", sons: null}, 
{kind: 1, offset: "overflow", len: 0, typ: NTI36042, name: "overflow", sons: null}, 
{kind: 1, offset: "padding", len: 0, typ: NTI36042, name: "padding", sons: null}, 
{kind: 1, offset: "paddingBottom", len: 0, typ: NTI36042, name: "paddingBottom", sons: null}, 
{kind: 1, offset: "paddingLeft", len: 0, typ: NTI36042, name: "paddingLeft", sons: null}, 
{kind: 1, offset: "paddingRight", len: 0, typ: NTI36042, name: "paddingRight", sons: null}, 
{kind: 1, offset: "paddingTop", len: 0, typ: NTI36042, name: "paddingTop", sons: null}, 
{kind: 1, offset: "pageBreakAfter", len: 0, typ: NTI36042, name: "pageBreakAfter", sons: null}, 
{kind: 1, offset: "pageBreakBefore", len: 0, typ: NTI36042, name: "pageBreakBefore", sons: null}, 
{kind: 1, offset: "pointerEvents", len: 0, typ: NTI36042, name: "pointerEvents", sons: null}, 
{kind: 1, offset: "position", len: 0, typ: NTI36042, name: "position", sons: null}, 
{kind: 1, offset: "right", len: 0, typ: NTI36042, name: "right", sons: null}, 
{kind: 1, offset: "scrollbar3dLightColor", len: 0, typ: NTI36042, name: "scrollbar3dLightColor", sons: null}, 
{kind: 1, offset: "scrollbarArrowColor", len: 0, typ: NTI36042, name: "scrollbarArrowColor", sons: null}, 
{kind: 1, offset: "scrollbarBaseColor", len: 0, typ: NTI36042, name: "scrollbarBaseColor", sons: null}, 
{kind: 1, offset: "scrollbarDarkshadowColor", len: 0, typ: NTI36042, name: "scrollbarDarkshadowColor", sons: null}, 
{kind: 1, offset: "scrollbarFaceColor", len: 0, typ: NTI36042, name: "scrollbarFaceColor", sons: null}, 
{kind: 1, offset: "scrollbarHighlightColor", len: 0, typ: NTI36042, name: "scrollbarHighlightColor", sons: null}, 
{kind: 1, offset: "scrollbarShadowColor", len: 0, typ: NTI36042, name: "scrollbarShadowColor", sons: null}, 
{kind: 1, offset: "scrollbarTrackColor", len: 0, typ: NTI36042, name: "scrollbarTrackColor", sons: null}, 
{kind: 1, offset: "tableLayout", len: 0, typ: NTI36042, name: "tableLayout", sons: null}, 
{kind: 1, offset: "textAlign", len: 0, typ: NTI36042, name: "textAlign", sons: null}, 
{kind: 1, offset: "textDecoration", len: 0, typ: NTI36042, name: "textDecoration", sons: null}, 
{kind: 1, offset: "textIndent", len: 0, typ: NTI36042, name: "textIndent", sons: null}, 
{kind: 1, offset: "textTransform", len: 0, typ: NTI36042, name: "textTransform", sons: null}, 
{kind: 1, offset: "transform", len: 0, typ: NTI36042, name: "transform", sons: null}, 
{kind: 1, offset: "top", len: 0, typ: NTI36042, name: "top", sons: null}, 
{kind: 1, offset: "verticalAlign", len: 0, typ: NTI36042, name: "verticalAlign", sons: null}, 
{kind: 1, offset: "visibility", len: 0, typ: NTI36042, name: "visibility", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI36042, name: "width", sons: null}, 
{kind: 1, offset: "wordSpacing", len: 0, typ: NTI36042, name: "wordSpacing", sons: null}, 
{kind: 1, offset: "zIndex", len: 0, typ: NTI36006, name: "zIndex", sons: null}]};
NTI71283.node = NNI71283;
NTI71283.base = NTI40208;
NTI71281.base = NTI71283;
var NNI71231 = {kind: 2, len: 14, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "attributes", len: 0, typ: NTI71561, name: "attributes", sons: null}, 
{kind: 1, offset: "childNodes", len: 0, typ: NTI71563, name: "childNodes", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI71565, name: "children", sons: null}, 
{kind: 1, offset: "data", len: 0, typ: NTI36042, name: "data", sons: null}, 
{kind: 1, offset: "firstChild", len: 0, typ: NTI71229, name: "firstChild", sons: null}, 
{kind: 1, offset: "lastChild", len: 0, typ: NTI71229, name: "lastChild", sons: null}, 
{kind: 1, offset: "nextSibling", len: 0, typ: NTI71229, name: "nextSibling", sons: null}, 
{kind: 1, offset: "nodeName", len: 0, typ: NTI36042, name: "nodeName", sons: null}, 
{kind: 1, offset: "nodeType", len: 0, typ: NTI71227, name: "nodeType", sons: null}, 
{kind: 1, offset: "nodeValue", len: 0, typ: NTI36042, name: "nodeValue", sons: null}, 
{kind: 1, offset: "parentNode", len: 0, typ: NTI71229, name: "parentNode", sons: null}, 
{kind: 1, offset: "previousSibling", len: 0, typ: NTI71229, name: "previousSibling", sons: null}, 
{kind: 1, offset: "innerHTML", len: 0, typ: NTI36042, name: "innerHTML", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI71281, name: "style", sons: null}]};
NTI71231.node = NNI71231;
var NNI71205 = {kind: 2, len: 20, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "onabort", len: 0, typ: NTI71372, name: "onabort", sons: null}, 
{kind: 1, offset: "onblur", len: 0, typ: NTI71376, name: "onblur", sons: null}, 
{kind: 1, offset: "onchange", len: 0, typ: NTI71380, name: "onchange", sons: null}, 
{kind: 1, offset: "onclick", len: 0, typ: NTI71384, name: "onclick", sons: null}, 
{kind: 1, offset: "ondblclick", len: 0, typ: NTI71388, name: "ondblclick", sons: null}, 
{kind: 1, offset: "onerror", len: 0, typ: NTI71392, name: "onerror", sons: null}, 
{kind: 1, offset: "onfocus", len: 0, typ: NTI71396, name: "onfocus", sons: null}, 
{kind: 1, offset: "onkeydown", len: 0, typ: NTI71400, name: "onkeydown", sons: null}, 
{kind: 1, offset: "onkeypress", len: 0, typ: NTI71404, name: "onkeypress", sons: null}, 
{kind: 1, offset: "onkeyup", len: 0, typ: NTI71408, name: "onkeyup", sons: null}, 
{kind: 1, offset: "onload", len: 0, typ: NTI71412, name: "onload", sons: null}, 
{kind: 1, offset: "onmousedown", len: 0, typ: NTI71416, name: "onmousedown", sons: null}, 
{kind: 1, offset: "onmousemove", len: 0, typ: NTI71420, name: "onmousemove", sons: null}, 
{kind: 1, offset: "onmouseout", len: 0, typ: NTI71424, name: "onmouseout", sons: null}, 
{kind: 1, offset: "onmouseover", len: 0, typ: NTI71428, name: "onmouseover", sons: null}, 
{kind: 1, offset: "onmouseup", len: 0, typ: NTI71432, name: "onmouseup", sons: null}, 
{kind: 1, offset: "onreset", len: 0, typ: NTI71436, name: "onreset", sons: null}, 
{kind: 1, offset: "onselect", len: 0, typ: NTI71440, name: "onselect", sons: null}, 
{kind: 1, offset: "onsubmit", len: 0, typ: NTI71444, name: "onsubmit", sons: null}, 
{kind: 1, offset: "onunload", len: 0, typ: NTI71448, name: "onunload", sons: null}]};
NTI71205.node = NNI71205;
NTI71205.base = NTI40208;
NTI71231.base = NTI71205;
NTI71239.base = NTI71231;
NTI71237.base = NTI71239;
NTI240028.base = NTI71237;
var NNI189031 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI36006, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI36006, name: "Field1", sons: null}]};
NTI189031.node = NNI189031;
var NNI40260 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI40260.node = NNI40260;
var NNI40228 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI40228.node = NNI40228;
NTI40308.base = NTI40226;
NTI40314.base = NTI40226;
var NNI40226 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI40308, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI36042, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI36040, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI36040, name: "trace", sons: null}, 
{kind: 1, offset: "raiseId", len: 0, typ: NTI36016, name: "raiseId", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI40314, name: "up", sons: null}]};
NTI40226.node = NNI40226;
NTI40226.base = NTI40208;
NTI40228.base = NTI40226;
NTI40260.base = NTI40228;
var NNI195050 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI36006, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI36006, name: "Field1", sons: null}]};
NTI195050.node = NNI195050;
NTI195049.base = NTI195050;
var NNI190317 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI36006, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI36006, name: "Field1", sons: null}]};
NTI190317.node = NNI190317;
var NNI190778 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI36006, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI36006, name: "Field1", sons: null}]};
NTI190778.node = NNI190778;
NTI190777.base = NTI190778;
NTI190107.base = NTI36006;
NTI190157.base = NTI190107;
NTI190316.base = NTI190317;
var NNI190431 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI36006, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI36006, name: "Field1", sons: null}]};
NTI190431.node = NNI190431;
NTI190430.base = NTI190431;
var NNI191031 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI36006, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI36006, name: "Field1", sons: null}]};
NTI191031.node = NNI191031;
NTI191030.base = NTI191031;
var NNI190827 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI36006, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI189031, name: "Field1", sons: null}]};
NTI190827.node = NNI190827;
var NNI192657 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI36006, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI36006, name: "Field1", sons: null}]};
NTI192657.node = NNI192657;
NTI192656.base = NTI192657;
var NNI192752 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI36006, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI36006, name: "Field1", sons: null}]};
NTI192752.node = NNI192752;
NTI192751.base = NTI192752;
var NNI40252 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI40252.node = NNI40252;
var NNI40230 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI40230.node = NNI40230;
NTI40230.base = NTI40226;
NTI40252.base = NTI40230;
NTI174873.base = NTI36040;
NTI240623.base = NTI36040;
var NNI189021 = {kind: 2, offset: 0, typ: null, name: null, len: 2, sons: {"0": {kind: 1, offset: 0, typ: NTI189021, name: "tkWall", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI189021, name: "tkCavern", len: 0, sons: null}}};
NTI189021.node = NNI189021;
var NNI189015 = {kind: 2, offset: 0, typ: null, name: null, len: 2, sons: {"0": {kind: 1, offset: 0, typ: NTI189015, name: "nkGoblin", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI189015, name: "nkElf", len: 0, sons: null}}};
NTI189015.node = NNI189015;
var NNI189019 = {kind: 3, offset: "kind", len: 2, typ: NTI189015, name: "kind", sons: [[setConstr(0, 1), {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "attack", len: 0, typ: NTI36006, name: "attack", sons: null}, 
{kind: 1, offset: "hp", len: 0, typ: NTI36006, name: "hp", sons: null}, 
{kind: 1, offset: "moved", len: 0, typ: NTI36032, name: "moved", sons: null}]}]]};
NTI189019.node = NNI189019;
NTI189017.base = NTI189019;
var NNI189025 = {kind: 3, offset: "kind", len: 2, typ: NTI189021, name: "kind", sons: [[setConstr(0), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(1), {kind: 1, offset: "npc", len: 0, typ: NTI189017, name: "npc", sons: null}]]};
NTI189025.node = NNI189025;
NTI189023.base = NTI189025;
NTI190572.base = NTI189023;
NTI190617.base = NTI190572;
NTI190680.base = NTI189031;

function makeNimstrLit(c_53995) {
		  var ln = c_53995.length;
  var result = new Array(ln);
  for (var i = 0; i < ln; ++i) {
    result[i] = c_53995.charCodeAt(i);
  }
  return result;
  

	
}

function setConstr() {
		    var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

	
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_55027, src_55028, ti_55029) {
	var result_55219 = null;

		switch (ti_55029.kind) {
		case 21:
		case 22:
		case 23:
		case 5:
			if (!(is_fat_pointer_55001(ti_55029))) {
			result_55219 = src_55028;
			}
			else {
				result_55219 = [src_55028[0], src_55028[1]];
			}
			
			break;
		case 19:
			      if (dest_55027 === null || dest_55027 === undefined) {
        dest_55027 = {};
      }
      else {
        for (var key in dest_55027) { delete dest_55027[key]; }
      }
      for (var key in src_55028) { dest_55027[key] = src_55028[key]; }
      result_55219 = dest_55027;
    
			break;
		case 18:
		case 17:
			if (!((ti_55029.base == null))) {
			result_55219 = nimCopy(dest_55027, src_55028, ti_55029.base);
			}
			else {
			if ((ti_55029.kind == 17)) {
			result_55219 = (dest_55027 === null || dest_55027 === undefined) ? {m_type: ti_55029} : dest_55027;
			}
			else {
				result_55219 = (dest_55027 === null || dest_55027 === undefined) ? {} : dest_55027;
			}
			}
			nimCopyAux(result_55219, src_55028, ti_55029.node);
			break;
		case 24:
		case 4:
		case 27:
		case 16:
			      if (src_55028 === null) {
        result_55219 = null;
      }
      else {
        if (dest_55027 === null || dest_55027 === undefined) {
          dest_55027 = new Array(src_55028.length);
        }
        else {
          dest_55027.length = src_55028.length;
        }
        result_55219 = dest_55027;
        for (var i = 0; i < src_55028.length; ++i) {
          result_55219[i] = nimCopy(result_55219[i], src_55028[i], ti_55029.base);
        }
      }
    
			break;
		case 28:
			      if (src_55028 !== null) {
        result_55219 = src_55028.slice(0);
      }
    
			break;
		default: 
			result_55219 = src_55028;
			break;
		}

	return result_55219;

}

function toJSStr(s_54029) {
		  if (s_54029 === null) return "";
  var len = s_54029.length;
  var asciiPart = new Array(len);
  var fcc = String.fromCharCode;
  var nonAsciiPart = null;
  var nonAsciiOffset = 0;
  for (var i = 0; i < len; ++i) {
    if (nonAsciiPart !== null) {
      var offset = (i - nonAsciiOffset) * 2;
      var code = s_54029[i].toString(16);
      if (code.length == 1) {
        code = "0"+code;
      }
      nonAsciiPart[offset] = "%";
      nonAsciiPart[offset + 1] = code;
    }
    else if (s_54029[i] < 128)
      asciiPart[i] = fcc(s_54029[i]);
    else {
      asciiPart.length = i;
      nonAsciiOffset = i;
      nonAsciiPart = new Array((len - i) * 2);
      --i;
    }
  }
  asciiPart = asciiPart.join("");
  return (nonAsciiPart === null) ?
      asciiPart : asciiPart + decodeURIComponent(nonAsciiPart.join(""));
  

	
}

function nimMax(a_54758, b_54759) {
		var Tmp1;

	var result_54760 = 0;

	BeforeRet: do {
		if ((b_54759 <= a_54758)) {
		Tmp1 = a_54758;
		}
		else {
		Tmp1 = b_54759;
		}
		
		result_54760 = Tmp1;
		break BeforeRet;
	} while (false);

	return result_54760;

}
var ConstSet2 = setConstr(1);

function raiseException(e_53618, ename_53619) {
		e_53618.name = ename_53619;
		if ((excHandler == 0)) {
		unhandledException(e_53618);
		}
		
		throw e_53618;

	
}

function raiseFieldError(f_53954) {
		var e_53957 = null;
		e_53957 = {m_type: NTI40260, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_53957.message = nimCopy(null, (f_53954 || []).concat(makeNimstrLit(" is not accessible") || []), NTI36040);
		e_53957.parent = null;
		raiseException(e_53957, "FieldError");

	
}
var ConstSet3 = setConstr(0, 1);
var ConstSet4 = setConstr(1);
var ConstSet5 = setConstr(1);
var ConstSet6 = setConstr(1);
var ConstSet7 = setConstr(0, 1);
var ConstSet8 = setConstr(1);
var ConstSet9 = setConstr(1);
var ConstSet10 = setConstr(1);
var ConstSet11 = setConstr(1);
var ConstSet12 = setConstr(1);
var ConstSet13 = setConstr(1);
var ConstSet14 = setConstr(1);
var ConstSet15 = setConstr(1);
var ConstSet16 = setConstr(1);
var ConstSet17 = setConstr(1);
var ConstSet18 = setConstr(1);
var ConstSet19 = setConstr(0, 1);
var ConstSet20 = setConstr(1);
var ConstSet21 = setConstr(1);
var ConstSet22 = setConstr(1);
var ConstSet23 = setConstr(0, 1);
var ConstSet24 = setConstr(0, 1);
var ConstSet25 = setConstr(0, 1);
var ConstSet26 = setConstr(0, 1);
var ConstSet27 = setConstr(0, 1);
var ConstSet28 = setConstr(1);
var ConstSet29 = setConstr(1);

function addChar(x_55419, c_55420) {
		x_55419.push(c_55420);

	
}

function rawEcho() {
		      var buf = "";
      for (var i = 0; i < arguments.length; ++i) {
        buf += toJSStr(arguments[i]);
      }
      console.log(buf);
    

	
}

function mnewString(len_54046) {
		    return new Array(len_54046);
  

	
}

function nimCharToStr(x_53062) {
	var result_53063 = null;

		result_53063 = nimCopy(null, mnewString(1), NTI36040);
		result_53063[0] = x_53062;

	return result_53063;

}

function eqStrings(a_54224, b_54225) {
		    if (a_54224 == b_54225) return true;
    if (a_54224 === null && b_54225.length == 0) return true;
    if (b_54225 === null && a_54224.length == 0) return true;
    if ((!a_54224) || (!b_54225)) return false;
    var alen = a_54224.length;
    if (alen != b_54225.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_54224[i] != b_54225[i]) return false;
    return true;
  

	
}
var ConstSet30 = setConstr([48, 57]);
var ConstSet31 = setConstr([48, 57]);
				var colours_236156 = [makeNimstrLit("0,0,0"), makeNimstrLit("205,0,0"), makeNimstrLit("0,205,0"), makeNimstrLit("205,205,0"), makeNimstrLit("0,0,238"), makeNimstrLit("205,0,205"), makeNimstrLit("0,205,205"), makeNimstrLit("229,229,229")];
var ConstSet32 = setConstr(1);
var ConstSet33 = setConstr(1);
var ConstSet34 = setConstr(1);

function cstrToNimstr(c_54012) {
		  var ln = c_54012.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_54012.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_54012.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

	
}
var ConstSet35 = setConstr(0, 1);
var ConstSet36 = setConstr(1);
var ConstSet37 = setConstr(0, 1);
var ConstSet38 = setConstr(1);
var ConstSet39 = setConstr(0, 1);
var ConstSet40 = setConstr(0, 1);
var ConstSet41 = setConstr(0, 1);
var ConstSet42 = setConstr(0, 1);
var ConstSet43 = setConstr(1);
var ConstSet44 = setConstr(0, 1);
var ConstSet45 = setConstr(1);

function nimMin(a_54740, b_54741) {
		var Tmp1;

	var result_54742 = 0;

	BeforeRet: do {
		if ((a_54740 <= b_54741)) {
		Tmp1 = a_54740;
		}
		else {
		Tmp1 = b_54741;
		}
		
		result_54742 = Tmp1;
		break BeforeRet;
	} while (false);

	return result_54742;

}
var ConstSet46 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet47 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet48 = setConstr(1);
var ConstSet49 = setConstr(1);
var nim_program_result = 0;
var global_raise_hook_50418 = [null];
var local_raise_hook_50423 = [null];
var out_of_mem_hook_50426 = [null];
  if (!Math.trunc) {
    Math.trunc = function(v) {
      v = +v;
      if (!isFinite(v)) return v;

      return (v - v % 1)   ||   (v < 0 ? -0 : v === 0 ? v : 0);
    };
  }
var object_id_185237 = [0];

function new_238885() {
	var result_238889 = null;

	BeforeRet: do {
		var r_239001 = null;
		r_239001 = {columns: 0, rows: 0, x: 0, y: 0, cell_width: 0, cell_height: 0, fg_colour: null, bg_colour: null, font: null, canvas: null, ctx: null};
		result_238889 = r_239001;
		break BeforeRet;
	} while (false);

	return result_238889;

}

function get_context2d_184728(c_184730) {
	var result_184731 = null;

		result_184731=c_184730.getContext('2d');

	return result_184731;

}

function is_fat_pointer_55001(ti_55003) {
	var result_55004 = false;

	BeforeRet: do {
		result_55004 = !((ConstSet1[ti_55003.base.kind] != undefined));
		break BeforeRet;
	} while (false);

	return result_55004;

}

function nimCopyAux(dest_55032, src_55033, n_55035) {
		switch (n_55035.kind) {
		case 0:
			break;
		case 1:
			      dest_55032[n_55035.offset] = nimCopy(dest_55032[n_55035.offset], src_55033[n_55035.offset], n_55035.typ);
    
			break;
		case 2:
			    for (var i = 0; i < n_55035.sons.length; i++) {
      nimCopyAux(dest_55032, src_55033, n_55035.sons[i]);
    }
    
			break;
		case 3:
			      dest_55032[n_55035.offset] = nimCopy(dest_55032[n_55035.offset], src_55033[n_55035.offset], n_55035.typ);
      for (var i = 0; i < n_55035.sons.length; ++i) {
        nimCopyAux(dest_55032, src_55033, n_55035.sons[i][1]);
      }
    
			break;
		}

	
}

function new_terminal_238878(canvas_238880, columns_238881, rows_238882) {
	var result_238883 = null;

		result_238883 = new_238885();
		result_238883.canvas = canvas_238880;
		result_238883.ctx = get_context2d_184728(canvas_238880);
		result_238883.columns = columns_238881;
		result_238883.rows = rows_238882;
		result_238883.x = 1;
		result_238883.y = 1;
		result_238883.cell_width = 10;
		result_238883.cell_height = 14;
		result_238883.bg_colour = nimCopy(null, makeNimstrLit("black"), NTI36040);
		result_238883.fg_colour = nimCopy(null, makeNimstrLit("white"), NTI36040);
		result_238883.font = nimCopy(null, makeNimstrLit("14px Monospace"), NTI36040);

	return result_238883;

}

function fill_styleHEX3D_184128(ctx_184130, color_184131) {
		ctx_184130.fillStyle=color_184131;

	
}

function canvas_184745(ctx_184747) {
	var result_184748 = null;

		result_184748=ctx_184747.canvas;

	return result_184748;

}

function clear_236107(term_236109) {
		term_236109.ctx.save();
		fill_styleHEX3D_184128(term_236109.ctx, toJSStr(term_236109.bg_colour));
		term_236109.ctx.fillRect(0.0, 0.0, canvas_184745(term_236109.ctx).width, canvas_184745(term_236109.ctx).height);
		term_236109.ctx.restore();

	
}

function new_seq_240024(len_240027) {
	var result_240029 = null;

		result_240029 = new Array(len_240027); for (var i=0;i<len_240027;++i) {result_240029[i]=null;}
	return result_240029;

}

function HEX2A_95032(x_95034, order_95035) {
	var result_95036 = 0;

		var y_95041 = (order_95035 - 1);
		result_95036 = ((x_95034 ^ y_95041) - y_95041);

	return result_95036;

}

function merge_193014(a_193019, b_193022, lo_193023, m_193024, hi_193025, cmp_193029, order_193030) {
	BeforeRet: do {
		if ((HEX2A_95032(cmp_193029(a_193019[m_193024], a_193019[(m_193024 + 1)]), order_193030) <= 0)) {
		break BeforeRet;
		}
		
		var j_193031 = lo_193023;
		var bb_193402 = 0;
		L1: do {
				L2: while (true) {
				if (!(j_193031 <= m_193024)) break L2;
					nimCopy(b_193022[bb_193402], a_193019[j_193031], NTI189031);
					bb_193402 += 1;
					j_193031 += 1;
				}
		} while(false);
		var i_193614 = 0;
		var k_193615 = lo_193023;
		L3: do {
				L4: while (true) {
				if (!((k_193615 < j_193031) && (j_193031 <= hi_193025))) break L4;
					if ((HEX2A_95032(cmp_193029(b_193022[i_193614], a_193019[j_193031]), order_193030) <= 0)) {
					nimCopy(a_193019[k_193615], b_193022[i_193614], NTI189031);
					i_193614 += 1;
					}
					else {
						nimCopy(a_193019[k_193615], a_193019[j_193031], NTI189031);
						j_193031 += 1;
					}
					
					k_193615 += 1;
				}
		} while(false);
		L5: do {
				L6: while (true) {
				if (!(k_193615 < j_193031)) break L6;
					nimCopy(a_193019[k_193615], b_193022[i_193614], NTI189031);
					k_193615 += 1;
					i_193614 += 1;
				}
		} while(false);
	} while (false);

	
}

function sort_192983(a_192988, cmp_192992, order_192993) {
		var n_192998 = (a_192988 != null ? a_192988.length : 0);
		var b_193000 = null;
		b_193000 = new Array(Math.trunc(n_192998 / 2)); for (var i=0;i<Math.trunc(n_192998 / 2);++i) {b_193000[i]={Field0: 0, Field1: 0};}		var s_193009 = 1;
		L1: do {
				L2: while (true) {
				if (!(s_193009 < n_192998)) break L2;
					var m_193010 = ((n_192998 - 1) - s_193009);
					L3: do {
							L4: while (true) {
							if (!(0 <= m_193010)) break L4;
								merge_193014(a_192988, b_193000, nimMax(((m_193010 - s_193009) + 1), 0), m_193010, (m_193010 + s_193009), cmp_192992, order_192993);
								m_193010 -= (s_193009 * 2);
							}
					} while(false);
					s_193009 = (s_193009 * 2);
				}
		} while(false);

	
}

function cmp_191111(x_191114, y_191115) {
	var result_191116 = 0;

	BeforeRet: do {
		if ((x_191114 == y_191115)) {
		result_191116 = 0;
		break BeforeRet;
		}
		
		if ((x_191114 < y_191115)) {
		result_191116 = -1;
		break BeforeRet;
		}
		
		result_191116 = 1;
		break BeforeRet;
	} while (false);

	return result_191116;

}

function add_50438(x_50441, x_50441_Idx, y_50442) {
		      if (x_50441[x_50441_Idx] === null) { x_50441[x_50441_Idx] = []; }
      var off = x_50441[x_50441_Idx].length;
      x_50441[x_50441_Idx].length += y_50442.length;
      for (var i = 0; i < y_50442.length; ++i) {
        x_50441[x_50441_Idx][off+i] = y_50442.charCodeAt(i);
      }
    

	
}

function unhandledException(e_53499) {
		var buf_53500 = [[]];
		if (!(((e_53499.message != null ? e_53499.message.length : 0) == 0))) {
		if (buf_53500[0] != null) { buf_53500[0] = (buf_53500[0]).concat(makeNimstrLit("Error: unhandled exception: ")); } else { buf_53500[0] = makeNimstrLit("Error: unhandled exception: "); };
		if (buf_53500[0] != null) { buf_53500[0] = (buf_53500[0]).concat(e_53499.message); } else { buf_53500[0] = e_53499.message.slice(); };
		}
		else {
		if (buf_53500[0] != null) { buf_53500[0] = (buf_53500[0]).concat(makeNimstrLit("Error: unhandled exception")); } else { buf_53500[0] = makeNimstrLit("Error: unhandled exception"); };
		}
		
		if (buf_53500[0] != null) { buf_53500[0] = (buf_53500[0]).concat(makeNimstrLit(" [")); } else { buf_53500[0] = makeNimstrLit(" ["); };
		add_50438(buf_53500, 0, e_53499.name);
		if (buf_53500[0] != null) { buf_53500[0] = (buf_53500[0]).concat(makeNimstrLit("]\x0A")); } else { buf_53500[0] = makeNimstrLit("]\x0A"); };
		var cbuf_53601 = toJSStr(buf_53500[0]);
		framePtr = null;
		  if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_53601);
  }
  else {
    throw cbuf_53601;
  }
  

	
}

function delete_194468(x_194473, x_194473_Idx, i_194474) {
		x_194473[x_194473_Idx].splice(i_194474, 1);

	
}

function new_seq_190053(len_190056) {
	var result_190058 = null;

		result_190058 = new Array(len_190056); for (var i=0;i<len_190056;++i) {result_190058[i]={Field0: 0, Field1: 0};}
	return result_190058;

}

function new_seq_190153(len_190156) {
	var result_190158 = null;

		result_190158 = new Array(len_190156); for (var i=0;i<len_190156;++i) {result_190158[i]=null;}
	return result_190158;

}

function new_seq_190103(len_190106) {
	var result_190108 = null;

		result_190108 = new Array(len_190106); for (var i=0;i<len_190106;++i) {result_190108[i]=0;}
	return result_190108;

}

function pop_190489(s_190494, s_190494_Idx) {
	var result_190495 = {Field0: 0, Field1: 0};

		var l_190501 = ((s_190494[s_190494_Idx] != null ? s_190494[s_190494_Idx].length : 0) - 1);
		nimCopy(result_190495, s_190494[s_190494_Idx][l_190501], NTI189031);
		if (s_190494[s_190494_Idx] === null) s_190494[s_190494_Idx] = [];
               if (s_190494[s_190494_Idx].length < l_190501) { for (var i=s_190494[s_190494_Idx].length;i<l_190501;++i) s_190494[s_190494_Idx].push({Field0: 0, Field1: 0}); }
               else { s_190494[s_190494_Idx].length = l_190501; };

	return result_190495;

}

function manhattan_distances_190044(map_190047, map_190047_Idx, p_190048) {
												var Tmp10;

		function queue_points_190311(m_190314, m_190314_Idx, p_190315) {
										var Tmp5;
										var Tmp6;
										var Tmp7;
										var Tmp8;
											var Tmp9;

				L1: do {
					var point_190375 = {Field0: 0, Field1: 0};
					var colontmp__241012 = [{Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}];
					nimCopy(colontmp__241012, [nimCopy(null, {Field0: p_190315.Field0, Field1: (p_190315.Field1 + 1)}, NTI190317), nimCopy(null, {Field0: (p_190315.Field0 - 1), Field1: p_190315.Field1}, NTI190317), nimCopy(null, {Field0: (p_190315.Field0 + 1), Field1: p_190315.Field1}, NTI190317), nimCopy(null, {Field0: p_190315.Field0, Field1: (p_190315.Field1 - 1)}, NTI190317)], NTI190316);
					var i_241013 = 0;
					if ((i_241013 <= 3)) {
					L2: do {
							L3: while (true) {
							if (!true) break L3;
								nimCopy(point_190375, colontmp__241012[i_241013], NTI190317);
								L4: do {
										if ((point_190375.Field0 < 0)) Tmp7 = true; else {											Tmp7 = ((m_190314[m_190314_Idx] != null ? (m_190314[m_190314_Idx].length-1) : -1) < point_190375.Field0);										}										if (Tmp7) Tmp6 = true; else {											Tmp6 = (p_190315.Field1 < 0);										}										if (Tmp6) Tmp5 = true; else {											Tmp5 = ((m_190314[m_190314_Idx][0] != null ? (m_190314[m_190314_Idx][0].length-1) : -1) < p_190315.Field1);										}									if (Tmp5) {
									break L4;
									}
									
										if (!(m_190314[m_190314_Idx][point_190375.Field1][point_190375.Field0].kind == 1)) Tmp8 = false; else {											var Tmp9 = m_190314[m_190314_Idx][point_190375.Field1][point_190375.Field0];
											if (ConstSet11[Tmp9.kind]===undefined) { raiseFieldError(makeNimstrLit("npc")); }
											Tmp8 = (Tmp9.npc == null);										}									if (Tmp8) {
									var Tmp10 = nimCopy(null, point_190375, NTI189031);
									if (queue_190092[0] != null) { queue_190092[0].push(Tmp10); } else { queue_190092[0] = [Tmp10]; };
									}
									
								} while(false);
								if ((3 <= i_241013)) {
								break L2;
								}
								
								i_241013 += 1;
							}
					} while(false);
					}
					
				} while(false);

			
		}

					function min_distance_190422(m_190425, m_190425_Idx, d_190426, p_190427) {
													var Tmp5;
													var Tmp6;
													var Tmp7;
													var Tmp8;

						var result_190428 = 0;

							result_190428 = -1;
							L1: do {
								var point_190451 = {Field0: 0, Field1: 0};
								var colontmp__241020 = [{Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}];
								nimCopy(colontmp__241020, [nimCopy(null, {Field0: p_190427.Field0, Field1: (p_190427.Field1 + 1)}, NTI190431), nimCopy(null, {Field0: (p_190427.Field0 - 1), Field1: p_190427.Field1}, NTI190431), nimCopy(null, {Field0: (p_190427.Field0 + 1), Field1: p_190427.Field1}, NTI190431), nimCopy(null, {Field0: p_190427.Field0, Field1: (p_190427.Field1 - 1)}, NTI190431)], NTI190430);
								var i_241021 = 0;
								if ((i_241021 <= 3)) {
								L2: do {
										L3: while (true) {
										if (!true) break L3;
											nimCopy(point_190451, colontmp__241020[i_241021], NTI190317);
											L4: do {
													if ((point_190451.Field0 < 0)) Tmp7 = true; else {														Tmp7 = ((m_190425[m_190425_Idx] != null ? (m_190425[m_190425_Idx].length-1) : -1) < point_190451.Field0);													}													if (Tmp7) Tmp6 = true; else {														Tmp6 = (p_190427.Field1 < 0);													}													if (Tmp6) Tmp5 = true; else {														Tmp5 = ((m_190425[m_190425_Idx][0] != null ? (m_190425[m_190425_Idx][0].length-1) : -1) < p_190427.Field1);													}												if (Tmp5) {
												break L4;
												}
												
													if (!(0 <= d_190426[point_190451.Field1][point_190451.Field0])) Tmp8 = false; else {														Tmp8 = ((result_190428 == -1) || (d_190426[point_190451.Field1][point_190451.Field0] < result_190428));													}												if (Tmp8) {
												result_190428 = d_190426[point_190451.Field1][point_190451.Field0];
												}
												
											} while(false);
											if ((3 <= i_241021)) {
											break L2;
											}
											
											i_241021 += 1;
										}
								} while(false);
								}
								
							} while(false);

						return result_190428;

					}
					var Tmp13;

	var result_190049 = null;

		var queue_190092 = [new_seq_190053(0)];
		var result_190098 = new_seq_190153((map_190047[map_190047_Idx] != null ? map_190047[map_190047_Idx].length : 0));
		L1: do {
			var i_190099 = 0;
			var colontmp__240995 = 0;
			colontmp__240995 = (map_190047[map_190047_Idx] != null ? map_190047[map_190047_Idx].length : 0);
			var i_240996 = 0;
			L2: do {
					L3: while (true) {
					if (!(i_240996 < colontmp__240995)) break L3;
						i_190099 = i_240996;
						result_190098[i_190099] = nimCopy(null, new_seq_190103((map_190047[map_190047_Idx][0] != null ? map_190047[map_190047_Idx][0].length : 0)), NTI190107);
						i_240996 += 1;
					}
			} while(false);
		} while(false);
		result_190049 = nimCopy(null, result_190098, NTI190157);
		L4: do {
			var y_190249 = 0;
			var row_190250 = null;
			var colontmp__241006 = null;
			colontmp__241006 = map_190047[map_190047_Idx];
			var i_241008 = 0;
			L5: do {
					L6: while (true) {
					if (!(i_241008 < (colontmp__241006 != null ? colontmp__241006.length : 0))) break L6;
						y_190249 = i_241008;
						row_190250 = colontmp__241006[i_241008];
						L7: do {
							var x_190287 = 0;
							var tile_190288 = null;
							var i_241004 = 0;
							L8: do {
									L9: while (true) {
									if (!(i_241004 < (row_190250 != null ? row_190250.length : 0))) break L9;
										x_190287 = i_241004;
										tile_190288 = row_190250[i_241004];
										if ((tile_190288.kind == 0)) {
										result_190049[y_190249][x_190287] = -1;
										}
										else {
												var Tmp10 = tile_190288;
												if (ConstSet10[Tmp10.kind]===undefined) { raiseFieldError(makeNimstrLit("npc")); }
											if (!((Tmp10.npc == null))) {
											result_190049[y_190249][x_190287] = -1;
											}
											else {
												result_190049[y_190249][x_190287] = 2147483647;
											}
											
										}
										
										i_241004 += 1;
									}
							} while(false);
						} while(false);
						i_241008 += 1;
					}
			} while(false);
		} while(false);
		result_190049[p_190048.Field1][p_190048.Field0] = 0;
		queue_points_190311(map_190047, map_190047_Idx, {Field0: p_190048.Field0, Field1: p_190048.Field1});
		L11: do {
				L12: while (true) {
				if (!(0 < (queue_190092[0] != null ? queue_190092[0].length : 0))) break L12;
					var current_point_190523 = pop_190489(queue_190092, 0);
					var min_distance_190524 = min_distance_190422(map_190047, map_190047_Idx, result_190049, current_point_190523);
					if ((0 <= min_distance_190524)) {
					if ((min_distance_190524 == 2147483647)) {
					Tmp13 = 0;
					}
					else {
					Tmp13 = 1;
					}
					
					var distance_190533 = (min_distance_190524 + Tmp13);
					if ((distance_190533 < result_190049[current_point_190523.Field1][current_point_190523.Field0])) {
					result_190049[current_point_190523.Field1][current_point_190523.Field0] = distance_190533;
					queue_points_190311(map_190047, map_190047_Idx, current_point_190523);
					}
					
					}
					
				}
		} while(false);

	return result_190049;

}

function merge_191188(a_191193, b_191196, lo_191197, m_191198, hi_191199, cmp_191203, order_191204) {
	BeforeRet: do {
		if ((HEX2A_95032(cmp_191203(a_191193[m_191198], a_191193[(m_191198 + 1)]), order_191204) <= 0)) {
		break BeforeRet;
		}
		
		var j_191205 = lo_191197;
		var bb_191602 = 0;
		L1: do {
				L2: while (true) {
				if (!(j_191205 <= m_191198)) break L2;
					nimCopy(b_191196[bb_191602], a_191193[j_191205], NTI190827);
					bb_191602 += 1;
					j_191205 += 1;
				}
		} while(false);
		var i_191814 = 0;
		var k_191815 = lo_191197;
		L3: do {
				L4: while (true) {
				if (!((k_191815 < j_191205) && (j_191205 <= hi_191199))) break L4;
					if ((HEX2A_95032(cmp_191203(b_191196[i_191814], a_191193[j_191205]), order_191204) <= 0)) {
					nimCopy(a_191193[k_191815], b_191196[i_191814], NTI190827);
					i_191814 += 1;
					}
					else {
						nimCopy(a_191193[k_191815], a_191193[j_191205], NTI190827);
						j_191205 += 1;
					}
					
					k_191815 += 1;
				}
		} while(false);
		L5: do {
				L6: while (true) {
				if (!(k_191815 < j_191205)) break L6;
					nimCopy(a_191193[k_191815], b_191196[i_191814], NTI190827);
					k_191815 += 1;
					i_191814 += 1;
				}
		} while(false);
	} while (false);

	
}

function sort_191157(a_191162, cmp_191166, order_191167) {
		var n_191172 = (a_191162 != null ? a_191162.length : 0);
		var b_191174 = null;
		b_191174 = new Array(Math.trunc(n_191172 / 2)); for (var i=0;i<Math.trunc(n_191172 / 2);++i) {b_191174[i]={Field0: 0, Field1: {Field0: 0, Field1: 0}};}		var s_191183 = 1;
		L1: do {
				L2: while (true) {
				if (!(s_191183 < n_191172)) break L2;
					var m_191184 = ((n_191172 - 1) - s_191183);
					L3: do {
							L4: while (true) {
							if (!(0 <= m_191184)) break L4;
								merge_191188(a_191162, b_191174, nimMax(((m_191184 - s_191183) + 1), 0), m_191184, (m_191184 + s_191183), cmp_191166, order_191167);
								m_191184 -= (s_191183 * 2);
							}
					} while(false);
					s_191183 = (s_191183 * 2);
				}
		} while(false);

	
}

function move_npc_190767(area_190770, kind_190771, src_190772) {
			var Tmp1;
			var Tmp2;
								var Tmp7;
								var Tmp8;
								var Tmp9;
								var Tmp10;
									var Tmp11;
								var Tmp16;
								var Tmp17;
									var Tmp18;
													var Tmp23;
													var Tmp24;
													var Tmp25;
													var Tmp26;
														var Tmp27;

		function HEX3Aanonymous_191094(a_191105, b_191106) {
			var result_191110 = 0;

				result_191110 = cmp_191111(a_191105.Field0, b_191106.Field0);
				if ((result_191110 == 0)) {
				result_191110 = cmp_191111(a_191105.Field1.Field1, b_191106.Field1.Field1);
				if ((result_191110 == 0)) {
				result_191110 = cmp_191111(a_191105.Field1.Field0, b_191106.Field1.Field0);
				}
				
				}
				

			return result_191110;

		}
								var Tmp32;
								var Tmp33;
								var Tmp34;
								var Tmp35;
									var Tmp36;
		var Tmp37;
		var Tmp38;
		var Tmp39;
		var Tmp40;
		var Tmp41;

	var result_190773 = {Field0: 0, Field1: 0};

	BeforeRet: do {
			var Tmp1 = area_190770.map[src_190772.Field1][src_190772.Field0];
			if (ConstSet8[Tmp1.kind]===undefined) { raiseFieldError(makeNimstrLit("npc")); }
			var Tmp2 = Tmp1.npc;
			if (ConstSet7[Tmp2.kind]===undefined) { raiseFieldError(makeNimstrLit("moved")); }
		if (Tmp2.moved) {
		nimCopy(result_190773, src_190772, NTI189031);
		break BeforeRet;
		}
		
		var can_move_190776 = false;
		L3: do {
			var point_190798 = {Field0: 0, Field1: 0};
			var colontmp__240968 = [{Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}];
			nimCopy(colontmp__240968, [nimCopy(null, {Field0: src_190772.Field0, Field1: (src_190772.Field1 + 1)}, NTI190778), nimCopy(null, {Field0: (src_190772.Field0 - 1), Field1: src_190772.Field1}, NTI190778), nimCopy(null, {Field0: (src_190772.Field0 + 1), Field1: src_190772.Field1}, NTI190778), nimCopy(null, {Field0: src_190772.Field0, Field1: (src_190772.Field1 - 1)}, NTI190778)], NTI190777);
			var i_240969 = 0;
			if ((i_240969 <= 3)) {
			L4: do {
					L5: while (true) {
					if (!true) break L5;
						nimCopy(point_190798, colontmp__240968[i_240969], NTI190317);
						L6: do {
								if ((point_190798.Field0 < 0)) Tmp9 = true; else {									Tmp9 = ((area_190770.map != null ? (area_190770.map.length-1) : -1) < point_190798.Field0);								}								if (Tmp9) Tmp8 = true; else {									Tmp8 = (point_190798.Field1 < 0);								}								if (Tmp8) Tmp7 = true; else {									Tmp7 = ((area_190770.map[0] != null ? (area_190770.map[0].length-1) : -1) < point_190798.Field1);								}							if (Tmp7) {
							break L6;
							}
							
								if ((area_190770.map[point_190798.Field1][point_190798.Field0].kind == 0)) Tmp10 = true; else {									var Tmp11 = area_190770.map[point_190798.Field1][point_190798.Field0];
									if (ConstSet9[Tmp11.kind]===undefined) { raiseFieldError(makeNimstrLit("npc")); }
									Tmp10 = !((Tmp11.npc == null));								}							if (Tmp10) {
							break L6;
							}
							
							can_move_190776 = true;
							break L3;
						} while(false);
						if ((3 <= i_240969)) {
						break L4;
						}
						
						i_240969 += 1;
					}
			} while(false);
			}
			
		} while(false);
		if (!(can_move_190776)) {
		nimCopy(result_190773, src_190772, NTI189031);
		break BeforeRet;
		}
		
		var dists_190826 = manhattan_distances_190044(area_190770, "map", src_190772);
		var targets_190855 = [];
		L12: do {
			var npc_loc_191014 = {Field0: 0, Field1: 0};
			var colontmp__240978 = null;
			colontmp__240978 = area_190770.npc_locations;
			var i_240980 = 0;
			var l_240981 = (colontmp__240978 != null ? colontmp__240978.length : 0);
			L13: do {
					L14: while (true) {
					if (!(i_240980 < l_240981)) break L14;
						nimCopy(npc_loc_191014, colontmp__240978[i_240980], NTI189031);
						L15: do {
								var Tmp17 = area_190770.map[npc_loc_191014.Field1][npc_loc_191014.Field0];
								if (ConstSet12[Tmp17.kind]===undefined) { raiseFieldError(makeNimstrLit("npc")); }
								if ((Tmp17.npc == null)) Tmp16 = true; else {									var Tmp18 = area_190770.map[npc_loc_191014.Field1][npc_loc_191014.Field0];
									if (ConstSet13[Tmp18.kind]===undefined) { raiseFieldError(makeNimstrLit("npc")); }
									Tmp16 = (Tmp18.npc.kind == kind_190771);								}							if (Tmp16) {
							break L15;
							}
							
							L19: do {
								var point_191051 = {Field0: 0, Field1: 0};
								var colontmp__240975 = [{Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}];
								nimCopy(colontmp__240975, [nimCopy(null, {Field0: npc_loc_191014.Field0, Field1: (npc_loc_191014.Field1 + 1)}, NTI191031), nimCopy(null, {Field0: (npc_loc_191014.Field0 - 1), Field1: npc_loc_191014.Field1}, NTI191031), nimCopy(null, {Field0: (npc_loc_191014.Field0 + 1), Field1: npc_loc_191014.Field1}, NTI191031), nimCopy(null, {Field0: npc_loc_191014.Field0, Field1: (npc_loc_191014.Field1 - 1)}, NTI191031)], NTI191030);
								var i_240976 = 0;
								if ((i_240976 <= 3)) {
								L20: do {
										L21: while (true) {
										if (!true) break L21;
											nimCopy(point_191051, colontmp__240975[i_240976], NTI190317);
											L22: do {
													if ((point_191051.Field0 < 0)) Tmp25 = true; else {														Tmp25 = ((area_190770.map != null ? (area_190770.map.length-1) : -1) < point_191051.Field0);													}													if (Tmp25) Tmp24 = true; else {														Tmp24 = (point_191051.Field1 < 0);													}													if (Tmp24) Tmp23 = true; else {														Tmp23 = ((area_190770.map[0] != null ? (area_190770.map[0].length-1) : -1) < point_191051.Field1);													}												if (Tmp23) {
												break L22;
												}
												
													if ((area_190770.map[point_191051.Field1][point_191051.Field0].kind == 0)) Tmp26 = true; else {														var Tmp27 = area_190770.map[point_191051.Field1][point_191051.Field0];
														if (ConstSet14[Tmp27.kind]===undefined) { raiseFieldError(makeNimstrLit("npc")); }
														Tmp26 = !((Tmp27.npc == null));													}												if (Tmp26) {
												break L22;
												}
												
												var point_191078 = nimCopy(null, point_191051, NTI190317);
												if (targets_190855 != null) { targets_190855.push({Field0: dists_190826[point_191078.Field1][point_191078.Field0], Field1: nimCopy(null, point_191078, NTI189031)}); } else { targets_190855 = [{Field0: dists_190826[point_191078.Field1][point_191078.Field0], Field1: nimCopy(null, point_191078, NTI189031)}]; };
											} while(false);
											if ((3 <= i_240976)) {
											break L20;
											}
											
											i_240976 += 1;
										}
								} while(false);
								}
								
							} while(false);
						} while(false);
						i_240980 += 1;
					}
			} while(false);
		} while(false);
		if (((targets_190855 != null ? targets_190855.length : 0) == 0)) {
		nimCopy(result_190773, src_190772, NTI189031);
		break BeforeRet;
		}
		
		sort_191157(targets_190855, HEX3Aanonymous_191094, 1);
		var target_pos_192645 = nimCopy(null, targets_190855[0].Field1, NTI189031);
		var target_dists_192647 = manhattan_distances_190044(area_190770, "map", target_pos_192645);
		var dist_192654 = 2147483647;
		var dst_192655 = {Field0: 0, Field1: 0};
		L28: do {
			var point_192677 = {Field0: 0, Field1: 0};
			var colontmp__240989 = [{Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}];
			nimCopy(colontmp__240989, [nimCopy(null, {Field0: src_190772.Field0, Field1: (src_190772.Field1 + 1)}, NTI192657), nimCopy(null, {Field0: (src_190772.Field0 - 1), Field1: src_190772.Field1}, NTI192657), nimCopy(null, {Field0: (src_190772.Field0 + 1), Field1: src_190772.Field1}, NTI192657), nimCopy(null, {Field0: src_190772.Field0, Field1: (src_190772.Field1 - 1)}, NTI192657)], NTI192656);
			var i_240990 = 0;
			if ((i_240990 <= 3)) {
			L29: do {
					L30: while (true) {
					if (!true) break L30;
						nimCopy(point_192677, colontmp__240989[i_240990], NTI190317);
						L31: do {
								if ((point_192677.Field0 < 0)) Tmp34 = true; else {									Tmp34 = ((area_190770.map != null ? (area_190770.map.length-1) : -1) < point_192677.Field0);								}								if (Tmp34) Tmp33 = true; else {									Tmp33 = (point_192677.Field1 < 0);								}								if (Tmp33) Tmp32 = true; else {									Tmp32 = ((area_190770.map[0] != null ? (area_190770.map[0].length-1) : -1) < point_192677.Field1);								}							if (Tmp32) {
							break L31;
							}
							
								if ((area_190770.map[point_192677.Field1][point_192677.Field0].kind == 0)) Tmp35 = true; else {									var Tmp36 = area_190770.map[point_192677.Field1][point_192677.Field0];
									if (ConstSet15[Tmp36.kind]===undefined) { raiseFieldError(makeNimstrLit("npc")); }
									Tmp35 = !((Tmp36.npc == null));								}							if (Tmp35) {
							break L31;
							}
							
							if (((dist_192654 == 2147483647) || (target_dists_192647[point_192677.Field1][point_192677.Field0] <= dist_192654))) {
							dist_192654 = target_dists_192647[point_192677.Field1][point_192677.Field0];
							nimCopy(dst_192655, point_192677, NTI189031);
							}
							
						} while(false);
						if ((3 <= i_240990)) {
						break L29;
						}
						
						i_240990 += 1;
					}
			} while(false);
			}
			
		} while(false);
		if ((dist_192654 == 2147483647)) {
		nimCopy(result_190773, src_190772, NTI189031);
		break BeforeRet;
		}
		
		var Tmp37 = area_190770.map[dst_192655.Field1][dst_192655.Field0];
		if (ConstSet16[Tmp37.kind]===undefined) { raiseFieldError(makeNimstrLit("npc")); }
		var Tmp38 = area_190770.map[src_190772.Field1][src_190772.Field0];
		if (ConstSet17[Tmp38.kind]===undefined) { raiseFieldError(makeNimstrLit("npc")); }
		Tmp37.npc = Tmp38.npc;
		var Tmp39 = area_190770.map[src_190772.Field1][src_190772.Field0];
		if (ConstSet18[Tmp39.kind]===undefined) { raiseFieldError(makeNimstrLit("npc")); }
		Tmp39.npc = null;
		var Tmp40 = area_190770.map[dst_192655.Field1][dst_192655.Field0];
		if (ConstSet20[Tmp40.kind]===undefined) { raiseFieldError(makeNimstrLit("npc")); }
		var Tmp41 = Tmp40.npc;
		if (ConstSet19[Tmp41.kind]===undefined) { raiseFieldError(makeNimstrLit("moved")); }
		Tmp41.moved = true;
		nimCopy(result_190773, {Field0: dst_192655.Field0, Field1: dst_192655.Field1}, NTI189031);
		break BeforeRet;
	} while (false);

	return result_190773;

}

function attack_192740(area_192743, p_192744) {
		var Tmp1;
								var Tmp6;
								var Tmp7;
								var Tmp8;
							var Tmp9;
								var Tmp10;
								var Tmp11;
								var Tmp12;
		var Tmp13;
		var Tmp14;
			var Tmp15;
		var Tmp16;
		var Tmp17;

	var result_192745 = null;

	BeforeRet: do {
		var Tmp1 = area_192743.map[p_192744.Field1][p_192744.Field0];
		if (ConstSet21[Tmp1.kind]===undefined) { raiseFieldError(makeNimstrLit("npc")); }
		var attacker_192747 = Tmp1.npc;
		var kind_192748 = attacker_192747.kind;
		var target_192749 = null;
		var target_pos_192750 = {Field0: 0, Field1: 0};
		L2: do {
			var point_192772 = {Field0: 0, Field1: 0};
			var colontmp__241030 = [{Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}];
			nimCopy(colontmp__241030, [nimCopy(null, {Field0: p_192744.Field0, Field1: (p_192744.Field1 + 1)}, NTI192752), nimCopy(null, {Field0: (p_192744.Field0 - 1), Field1: p_192744.Field1}, NTI192752), nimCopy(null, {Field0: (p_192744.Field0 + 1), Field1: p_192744.Field1}, NTI192752), nimCopy(null, {Field0: p_192744.Field0, Field1: (p_192744.Field1 - 1)}, NTI192752)], NTI192751);
			var i_241031 = 0;
			if ((i_241031 <= 3)) {
			L3: do {
					L4: while (true) {
					if (!true) break L4;
						nimCopy(point_192772, colontmp__241030[i_241031], NTI190317);
						L5: do {
								if ((point_192772.Field0 < 0)) Tmp8 = true; else {									Tmp8 = ((area_192743.map != null ? (area_192743.map.length-1) : -1) < point_192772.Field0);								}								if (Tmp8) Tmp7 = true; else {									Tmp7 = (point_192772.Field1 < 0);								}								if (Tmp7) Tmp6 = true; else {									Tmp6 = ((area_192743.map[0] != null ? (area_192743.map[0].length-1) : -1) < point_192772.Field1);								}							if (Tmp6) {
							break L5;
							}
							
							if ((area_192743.map[point_192772.Field1][point_192772.Field0].kind == 0)) {
							break L5;
							}
							
							var Tmp9 = area_192743.map[point_192772.Field1][point_192772.Field0];
							if (ConstSet22[Tmp9.kind]===undefined) { raiseFieldError(makeNimstrLit("npc")); }
							var npc_192791 = Tmp9.npc;
								if (!!((npc_192791 == null))) Tmp10 = false; else {									Tmp10 = !((npc_192791.kind == kind_192748));								}							if (Tmp10) {
							if ((target_192749 == null)) {
							target_192749 = npc_192791;
							nimCopy(target_pos_192750, point_192772, NTI189031);
							}
							else {
								var Tmp11 = npc_192791;
								if (ConstSet23[Tmp11.kind]===undefined) { raiseFieldError(makeNimstrLit("hp")); }
								var Tmp12 = target_192749;
								if (ConstSet24[Tmp12.kind]===undefined) { raiseFieldError(makeNimstrLit("hp")); }
							if ((Tmp11.hp <= Tmp12.hp)) {
							target_192749 = npc_192791;
							nimCopy(target_pos_192750, point_192772, NTI189031);
							}
							}
							}
							
						} while(false);
						if ((3 <= i_241031)) {
						break L3;
						}
						
						i_241031 += 1;
					}
			} while(false);
			}
			
		} while(false);
		if ((target_192749 == null)) {
		break BeforeRet;
		}
		
		var Tmp13 = target_192749;
		if (ConstSet25[Tmp13.kind]===undefined) { raiseFieldError(makeNimstrLit("hp")); }
		var Tmp14 = attacker_192747;
		if (ConstSet26[Tmp14.kind]===undefined) { raiseFieldError(makeNimstrLit("attack")); }
		Tmp13.hp -= Tmp14.attack;
			var Tmp15 = target_192749;
			if (ConstSet27[Tmp15.kind]===undefined) { raiseFieldError(makeNimstrLit("hp")); }
		if ((Tmp15.hp <= 0)) {
		var Tmp16 = area_192743.map[target_pos_192750.Field1][target_pos_192750.Field0];
		if (ConstSet28[Tmp16.kind]===undefined) { raiseFieldError(makeNimstrLit("npc")); }
		result_192745 = Tmp16.npc;
		var Tmp17 = area_192743.map[target_pos_192750.Field1][target_pos_192750.Field0];
		if (ConstSet29[Tmp17.kind]===undefined) { raiseFieldError(makeNimstrLit("npc")); }
		Tmp17.npc = null;
		if ((result_192745.kind == 1)) {
		area_192743.elves -= 1;
		}
		else {
		area_192743.goblins -= 1;
		}
		
		}
		
	} while (false);

	return result_192745;

}

function round_192932(area_192935, finish_on_dead_elf_192936) {

		function HEX3Aanonymous_192940(a_192951, b_192952) {
			var result_192956 = 0;

				result_192956 = cmp_191111(a_192951.Field1, b_192952.Field1);
				if ((result_192956 == 0)) {
				result_192956 = cmp_191111(a_192951.Field0, b_192952.Field0);
				}
				

			return result_192956;

		}
							var Tmp4;
							var Tmp5;
							var Tmp6;
							var Tmp11;

								function has_enemy_195043(map_195046, map_195046_Idx, p_195047) {
																var Tmp5;
																var Tmp6;
																var Tmp7;
															var Tmp8;
																var Tmp9;

									var result_195048 = false;

									BeforeRet: do {
										L1: do {
											var point_195070 = {Field0: 0, Field1: 0};
											var colontmp__240939 = [{Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}];
											nimCopy(colontmp__240939, [nimCopy(null, {Field0: p_195047.Field0, Field1: (p_195047.Field1 + 1)}, NTI195050), nimCopy(null, {Field0: (p_195047.Field0 - 1), Field1: p_195047.Field1}, NTI195050), nimCopy(null, {Field0: (p_195047.Field0 + 1), Field1: p_195047.Field1}, NTI195050), nimCopy(null, {Field0: p_195047.Field0, Field1: (p_195047.Field1 - 1)}, NTI195050)], NTI195049);
											var i_240944 = 0;
											if ((i_240944 <= 3)) {
											L2: do {
													L3: while (true) {
													if (!true) break L3;
														nimCopy(point_195070, colontmp__240939[i_240944], NTI190317);
														L4: do {
																if ((point_195070.Field0 < 0)) Tmp7 = true; else {																	Tmp7 = ((map_195046[map_195046_Idx] != null ? (map_195046[map_195046_Idx].length-1) : -1) < point_195070.Field0);																}																if (Tmp7) Tmp6 = true; else {																	Tmp6 = (p_195047.Field1 < 0);																}																if (Tmp6) Tmp5 = true; else {																	Tmp5 = ((map_195046[map_195046_Idx][0] != null ? (map_195046[map_195046_Idx][0].length-1) : -1) < p_195047.Field1);																}															if (Tmp5) {
															break L4;
															}
															
															if ((map_195046[map_195046_Idx][point_195070.Field1][point_195070.Field0].kind == 0)) {
															break L4;
															}
															
															var Tmp8 = map_195046[map_195046_Idx][point_195070.Field1][point_195070.Field0];
															if (ConstSet6[Tmp8.kind]===undefined) { raiseFieldError(makeNimstrLit("npc")); }
															var target_npc_195089 = Tmp8.npc;
																if (!!((target_npc_195089 == null))) Tmp9 = false; else {																	Tmp9 = !((target_npc_195089.kind == npc_195034.kind));																}															if (Tmp9) {
															result_195048 = true;
															break BeforeRet;
															}
															
														} while(false);
														if ((3 <= i_240944)) {
														break L2;
														}
														
														i_240944 += 1;
													}
											} while(false);
											}
											
										} while(false);
										result_195048 = false;
										break BeforeRet;
									} while (false);

									return result_195048;

								}
								var Tmp12;
								var Tmp13;
								var Tmp14;

	var result_192937 = false;

	BeforeRet: do {
		sort_192983(area_192935.npc_locations, HEX3Aanonymous_192940, 1);
		L1: do {
			var i_194457 = 0;
			var colontmp__240925 = 0;
			colontmp__240925 = (area_192935.npc_locations != null ? (area_192935.npc_locations.length-1) : -1);
			var res_240930 = colontmp__240925;
			L2: do {
					L3: while (true) {
					if (!(0 <= res_240930)) break L3;
						i_194457 = res_240930;
						var pos_194458 = nimCopy(null, area_192935.npc_locations[i_194457], NTI189031);
							var Tmp4 = area_192935.map[pos_194458.Field1][pos_194458.Field0];
							if (ConstSet2[Tmp4.kind]===undefined) { raiseFieldError(makeNimstrLit("npc")); }
						if ((Tmp4.npc == null)) {
						delete_194468(area_192935, "npc_locations", i_194457);
						}
						else {
							var Tmp5 = area_192935.map[pos_194458.Field1][pos_194458.Field0];
							if (ConstSet4[Tmp5.kind]===undefined) { raiseFieldError(makeNimstrLit("npc")); }
							var Tmp6 = Tmp5.npc;
							if (ConstSet3[Tmp6.kind]===undefined) { raiseFieldError(makeNimstrLit("moved")); }
							Tmp6.moved = false;
						}
						
						res_240930 -= 1;
					}
			} while(false);
		} while(false);
		L7: do {
			var i_195031 = 0;
			var colontmp__240946 = 0;
			colontmp__240946 = (area_192935.npc_locations != null ? (area_192935.npc_locations.length-1) : -1);
			var res_240947 = 0;
			L8: do {
					L9: while (true) {
					if (!(res_240947 <= colontmp__240946)) break L9;
						i_195031 = res_240947;
						L10: do {
							var pos_195032 = nimCopy(null, area_192935.npc_locations[i_195031], NTI189031);
							var Tmp11 = area_192935.map[pos_195032.Field1][pos_195032.Field0];
							if (ConstSet5[Tmp11.kind]===undefined) { raiseFieldError(makeNimstrLit("npc")); }
							var npc_195034 = Tmp11.npc;
							if ((npc_195034 == null)) {
							break L10;
							}
							
							if (!(has_enemy_195043(area_192935, "map", pos_195032))) {
								if ((area_192935.elves == 0)) Tmp12 = true; else {									Tmp12 = (area_192935.goblins == 0);								}							if (Tmp12) {
							result_192937 = true;
							break BeforeRet;
							}
							
							nimCopy(area_192935.npc_locations[i_195031], move_npc_190767(area_192935, npc_195034.kind, pos_195032), NTI189031);
							}
							
							var dead_195117 = attack_192740(area_192935, area_192935.npc_locations[i_195031]);
								if (!finish_on_dead_elf_192936) Tmp14 = false; else {									Tmp14 = !((dead_195117 == null));								}								if (!Tmp14) Tmp13 = false; else {									Tmp13 = (dead_195117.kind == 1);								}							if (Tmp13) {
							result_192937 = true;
							break BeforeRet;
							}
							
						} while(false);
						res_240947 += 1;
					}
			} while(false);
		} while(false);
		result_192937 = false;
		break BeforeRet;
	} while (false);

	return result_192937;

}

function contains_236451(s_236457, value_236458) {
	var result_236459 = false;

		result_236459 = ((s_236457.a <= value_236458) && (value_236458 <= s_236457.b));

	return result_236459;

}

function HEX2EHEX2E_236419(a_236423, b_236424) {
	var result_236430 = {a: 0, b: 0};

		result_236430.a = a_236423;
		result_236430.b = b_236424;

	return result_236430;

}

function add_escaped_char_59214(s_59217, s_59217_Idx, c_59218) {
		switch (c_59218) {
		case 7:
			if (s_59217[s_59217_Idx] != null) { s_59217[s_59217_Idx] = (s_59217[s_59217_Idx]).concat(makeNimstrLit("\\a")); } else { s_59217[s_59217_Idx] = makeNimstrLit("\\a"); };
			break;
		case 8:
			if (s_59217[s_59217_Idx] != null) { s_59217[s_59217_Idx] = (s_59217[s_59217_Idx]).concat(makeNimstrLit("\\b")); } else { s_59217[s_59217_Idx] = makeNimstrLit("\\b"); };
			break;
		case 9:
			if (s_59217[s_59217_Idx] != null) { s_59217[s_59217_Idx] = (s_59217[s_59217_Idx]).concat(makeNimstrLit("\\t")); } else { s_59217[s_59217_Idx] = makeNimstrLit("\\t"); };
			break;
		case 10:
			if (s_59217[s_59217_Idx] != null) { s_59217[s_59217_Idx] = (s_59217[s_59217_Idx]).concat(makeNimstrLit("\\n")); } else { s_59217[s_59217_Idx] = makeNimstrLit("\\n"); };
			break;
		case 11:
			if (s_59217[s_59217_Idx] != null) { s_59217[s_59217_Idx] = (s_59217[s_59217_Idx]).concat(makeNimstrLit("\\v")); } else { s_59217[s_59217_Idx] = makeNimstrLit("\\v"); };
			break;
		case 12:
			if (s_59217[s_59217_Idx] != null) { s_59217[s_59217_Idx] = (s_59217[s_59217_Idx]).concat(makeNimstrLit("\\f")); } else { s_59217[s_59217_Idx] = makeNimstrLit("\\f"); };
			break;
		case 13:
			if (s_59217[s_59217_Idx] != null) { s_59217[s_59217_Idx] = (s_59217[s_59217_Idx]).concat(makeNimstrLit("\\c")); } else { s_59217[s_59217_Idx] = makeNimstrLit("\\c"); };
			break;
		case 27:
			if (s_59217[s_59217_Idx] != null) { s_59217[s_59217_Idx] = (s_59217[s_59217_Idx]).concat(makeNimstrLit("\\e")); } else { s_59217[s_59217_Idx] = makeNimstrLit("\\e"); };
			break;
		case 92:
			if (s_59217[s_59217_Idx] != null) { s_59217[s_59217_Idx] = (s_59217[s_59217_Idx]).concat(makeNimstrLit("\\\\")); } else { s_59217[s_59217_Idx] = makeNimstrLit("\\\\"); };
			break;
		case 39:
			if (s_59217[s_59217_Idx] != null) { s_59217[s_59217_Idx] = (s_59217[s_59217_Idx]).concat(makeNimstrLit("\\\'")); } else { s_59217[s_59217_Idx] = makeNimstrLit("\\\'"); };
			break;
		case 34:
			if (s_59217[s_59217_Idx] != null) { s_59217[s_59217_Idx] = (s_59217[s_59217_Idx]).concat(makeNimstrLit("\\\"")); } else { s_59217[s_59217_Idx] = makeNimstrLit("\\\""); };
			break;
		case 32:
		case 33:
		case 35:
		case 36:
		case 37:
		case 38:
		case 40:
		case 41:
		case 42:
		case 43:
		case 44:
		case 45:
		case 46:
		case 47:
		case 48:
		case 49:
		case 50:
		case 51:
		case 52:
		case 53:
		case 54:
		case 55:
		case 56:
		case 57:
		case 58:
		case 59:
		case 60:
		case 61:
		case 62:
		case 63:
		case 64:
		case 65:
		case 66:
		case 67:
		case 68:
		case 69:
		case 70:
		case 71:
		case 72:
		case 73:
		case 74:
		case 75:
		case 76:
		case 77:
		case 78:
		case 79:
		case 80:
		case 81:
		case 82:
		case 83:
		case 84:
		case 85:
		case 86:
		case 87:
		case 88:
		case 89:
		case 90:
		case 91:
		case 93:
		case 94:
		case 95:
		case 96:
		case 97:
		case 98:
		case 99:
		case 100:
		case 101:
		case 102:
		case 103:
		case 104:
		case 105:
		case 106:
		case 107:
		case 108:
		case 109:
		case 110:
		case 111:
		case 112:
		case 113:
		case 114:
		case 115:
		case 116:
		case 117:
		case 118:
		case 119:
		case 120:
		case 121:
		case 122:
		case 123:
		case 124:
		case 125:
		case 126:
			if (s_59217[s_59217_Idx] != null) { addChar(s_59217[s_59217_Idx], c_59218); } else { s_59217[s_59217_Idx] = [c_59218]; };
			break;
		default: 
			if (s_59217[s_59217_Idx] != null) { s_59217[s_59217_Idx] = (s_59217[s_59217_Idx]).concat(makeNimstrLit("\\x")); } else { s_59217[s_59217_Idx] = makeNimstrLit("\\x"); };
			var n_59234 = c_59218;
			if (s_59217[s_59217_Idx] != null) { addChar(s_59217[s_59217_Idx], makeNimstrLit("0123456789ABCDEF")[(((n_59234 & 240) >>> 0) >>> 4)]); } else { s_59217[s_59217_Idx] = [makeNimstrLit("0123456789ABCDEF")[(((n_59234 & 240) >>> 0) >>> 4)]]; };
			if (s_59217[s_59217_Idx] != null) { addChar(s_59217[s_59217_Idx], makeNimstrLit("0123456789ABCDEF")[(n_59234 & 15)]); } else { s_59217[s_59217_Idx] = [makeNimstrLit("0123456789ABCDEF")[(n_59234 & 15)]]; };
			break;
		}

	
}

function add_quoted_237001(s_237004, s_237004_Idx, x_237005) {
		if (s_237004[s_237004_Idx] != null) { s_237004[s_237004_Idx] = (s_237004[s_237004_Idx]).concat(makeNimstrLit("\"")); } else { s_237004[s_237004_Idx] = makeNimstrLit("\""); };
		L1: do {
			var c_237202 = 0;
			var i_241041 = 0;
			var l_241042 = (x_237005 != null ? x_237005.length : 0);
			L2: do {
					L3: while (true) {
					if (!(i_241041 < l_241042)) break L3;
						c_237202 = x_237005[i_241041];
						if ((c_237202 <= 127)) {
						add_escaped_char_59214(s_237004, s_237004_Idx, c_237202);
						}
						else {
						if (s_237004[s_237004_Idx] != null) { addChar(s_237004[s_237004_Idx], c_237202); } else { s_237004[s_237004_Idx] = [c_237202]; };
						}
						
						i_241041 += 1;
					}
			} while(false);
		} while(false);
		if (s_237004[s_237004_Idx] != null) { s_237004[s_237004_Idx] = (s_237004[s_237004_Idx]).concat(makeNimstrLit("\"")); } else { s_237004[s_237004_Idx] = makeNimstrLit("\""); };

	
}

function collection_to_string_236624(x_236627, prefix_236628, separator_236629, suffix_236630) {
	var result_236631 = [null];

		result_236631[0] = nimCopy(null, prefix_236628, NTI36040);
		var first_element_236632 = true;
		L1: do {
			var value_236814 = null;
			var i_241037 = 0;
			var l_241038 = (x_236627 != null ? x_236627.length : 0);
			L2: do {
					L3: while (true) {
					if (!(i_241037 < l_241038)) break L3;
						value_236814 = x_236627[i_241037];
						if (first_element_236632) {
						first_element_236632 = false;
						}
						else {
						if (result_236631[0] != null) { result_236631[0] = (result_236631[0]).concat(separator_236629); } else { result_236631[0] = separator_236629.slice(); };
						}
						
						add_quoted_237001(result_236631, 0, value_236814);
						i_241037 += 1;
					}
			} while(false);
		} while(false);
		if (result_236631[0] != null) { result_236631[0] = (result_236631[0]).concat(suffix_236630); } else { result_236631[0] = suffix_236630.slice(); };

	return result_236631[0];

}

function HEX24_236618(x_236622) {
	var result_236623 = null;

		result_236623 = nimCopy(null, collection_to_string_236624(x_236622, makeNimstrLit("@["), makeNimstrLit(", "), makeNimstrLit("]")), NTI36040);

	return result_236623;

}

function integer_out_of_range_error_87102() {
		var e_87106 = null;
		e_87106 = {m_type: NTI40252, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_87106.message = nimCopy(null, makeNimstrLit("Parsed integer outside of valid range"), NTI36040);
		e_87106.parent = null;
		raiseException(e_87106, "ValueError");

	
}

function raw_parse_int_87201(s_87203, b_87205, b_87205_Idx, start_87206) {
			var Tmp1;
					var Tmp4;
			var Tmp7;

	var result_87208 = 0;

		var sign_87210 = -1;
		var i_87211 = start_87206;
		if ((i_87211 < (s_87203 != null ? s_87203.length : 0))) {
		if ((s_87203[i_87211] == 43)) {
		i_87211 += 1;
		}
		else {
		if ((s_87203[i_87211] == 45)) {
		i_87211 += 1;
		sign_87210 = 1;
		}
		}
		}
		
			if (!(i_87211 < (s_87203 != null ? s_87203.length : 0))) Tmp1 = false; else {				Tmp1 = (ConstSet30[s_87203[i_87211]] != undefined);			}		if (Tmp1) {
		b_87205[b_87205_Idx] = 0;
		L2: do {
				L3: while (true) {
					if (!(i_87211 < (s_87203 != null ? s_87203.length : 0))) Tmp4 = false; else {						Tmp4 = (ConstSet31[s_87203[i_87211]] != undefined);					}				if (!Tmp4) break L3;
					var c_87246 = (s_87203[i_87211] - 48);
					if ((Math.trunc((-9223372036854775808 + c_87246) / 10) <= b_87205[b_87205_Idx])) {
					b_87205[b_87205_Idx] = ((b_87205[b_87205_Idx] * 10) - c_87246);
					}
					else {
					integer_out_of_range_error_87102();
					}
					
					i_87211 += 1;
					L5: do {
							L6: while (true) {
							if (!((i_87211 < (s_87203 != null ? s_87203.length : 0)) && (s_87203[i_87211] == 95))) break L6;
								i_87211 += 1;
							}
					} while(false);
				}
		} while(false);
			if (!(sign_87210 == -1)) Tmp7 = false; else {				Tmp7 = (b_87205[b_87205_Idx] == -9223372036854775808);			}		if (Tmp7) {
		integer_out_of_range_error_87102();
		}
		else {
			b_87205[b_87205_Idx] = (b_87205[b_87205_Idx] * sign_87210);
			result_87208 = (i_87211 - start_87206);
		}
		
		}
		

	return result_87208;

}

function npuParseBiggestInt(s_87403, number_87405, number_87405_Idx, start_87406) {
	var result_87408 = 0;

		var res_87409 = [0];
		result_87408 = raw_parse_int_87201(s_87403, res_87409, 0, start_87406);
		if (!((result_87408 == 0))) {
		number_87405[number_87405_Idx] = res_87409[0];
		}
		

	return result_87408;

}

function npuParseInt(s_87426, number_87428, number_87428_Idx, start_87429) {
			var Tmp1;

	var result_87431 = 0;

		var res_87432 = [0];
		result_87431 = npuParseBiggestInt(s_87426, res_87432, 0, start_87429);
			if ((res_87432[0] < -2147483648)) Tmp1 = true; else {				Tmp1 = (2147483647 < res_87432[0]);			}		if (Tmp1) {
		integer_out_of_range_error_87102();
		}
		
		if (!((result_87431 == 0))) {
		number_87428[number_87428_Idx] = res_87432[0];
		}
		

	return result_87431;

}

function nsuParseInt(s_175776) {
			var Tmp1;

	var result_175777 = [0];

		var l_175779 = npuParseInt(s_175776, result_175777, 0, 0);
			if (!((l_175779 == (s_175776 != null ? s_175776.length : 0)))) Tmp1 = true; else {				Tmp1 = (l_175779 == 0);			}		if (Tmp1) {
		var e_175782 = null;
		e_175782 = {m_type: NTI40252, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_175782.message = nimCopy(null, (makeNimstrLit("invalid integer: ") || []).concat(s_175776 || []), NTI36040);
		e_175782.parent = null;
		raiseException(e_175782, "ValueError");
		}
		

	return result_175777[0];

}

function ansi_escape_236170(term_236172, str_236173, offset_236175, offset_236175_Idx) {
					var Tmp3;
			var Tmp4;

		var parameters_236411 = [[]];
		offset_236175[offset_236175_Idx] += 2;
		L1: do {
				L2: while (true) {
				if (!true) break L2;
					var ch_236418 = str_236173[offset_236175[offset_236175_Idx]];
					if (contains_236451(HEX2EHEX2E_236419(48, 57), ch_236418)) {
					if ((Tmp3 = parameters_236411[(parameters_236411 != null ? (parameters_236411.length-1) : -1)], Tmp3) != null) { addChar(Tmp3, ch_236418); } else { Tmp3 = [ch_236418]; };
					}
					else {
					if ((ch_236418 == 59)) {
					if (parameters_236411 != null) { parameters_236411.push([]); } else { parameters_236411 = [[]]; };
					}
					else {
					if (contains_236451(HEX2EHEX2E_236419(65, 126), ch_236418)) {
					break L1;
					}
					else {
					}
					}}
					offset_236175[offset_236175_Idx] += 1;
				}
		} while(false);
		var op_236607 = str_236173[offset_236175[offset_236175_Idx]];
		offset_236175[offset_236175_Idx] += 1;
		switch (op_236607) {
		case 74:
			switch (toJSStr(parameters_236411[0])) {
			case "2":
				clear_236107(term_236172);
				break;
			default: 
				rawEcho(makeNimstrLit("Unimplemented: "), nimCharToStr(op_236607), makeNimstrLit(" "), HEX24_236618(parameters_236411));
				break;
			}
			break;
		case 72:
			term_236172.x = 1;
			term_236172.y = 1;
			break;
		case 109:
			if (eqStrings(parameters_236411[0], [])) {
			Tmp4 = 0;
			}
			else {
			Tmp4 = nsuParseInt(parameters_236411[0]);
			}
			
			var attr_237247 = Tmp4;
			switch (attr_237247) {
			case 30:
			case 31:
			case 32:
			case 33:
			case 34:
			case 35:
			case 36:
			case 37:
				var fmt_res_237248 = mnewString(0);
				if (fmt_res_237248 != null) { fmt_res_237248 = (fmt_res_237248).concat(makeNimstrLit("rgb(")); } else { fmt_res_237248 = makeNimstrLit("rgb("); };
				if (fmt_res_237248 != null) { fmt_res_237248 = (fmt_res_237248).concat(colours_236156[(attr_237247 - 30)]); } else { fmt_res_237248 = colours_236156[(attr_237247 - 30)].slice(); };
				if (fmt_res_237248 != null) { fmt_res_237248 = (fmt_res_237248).concat(makeNimstrLit(")")); } else { fmt_res_237248 = makeNimstrLit(")"); };
				term_236172.fg_colour = nimCopy(null, fmt_res_237248, NTI36040);
				break;
			case 38:
				if ((((parameters_236411 != null ? parameters_236411.length : 0) == 5) && eqStrings(parameters_236411[1], makeNimstrLit("2")))) {
				var fmt_res_237408 = mnewString(0);
				if (fmt_res_237408 != null) { fmt_res_237408 = (fmt_res_237408).concat(makeNimstrLit("rgb(")); } else { fmt_res_237408 = makeNimstrLit("rgb("); };
				if (fmt_res_237408 != null) { fmt_res_237408 = (fmt_res_237408).concat(parameters_236411[2]); } else { fmt_res_237408 = parameters_236411[2].slice(); };
				if (fmt_res_237408 != null) { fmt_res_237408 = (fmt_res_237408).concat(makeNimstrLit(",")); } else { fmt_res_237408 = makeNimstrLit(","); };
				if (fmt_res_237408 != null) { fmt_res_237408 = (fmt_res_237408).concat(parameters_236411[3]); } else { fmt_res_237408 = parameters_236411[3].slice(); };
				if (fmt_res_237408 != null) { fmt_res_237408 = (fmt_res_237408).concat(makeNimstrLit(",")); } else { fmt_res_237408 = makeNimstrLit(","); };
				if (fmt_res_237408 != null) { fmt_res_237408 = (fmt_res_237408).concat(parameters_236411[4]); } else { fmt_res_237408 = parameters_236411[4].slice(); };
				if (fmt_res_237408 != null) { fmt_res_237408 = (fmt_res_237408).concat(makeNimstrLit(")")); } else { fmt_res_237408 = makeNimstrLit(")"); };
				term_236172.fg_colour = nimCopy(null, fmt_res_237408, NTI36040);
				}
				
				break;
			case 40:
			case 41:
			case 42:
			case 43:
			case 44:
			case 45:
			case 46:
			case 47:
				var fmt_res_238001 = mnewString(0);
				if (fmt_res_238001 != null) { fmt_res_238001 = (fmt_res_238001).concat(makeNimstrLit("rgb(")); } else { fmt_res_238001 = makeNimstrLit("rgb("); };
				if (fmt_res_238001 != null) { fmt_res_238001 = (fmt_res_238001).concat(colours_236156[(attr_237247 - 40)]); } else { fmt_res_238001 = colours_236156[(attr_237247 - 40)].slice(); };
				if (fmt_res_238001 != null) { fmt_res_238001 = (fmt_res_238001).concat(makeNimstrLit(")")); } else { fmt_res_238001 = makeNimstrLit(")"); };
				term_236172.bg_colour = nimCopy(null, fmt_res_238001, NTI36040);
				break;
			case 48:
				if ((((parameters_236411 != null ? parameters_236411.length : 0) == 5) && eqStrings(parameters_236411[1], makeNimstrLit("2")))) {
				var fmt_res_238208 = mnewString(0);
				if (fmt_res_238208 != null) { fmt_res_238208 = (fmt_res_238208).concat(makeNimstrLit("rgb(")); } else { fmt_res_238208 = makeNimstrLit("rgb("); };
				if (fmt_res_238208 != null) { fmt_res_238208 = (fmt_res_238208).concat(parameters_236411[2]); } else { fmt_res_238208 = parameters_236411[2].slice(); };
				if (fmt_res_238208 != null) { fmt_res_238208 = (fmt_res_238208).concat(makeNimstrLit(",")); } else { fmt_res_238208 = makeNimstrLit(","); };
				if (fmt_res_238208 != null) { fmt_res_238208 = (fmt_res_238208).concat(parameters_236411[3]); } else { fmt_res_238208 = parameters_236411[3].slice(); };
				if (fmt_res_238208 != null) { fmt_res_238208 = (fmt_res_238208).concat(makeNimstrLit(",")); } else { fmt_res_238208 = makeNimstrLit(","); };
				if (fmt_res_238208 != null) { fmt_res_238208 = (fmt_res_238208).concat(parameters_236411[4]); } else { fmt_res_238208 = parameters_236411[4].slice(); };
				if (fmt_res_238208 != null) { fmt_res_238208 = (fmt_res_238208).concat(makeNimstrLit(")")); } else { fmt_res_238208 = makeNimstrLit(")"); };
				term_236172.bg_colour = nimCopy(null, fmt_res_238208, NTI36040);
				}
				
				break;
			default: 
				rawEcho(makeNimstrLit("Unimplemented: "), nimCharToStr(op_236607), makeNimstrLit(" "), HEX24_236618(parameters_236411));
				break;
			}
			break;
		default: 
			rawEcho(makeNimstrLit("Unimplemented: "), nimCharToStr(op_236607), makeNimstrLit(" "), HEX24_236618(parameters_236411));
			break;
		}

	
}

function put_ch_236123(term_236125, ch_236126, setup_236127) {
		if (setup_236127) {
		term_236125.ctx.save();
		term_236125.ctx.textAlign = "left";
		term_236125.ctx.textBaseline = "top";
		term_236125.ctx.font = toJSStr(term_236125.font);
		}
		
		fill_styleHEX3D_184128(term_236125.ctx, toJSStr(term_236125.bg_colour));
		term_236125.ctx.fillRect((term_236125.cell_width * (term_236125.x - 1)), (term_236125.cell_height * (term_236125.y - 1)), term_236125.cell_width, term_236125.cell_height);
		fill_styleHEX3D_184128(term_236125.ctx, toJSStr(term_236125.fg_colour));
		term_236125.ctx.fillText(toJSStr(nimCharToStr(ch_236126)), (term_236125.cell_width * (term_236125.x - 1)), (term_236125.cell_height * (term_236125.y - 1)));
		if (setup_236127) {
		term_236125.ctx.restore();
		}
		
		term_236125.x += 1;
		if ((term_236125.columns < term_236125.x)) {
		term_236125.x = 1;
		term_236125.y += 1;
		}
		

	
}

function write_238832(term_238834, str_238835) {
		var i_238837 = [0];
		L1: do {
				L2: while (true) {
				if (!(i_238837[0] <= (str_238835 != null ? (str_238835.length-1) : -1))) break L2;
					L3: do {
						var ch_238839 = str_238835[i_238837[0]];
						if ((ch_238839 == 13)) {
						term_238834.x = 1;
						i_238837[0] += 1;
						break L3;
						}
						else {
						if ((ch_238839 == 10)) {
						term_238834.y += 1;
						i_238837[0] += 1;
						break L3;
						}
						else {
						if ((ch_238839 == 27)) {
						ansi_escape_236170(term_238834, str_238835, i_238837, 0);
						break L3;
						}
						}}
						term_238834.ctx.save();
						fill_styleHEX3D_184128(term_238834.ctx, toJSStr(term_238834.bg_colour));
						term_238834.ctx.textAlign = "left";
						term_238834.ctx.textBaseline = "top";
						fill_styleHEX3D_184128(term_238834.ctx, toJSStr(term_238834.fg_colour));
						term_238834.ctx.font = toJSStr(term_238834.font);
						put_ch_236123(term_238834, str_238835[i_238837[0]], false);
						term_238834.ctx.restore();
						i_238837[0] += 1;
					} while(false);
				}
		} while(false);

	
}

function erase_screen_240256(f_240259) {
		write_238832(f_240259, makeNimstrLit("\x1B[H\x1B[2J"));

	
}

function output_189448(map_189451, map_189451_Idx) {

										function change_colour_189454(new_colour_189456) {
											var result_189457 = null;

												if (!(eqStrings(colour_189453, new_colour_189456))) {
												result_189457 = nimCopy(null, (makeNimstrLit("\x1B[") || []).concat(new_colour_189456 || [],makeNimstrLit("m") || []), NTI36040);
												colour_189453 = nimCopy(null, new_colour_189456, NTI36040);
												}
												else {
													result_189457 = nimCopy(null, [], NTI36040);
												}
												

											return result_189457;

										}
												var Tmp7;
											var Tmp8;
												var Tmp9;
											var Tmp10;
											var Tmp11;
												var Tmp12;
												var Tmp13;
										var Tmp17;
										var Tmp18;
											var Tmp19;
											var Tmp20;

	var result_189452 = null;

		var colour_189453 = null;
		L1: do {
			var row_189479 = null;
			var colontmp__241069 = null;
			colontmp__241069 = map_189451[map_189451_Idx];
			var i_241071 = 0;
			var l_241072 = (colontmp__241069 != null ? colontmp__241069.length : 0);
			L2: do {
					L3: while (true) {
					if (!(i_241071 < l_241072)) break L3;
						row_189479 = colontmp__241069[i_241071];
						var npcs_189481 = null;
						L4: do {
							var tile_189488 = null;
							var i_241061 = 0;
							var l_241062 = (row_189479 != null ? row_189479.length : 0);
							L5: do {
									L6: while (true) {
									if (!(i_241061 < l_241062)) break L6;
										tile_189488 = row_189479[i_241061];
										if ((tile_189488.kind == 0)) {
										if (result_189452 != null) { result_189452 = (result_189452).concat(change_colour_189454(makeNimstrLit("37"))); } else { result_189452 = change_colour_189454(makeNimstrLit("37")).slice(); };
										if (result_189452 != null) { addChar(result_189452, 35); } else { result_189452 = [35]; };
										}
										else {
												var Tmp7 = tile_189488;
												if (ConstSet32[Tmp7.kind]===undefined) { raiseFieldError(makeNimstrLit("npc")); }
											if (!((Tmp7.npc == null))) {
											var Tmp8 = tile_189488;
											if (ConstSet33[Tmp8.kind]===undefined) { raiseFieldError(makeNimstrLit("npc")); }
											if (npcs_189481 != null) { npcs_189481.push(Tmp8.npc); } else { npcs_189481 = [Tmp8.npc]; };
												var Tmp9 = tile_189488;
												if (ConstSet34[Tmp9.kind]===undefined) { raiseFieldError(makeNimstrLit("npc")); }
											if ((Tmp9.npc.kind == 0)) {
											var Tmp10 = tile_189488;
											if (ConstSet36[Tmp10.kind]===undefined) { raiseFieldError(makeNimstrLit("npc")); }
											var Tmp11 = Tmp10.npc;
											if (ConstSet35[Tmp11.kind]===undefined) { raiseFieldError(makeNimstrLit("hp")); }
											if (result_189452 != null) { result_189452 = (result_189452).concat(change_colour_189454((makeNimstrLit("38;2;") || []).concat(cstrToNimstr(((Tmp11.hp + 40))+"") || [],makeNimstrLit(";0;0") || []))); } else { result_189452 = change_colour_189454((makeNimstrLit("38;2;") || []).concat(cstrToNimstr(((Tmp11.hp + 40))+"") || [],makeNimstrLit(";0;0") || [])).slice(); };
											if (result_189452 != null) { addChar(result_189452, 71); } else { result_189452 = [71]; };
											}
											else {
												var Tmp12 = tile_189488;
												if (ConstSet38[Tmp12.kind]===undefined) { raiseFieldError(makeNimstrLit("npc")); }
												var Tmp13 = Tmp12.npc;
												if (ConstSet37[Tmp13.kind]===undefined) { raiseFieldError(makeNimstrLit("hp")); }
												if (result_189452 != null) { result_189452 = (result_189452).concat(change_colour_189454((makeNimstrLit("38;2;0;") || []).concat(cstrToNimstr(((Tmp13.hp + 40))+"") || [],makeNimstrLit(";0") || []))); } else { result_189452 = change_colour_189454((makeNimstrLit("38;2;0;") || []).concat(cstrToNimstr(((Tmp13.hp + 40))+"") || [],makeNimstrLit(";0") || [])).slice(); };
												if (result_189452 != null) { addChar(result_189452, 69); } else { result_189452 = [69]; };
											}
											
											}
											else {
												if (result_189452 != null) { result_189452 = (result_189452).concat(change_colour_189454(makeNimstrLit("33"))); } else { result_189452 = change_colour_189454(makeNimstrLit("33")).slice(); };
												if (result_189452 != null) { addChar(result_189452, 46); } else { result_189452 = [46]; };
											}
											
										}
										
										i_241061 += 1;
									}
							} while(false);
						} while(false);
						if (!(((npcs_189481 != null ? npcs_189481.length : 0) == 0))) {
						if (result_189452 != null) { result_189452 = (result_189452).concat(makeNimstrLit(" <-")); } else { result_189452 = makeNimstrLit(" <-"); };
						L14: do {
							var npc_189614 = null;
							var i_241066 = 0;
							var l_241067 = (npcs_189481 != null ? npcs_189481.length : 0);
							L15: do {
									L16: while (true) {
									if (!(i_241066 < l_241067)) break L16;
										npc_189614 = npcs_189481[i_241066];
										if ((npc_189614.kind == 0)) {
										var Tmp17 = npc_189614;
										if (ConstSet39[Tmp17.kind]===undefined) { raiseFieldError(makeNimstrLit("hp")); }
										if (result_189452 != null) { result_189452 = (result_189452).concat(change_colour_189454((makeNimstrLit("38;2;") || []).concat(cstrToNimstr(((Tmp17.hp + 40))+"") || [],makeNimstrLit(";0;0") || []))); } else { result_189452 = change_colour_189454((makeNimstrLit("38;2;") || []).concat(cstrToNimstr(((Tmp17.hp + 40))+"") || [],makeNimstrLit(";0;0") || [])).slice(); };
										var Tmp18 = npc_189614;
										if (ConstSet40[Tmp18.kind]===undefined) { raiseFieldError(makeNimstrLit("hp")); }
										if (result_189452 != null) { result_189452 = (result_189452).concat((makeNimstrLit(" G:") || []).concat(cstrToNimstr((Tmp18.hp)+"") || [])); } else { result_189452 = (makeNimstrLit(" G:") || []).concat(cstrToNimstr((Tmp18.hp)+"") || []).slice(); };
										}
										else {
											var Tmp19 = npc_189614;
											if (ConstSet41[Tmp19.kind]===undefined) { raiseFieldError(makeNimstrLit("hp")); }
											if (result_189452 != null) { result_189452 = (result_189452).concat(change_colour_189454((makeNimstrLit("38;2;0;") || []).concat(cstrToNimstr(((Tmp19.hp + 40))+"") || [],makeNimstrLit(";0") || []))); } else { result_189452 = change_colour_189454((makeNimstrLit("38;2;0;") || []).concat(cstrToNimstr(((Tmp19.hp + 40))+"") || [],makeNimstrLit(";0") || [])).slice(); };
											var Tmp20 = npc_189614;
											if (ConstSet42[Tmp20.kind]===undefined) { raiseFieldError(makeNimstrLit("hp")); }
											if (result_189452 != null) { result_189452 = (result_189452).concat((makeNimstrLit(" E:") || []).concat(cstrToNimstr((Tmp20.hp)+"") || [])); } else { result_189452 = (makeNimstrLit(" E:") || []).concat(cstrToNimstr((Tmp20.hp)+"") || []).slice(); };
										}
										
										i_241066 += 1;
									}
							} while(false);
						} while(false);
						}
						
						if (result_189452 != null) { result_189452 = (result_189452).concat(makeNimstrLit("\x0D\x0A")); } else { result_189452 = makeNimstrLit("\x0D\x0A"); };
						i_241071 += 1;
					}
			} while(false);
		} while(false);

	return result_189452;

}

function remaining_hitpoints_192864(map_192867, map_192867_Idx) {
											var Tmp7;
												var Tmp8;
										var Tmp9;
										var Tmp10;

	var result_192868 = 0;

		L1: do {
			var y_192882 = 0;
			var colontmp__241082 = 0;
			colontmp__241082 = ((map_192867[map_192867_Idx] != null ? map_192867[map_192867_Idx].length : 0) - 1);
			var res_241083 = 0;
			L2: do {
					L3: while (true) {
					if (!(res_241083 <= colontmp__241082)) break L3;
						y_192882 = res_241083;
						L4: do {
							var x_192896 = 0;
							var colontmp__241076 = 0;
							colontmp__241076 = ((map_192867[map_192867_Idx][0] != null ? map_192867[map_192867_Idx][0].length : 0) - 1);
							var res_241077 = 0;
							L5: do {
									L6: while (true) {
									if (!(res_241077 <= colontmp__241076)) break L6;
										x_192896 = res_241077;
											if (!(map_192867[map_192867_Idx][y_192882][x_192896].kind == 1)) Tmp7 = false; else {												var Tmp8 = map_192867[map_192867_Idx][y_192882][x_192896];
												if (ConstSet43[Tmp8.kind]===undefined) { raiseFieldError(makeNimstrLit("npc")); }
												Tmp7 = !((Tmp8.npc == null));											}										if (Tmp7) {
										var Tmp9 = map_192867[map_192867_Idx][y_192882][x_192896];
										if (ConstSet45[Tmp9.kind]===undefined) { raiseFieldError(makeNimstrLit("npc")); }
										var Tmp10 = Tmp9.npc;
										if (ConstSet44[Tmp10.kind]===undefined) { raiseFieldError(makeNimstrLit("hp")); }
										result_192868 += Tmp10.hp;
										}
										
										res_241077 += 1;
									}
							} while(false);
						} while(false);
						res_241083 += 1;
					}
			} while(false);
		} while(false);

	return result_192868;

}

function substr_60622(s_60624, first_60625, last_60626) {
	var result_60627 = null;

		var first_60628 = nimMax(first_60625, 0);
		var l_60630 = nimMax(((nimMin(last_60626, (s_60624 != null ? (s_60624.length-1) : -1)) - first_60628) + 1), 0);
		result_60627 = nimCopy(null, mnewString(l_60630), NTI36040);
		L1: do {
			var i_60639 = 0;
			var colontmp__241097 = 0;
			colontmp__241097 = (l_60630 - 1);
			var res_241098 = 0;
			L2: do {
					L3: while (true) {
					if (!(res_241098 <= colontmp__241097)) break L3;
						i_60639 = res_241098;
						result_60627[i_60639] = s_60624[(i_60639 + first_60628)];
						res_241098 += 1;
					}
			} while(false);
		} while(false);

	return result_60627;

}

function nsuSplitChar(s_174854, sep_174855, maxsplit_174857) {
	var result_174859 = null;

		result_174859 = nimCopy(null, [], NTI174873);
		L1: do {
			var x_174860 = null;
			var last_241091 = 0;
			var splits_241092 = maxsplit_174857;
			L2: do {
					L3: while (true) {
					if (!(last_241091 <= (s_174854 != null ? s_174854.length : 0))) break L3;
						var first_241094 = last_241091;
						L4: do {
								L5: while (true) {
								if (!((last_241091 < (s_174854 != null ? s_174854.length : 0)) && !((s_174854[last_241091] == sep_174855)))) break L5;
									last_241091 += 1;
								}
						} while(false);
						if ((splits_241092 == 0)) {
						last_241091 = (s_174854 != null ? s_174854.length : 0);
						}
						
						x_174860 = substr_60622(s_174854, first_241094, (last_241091 - 1));
						var Tmp6 = nimCopy(null, x_174860, NTI36040);
						if (result_174859 != null) { result_174859.push(Tmp6); } else { result_174859 = [Tmp6]; };
						if ((splits_241092 == 0)) {
						break L2;
						}
						
						splits_241092 -= 1;
						last_241091 += 1;
					}
			} while(false);
		} while(false);

	return result_174859;

}

function nsuStrip(s_180365, leading_180366, trailing_180367, chars_180369) {
					var Tmp5;

	var result_180370 = null;

		var first_180372 = 0;
		var last_180373 = ((s_180365 != null ? s_180365.length : 0) - 1);
		if (leading_180366) {
		L1: do {
				L2: while (true) {
				if (!((first_180372 <= last_180373) && (chars_180369[s_180365[first_180372]] != undefined))) break L2;
					first_180372 += 1;
				}
		} while(false);
		}
		
		if (trailing_180367) {
		L3: do {
				L4: while (true) {
					if (!(0 <= last_180373)) Tmp5 = false; else {						Tmp5 = (chars_180369[s_180365[last_180373]] != undefined);					}				if (!Tmp5) break L4;
					last_180373 -= 1;
				}
		} while(false);
		}
		
		result_180370 = nimCopy(null, substr_60622(s_180365, first_180372, last_180373), NTI36040);

	return result_180370;

}

function get_map_240014(name_240016) {
							var Tmp4;

	var result_240017 = null;

	BeforeRet: do {
		var result_240018 = new_seq_240024(0);
		L1: do {
			var it_240214 = null;
			var colontmp__241106 = null;
			colontmp__241106 = document.getElementsByTagName("script");
			var i_241107 = 0;
			var l_241108 = (colontmp__241106 != null ? colontmp__241106.length : 0);
			L2: do {
					L3: while (true) {
					if (!(i_241107 < l_241108)) break L3;
						it_240214 = colontmp__241106[i_241107];
							if (!(it_240214.getAttribute("type") == "text/x-game-map")) Tmp4 = false; else {								Tmp4 = (it_240214.getAttribute("id") == toJSStr(name_240016));							}						if (Tmp4) {
						if (result_240018 != null) { result_240018.push(it_240214); } else { result_240018 = [it_240214]; };
						}
						
						i_241107 += 1;
					}
			} while(false);
		} while(false);
		var maps_240222 = nimCopy(null, result_240018, NTI240028);
		result_240017 = nimCopy(null, cstrToNimstr(maps_240222[0].innerHTML), NTI36040);
		break BeforeRet;
	} while (false);

	return result_240017;

}

function new_seq_240619(len_240622) {
	var result_240624 = null;

		result_240624 = new Array(len_240622); for (var i=0;i<len_240622;++i) {result_240624[i]=null;}
	return result_240624;

}

function new_seq_190613(len_190616) {
	var result_190618 = null;

		result_190618 = new Array(len_190616); for (var i=0;i<len_190616;++i) {result_190618[i]=null;}
	return result_190618;

}

function new_seq_190568(len_190571) {
	var result_190573 = null;

		result_190573 = new Array(len_190571); for (var i=0;i<len_190571;++i) {result_190573[i]=null;}
	return result_190573;

}

function init_190549(area_190552, input_190554, attack_190555) {
											var Tmp10;
											var Tmp11;

		var height_190561 = (input_190554 != null ? input_190554.length : 0);
		var width_190562 = (input_190554[0] != null ? input_190554[0].length : 0);
		var result_190563 = new_seq_190613(height_190561);
		L1: do {
			var i_190564 = 0;
			var i_241111 = 0;
			L2: do {
					L3: while (true) {
					if (!(i_241111 < height_190561)) break L3;
						i_190564 = i_241111;
						result_190563[i_190564] = nimCopy(null, new_seq_190568(width_190562), NTI190572);
						i_241111 += 1;
					}
			} while(false);
		} while(false);
		area_190552.map = nimCopy(null, result_190563, NTI190617);
		area_190552.npc_locations = nimCopy(null, [], NTI190680);
		area_190552.elves = 0;
		area_190552.goblins = 0;
		L4: do {
			var y_190717 = 0;
			var line_190718 = null;
			var i_241124 = 0;
			L5: do {
					L6: while (true) {
					if (!(i_241124 < (input_190554 != null ? input_190554.length : 0))) break L6;
						y_190717 = i_241124;
						line_190718 = input_190554[i_241124];
						L7: do {
							var x_190720 = 0;
							var ch_190721 = 0;
							var i_241121 = 0;
							L8: do {
									L9: while (true) {
									if (!(i_241121 < (line_190718 != null ? line_190718.length : 0))) break L9;
										x_190720 = i_241121;
										ch_190721 = line_190718[i_241121];
										if ((ch_190721 == 35)) {
										area_190552.map[y_190717][x_190720] = {kind: 0, npc: null};
										}
										else {
											area_190552.map[y_190717][x_190720] = {kind: 1, npc: null};
											if ((ch_190721 == 71)) {
											var Tmp10 = area_190552.map[y_190717][x_190720];
											if (ConstSet48[Tmp10.kind]===undefined) { raiseFieldError(makeNimstrLit("npc")); }
											Tmp10.npc = {kind: 0, attack: 3, hp: 200, moved: false};
											if (area_190552.npc_locations != null) { area_190552.npc_locations.push({Field0: x_190720, Field1: y_190717}); } else { area_190552.npc_locations = [{Field0: x_190720, Field1: y_190717}]; };
											area_190552.goblins += 1;
											}
											else {
											if ((ch_190721 == 69)) {
											var Tmp11 = area_190552.map[y_190717][x_190720];
											if (ConstSet49[Tmp11.kind]===undefined) { raiseFieldError(makeNimstrLit("npc")); }
											Tmp11.npc = {kind: 1, attack: attack_190555, hp: 200, moved: false};
											if (area_190552.npc_locations != null) { area_190552.npc_locations.push({Field0: x_190720, Field1: y_190717}); } else { area_190552.npc_locations = [{Field0: x_190720, Field1: y_190717}]; };
											area_190552.elves += 1;
											}
											}
										}
										
										i_241121 += 1;
									}
							} while(false);
						} while(false);
						i_241124 += 1;
					}
			} while(false);
		} while(false);

	
}

function HEX3Aanonymous_240236(e_240239) {

function render_240254() {
		erase_screen_240256(terminal_240251);
		write_238832(terminal_240251, output_189448(area_240240[0], "map"));
		write_238832(terminal_240251, makeNimstrLit("\x0D\x0A\x0A"));
		write_238832(terminal_240251, (makeNimstrLit("Iteration: ") || []).concat(cstrToNimstr((i_240242)+"") || [],makeNimstrLit("\x0D\x0A") || []));
		write_238832(terminal_240251, (makeNimstrLit("Elves:     ") || []).concat(cstrToNimstr((area_240240[0].elves)+"") || [],makeNimstrLit("\x0D\x0A") || []));
		write_238832(terminal_240251, (makeNimstrLit("Goblins:   ") || []).concat(cstrToNimstr((area_240240[0].goblins)+"") || [],makeNimstrLit("\x0D\x0A") || []));
		var hp_remaining_240275 = remaining_hitpoints_192864(area_240240[0], "map");
		write_238832(terminal_240251, (makeNimstrLit("Total HP:  ") || []).concat(cstrToNimstr((hp_remaining_240275)+"") || [],makeNimstrLit("\x0D\x0A") || []));

	
}

function step_240675() {
	var result_240677 = false;

	BeforeRet: do {
		i_240242 += 1;
		var done_240685 = round_192932(area_240240[0], false);
		render_240254();
		if (done_240685) {
		result_240677 = true;
		break BeforeRet;
		}
		
		result_240677 = false;
		break BeforeRet;
	} while (false);

	return result_240677;

}

		function do_step_240699(e_240701) {

				function fn_240702() {
						step_240675();
						step_button_240246.disabled = false;

					
				}

				step_button_240246.disabled = true;
				input_select_240243.disabled = true;
				attack_slider_240244.disabled = true;
				window.setTimeout(fn_240702, 0);

			
		}

function do_pause_240733(e_240735) {
		run_button_240247.removeEventListener("click", do_pause_240733);
		run_button_240247.addEventListener("click", do_run_240730, false);
		step_button_240246.disabled = false;
		run_button_240247.innerHTML = "<i class='fas fa-running'>";
		window.clearInterval(timeout_240253);

	
}

		function do_run_240730(e_240732) {

				function fn_240752() {
					BeforeRet: do {
						if (step_240675()) {
						step_button_240246.disabled = true;
						run_button_240247.disabled = true;
						input_select_240243.disabled = true;
						break BeforeRet;
						}
						
						timeout_240253 = window.setTimeout(fn_240752, 500);
					} while (false);

					
				}

				step_button_240246.disabled = true;
				input_select_240243.disabled = true;
				attack_slider_240244.disabled = true;
				run_button_240247.innerHTML = "<i class='fas fa-pause'>";
				run_button_240247.removeEventListener("click", do_run_240730);
				run_button_240247.addEventListener("click", do_pause_240733, false);
				window.setTimeout(fn_240752, 0);

			
		}

function initialise_240289(name_240291, attack_240292) {
		L1: do {
			var HEX3Atmp_240608 = nsuSplitChar(nsuStrip(get_map_240014(name_240291), true, true, ConstSet46), 10, -1);
			var i_240295 = 0;
			var result_240296 = new_seq_240619((HEX3Atmp_240608 != null ? HEX3Atmp_240608.length : 0));
			L2: do {
				var it_240651 = null;
				var i_240918 = 0;
				var l_240919 = (HEX3Atmp_240608 != null ? HEX3Atmp_240608.length : 0);
				L3: do {
						L4: while (true) {
						if (!(i_240918 < l_240919)) break L4;
							it_240651 = HEX3Atmp_240608[i_240918];
							result_240296[i_240295] = nimCopy(null, nsuStrip(it_240651, true, true, ConstSet47), NTI36040);
							i_240295 += 1;
							i_240918 += 1;
						}
				} while(false);
			} while(false);
		} while(false);
		var input_240660 = nimCopy(null, result_240296, NTI240623);
		clear_236107(terminal_240251);
		init_190549(area_240240[0], input_240660, attack_240292);
		i_240242 = 0;
		render_240254();

	
}

		function do_reset_240781(e_240783) {
				run_button_240247.removeEventListener("click", do_pause_240733);
				run_button_240247.removeEventListener("click", do_run_240730);
				run_button_240247.addEventListener("click", do_run_240730, false);
				step_button_240246.disabled = false;
				run_button_240247.disabled = false;
				input_select_240243.disabled = false;
				attack_slider_240244.disabled = false;
				run_button_240247.innerHTML = "<i class='fas fa-running'>";
				window.clearInterval(timeout_240253);
				initialise_240289(cstrToNimstr(input_select_240243.options[input_select_240243.selectedIndex].value), nsuParseInt(cstrToNimstr(attack_slider_240244.value)));

			
		}

		function do_slider_change_240797(e_240799) {
				attack_slider_value_240245.innerHTML = attack_slider_240244.value;
				do_reset_240781(e_240799);

			
		}

		function do_slider_update_240813(e_240815) {
				attack_slider_value_240245.innerHTML = attack_slider_240244.value;

			
		}

		function do_slider_key_240829(e_240831) {
				attack_slider_240244.value = toJSStr(cstrToNimstr(((nsuParseInt(cstrToNimstr(attack_slider_240244.value)) + 1))+""));
				attack_slider_value_240245.innerHTML = attack_slider_240244.value;

			
		}

		var area_240240 = [{map: null, npc_locations: null, elves: 0, goblins: 0}];
		var i_240242 = 0;
		var input_select_240243 = document.getElementById("input-select");
		var attack_slider_240244 = document.getElementById("attack-slider");
		var attack_slider_value_240245 = document.getElementById("attack-slider-value");
		var step_button_240246 = document.getElementById("step-button");
		var run_button_240247 = document.getElementById("run-button");
		var reset_button_240248 = document.getElementById("reset-button");
		var terminal_element_240249 = document.getElementById("terminal");
		var terminal_240251 = new_terminal_238878(terminal_element_240249, 80, 25);
		var timeout_240253 = null;
		clear_236107(terminal_240251);
		var result_240845 = new_seq_240024(0);
		L1: do {
			var it_240862 = null;
			var colontmp__240906 = null;
			colontmp__240906 = document.getElementsByTagName("script");
			var i_240908 = 0;
			var l_240909 = (colontmp__240906 != null ? colontmp__240906.length : 0);
			L2: do {
					L3: while (true) {
					if (!(i_240908 < l_240909)) break L3;
						it_240862 = colontmp__240906[i_240908];
						if ((it_240862.getAttribute("type") == "text/x-game-map")) {
						if (result_240845 != null) { result_240845.push(it_240862); } else { result_240845 = [it_240862]; };
						}
						
						i_240908 += 1;
					}
			} while(false);
		} while(false);
		var maps_240870 = nimCopy(null, result_240845, NTI240028);
		L4: do {
			var map_240877 = null;
			var i_240912 = 0;
			var l_240913 = (maps_240870 != null ? maps_240870.length : 0);
			L5: do {
					L6: while (true) {
					if (!(i_240912 < l_240913)) break L6;
						map_240877 = maps_240870[i_240912];
						var option_240878 = document.createElement("option");
						option_240878.text = map_240877.getAttribute("id");
						option_240878.value = map_240877.getAttribute("id");
						input_select_240243.appendChild(option_240878);
						i_240912 += 1;
					}
			} while(false);
		} while(false);
		step_button_240246.addEventListener("click", do_step_240699, false);
		run_button_240247.addEventListener("click", do_run_240730, false);
		reset_button_240248.addEventListener("click", do_reset_240781, false);
		input_select_240243.addEventListener("change", do_reset_240781, false);
		attack_slider_240244.addEventListener("change", do_slider_change_240797, false);
		attack_slider_240244.addEventListener("input", do_slider_update_240813, false);
		attack_slider_240244.addEventListener("keydown", do_slider_key_240829, false);
		initialise_240289(makeNimstrLit("input"), 3);

	
}
window.onload = HEX3Aanonymous_240236;
